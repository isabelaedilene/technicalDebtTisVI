file path,line #,comment,satd
celery/setup.py,1,!/usr/bin/env python,not
celery/setup.py,2,-*- coding: utf-8 -*-,not
celery/setup.py,19,-*- Python Versions -*-,not
celery/setup.py,52,-*- Extras -*-,not
celery/setup.py,89,-*- Distribution Meta -*-,not
celery/setup.py,119,-*- Requirements -*-,not
celery/setup.py,167,-*- Long Description -*-,not
celery/setup.py,176,-*- Command: setup.py test -*-,not
celery/setup.py,190,-*- %%% -*-,not
celery/examples/periodic-tasks/myapp.py,35,"XXX The below 'myapp' is the name of this module, for generating",SATD
celery/examples/periodic-tasks/myapp.py,36,task names when executed as __main__.,not
celery/examples/periodic-tasks/myapp.py,39,## add result backend here if needed.,not
celery/examples/periodic-tasks/myapp.py,40,backend='rpc',not
celery/examples/periodic-tasks/myapp.py,53,Calls say('hello') every 10 seconds.,not
celery/examples/periodic-tasks/myapp.py,56,See periodic tasks user guide for more examples:,not
celery/examples/periodic-tasks/myapp.py,57,http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html,not
celery/examples/app/myapp.py,32,## add result backend here if needed.,not
celery/examples/app/myapp.py,33,backend='rpc',not
celery/examples/next-steps/setup.py,27,"'requests',",not
celery/examples/next-steps/proj/celery.py,10,"Optional configuration, see the application user guide.",not
celery/examples/celery_http_gateway/manage.py,1,!/usr/bin/env python,not
celery/examples/celery_http_gateway/manage.py,7,Assumed to be in the same directory.,not
celery/examples/celery_http_gateway/urls.py,3,noqa,not
celery/examples/celery_http_gateway/urls.py,9,Uncomment the next two lines to enable the admin:,not
celery/examples/celery_http_gateway/urls.py,10,from django.contrib import admin,not
celery/examples/celery_http_gateway/urls.py,11,admin.autodiscover(),not
celery/examples/celery_http_gateway/settings.py,5,Django settings for celery_http_gateway project.,not
celery/examples/celery_http_gateway/settings.py,15,"('Your Name', 'your_email@domain.com'),",not
celery/examples/celery_http_gateway/settings.py,39,Local time zone for this installation. Choices can be found here:,not
celery/examples/celery_http_gateway/settings.py,40,https://en.wikipedia.org/wiki/List_of_tz_zones_by_name,not
celery/examples/celery_http_gateway/settings.py,41,although not all choices may be available on all operating systems.,not
celery/examples/celery_http_gateway/settings.py,42,If running in a Windows environment this must be set to the same as your,not
celery/examples/celery_http_gateway/settings.py,43,system time zone.,not
celery/examples/celery_http_gateway/settings.py,46,Language code for this installation. All choices can be found here:,not
celery/examples/celery_http_gateway/settings.py,47,http://www.i18nguy.com/unicode/language-identifiers.html,not
celery/examples/celery_http_gateway/settings.py,52,"If you set this to False, Django will make some optimizations so as not",not
celery/examples/celery_http_gateway/settings.py,53,to load the internationalization machinery.,not
celery/examples/celery_http_gateway/settings.py,56,Absolute path to the directory that holds media.,not
celery/examples/celery_http_gateway/settings.py,57,Example: '/home/media/media.lawrence.com/',not
celery/examples/celery_http_gateway/settings.py,60,URL that handles the media served from MEDIA_ROOT. Make sure to use a,not
celery/examples/celery_http_gateway/settings.py,61,trailing slash if there's a path component (optional in other cases).,not
celery/examples/celery_http_gateway/settings.py,62,"Examples: 'http://media.lawrence.com', 'http://example.com/media/'",not
celery/examples/celery_http_gateway/settings.py,65,"URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a",not
celery/examples/celery_http_gateway/settings.py,66,trailing slash.,not
celery/examples/celery_http_gateway/settings.py,67,"Examples: 'http://foo.com/media/', '/media/'.",not
celery/examples/celery_http_gateway/settings.py,70,"Make this unique, and don't share it with anybody.",not
celery/examples/celery_http_gateway/settings.py,71,"XXX TODO FIXME Set this secret key to anything you want, just change it!",SATD
celery/examples/celery_http_gateway/settings.py,74,List of callables that know how to import templates from various sources.,not
celery/examples/celery_http_gateway/settings.py,89,"Put strings here, like '/home/html/django_templates' or",not
celery/examples/celery_http_gateway/settings.py,90,'C:/www/django/templates'.,not
celery/examples/celery_http_gateway/settings.py,91,"Always use forward slashes, even on Windows.",not
celery/examples/celery_http_gateway/settings.py,92,"Don't forget to use absolute paths, not relative paths.",not
celery/examples/django/manage.py,1,!/usr/bin/env python,not
celery/examples/django/proj/urls.py,3,noqa,not
celery/examples/django/proj/urls.py,5,Uncomment the next two lines to enable the admin:,not
celery/examples/django/proj/urls.py,6,from django.contrib import admin,not
celery/examples/django/proj/urls.py,7,admin.autodiscover(),not
celery/examples/django/proj/urls.py,10,Examples:,not
celery/examples/django/proj/urls.py,11,"url(r'^$', 'proj.views.home', name='home'),",not
celery/examples/django/proj/urls.py,12,"url(r'^proj/', include('proj.foo.urls')),",not
celery/examples/django/proj/urls.py,14,Uncomment the admin/doc line below to enable admin documentation:,not
celery/examples/django/proj/urls.py,15,"url(r'^admin/doc/', include('django.contrib.admindocs.urls')),",not
celery/examples/django/proj/urls.py,17,Uncomment the next line to enable the admin:,not
celery/examples/django/proj/urls.py,18,"url(r'^admin/', include(admin.site.urls)),",not
celery/examples/django/proj/__init__.py,3,This will make sure the app is always imported when,not
celery/examples/django/proj/__init__.py,4,Django starts so that shared_task will use this app.,not
celery/examples/django/proj/settings.py,5,^^^ The above is required if you want to import from the celery,not
celery/examples/django/proj/settings.py,6,library.  If you don't have this then `from celery.schedules import`,not
celery/examples/django/proj/settings.py,7,becomes `proj.celery.schedules` in Python 2.x since it allows,not
celery/examples/django/proj/settings.py,8,for relative imports by default.,not
celery/examples/django/proj/settings.py,10,Celery settings,not
celery/examples/django/proj/settings.py,14,: Only add pickle to this list if your broker is secured,not
celery/examples/django/proj/settings.py,15,: from unwanted access (see userguide/security.html),not
celery/examples/django/proj/settings.py,34,"Build paths inside the project like this: os.path.join(BASE_DIR, ...)",not
celery/examples/django/proj/settings.py,38,Quick-start development settings - unsuitable for production,not
celery/examples/django/proj/settings.py,39,See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/,not
celery/examples/django/proj/settings.py,41,SECURITY WARNING: keep the secret key used in production secret!,not
celery/examples/django/proj/settings.py,44,SECURITY WARNING: don't run with debug turned on in production!,not
celery/examples/django/proj/settings.py,50,Application definition,not
celery/examples/django/proj/settings.py,93,Database,not
celery/examples/django/proj/settings.py,94,https://docs.djangoproject.com/en/2.2/ref/settings/#databases,not
celery/examples/django/proj/settings.py,104,Password validation,not
celery/examples/django/proj/settings.py,105,https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators,not
celery/examples/django/proj/settings.py,123,Internationalization,not
celery/examples/django/proj/settings.py,124,https://docs.djangoproject.com/en/2.2/topics/i18n/,not
celery/examples/django/proj/settings.py,137,"Static files (CSS, JavaScript, Images)",not
celery/examples/django/proj/settings.py,138,https://docs.djangoproject.com/en/2.2/howto/static-files/,not
celery/examples/django/proj/celery.py,7,set the default Django settings module for the 'celery' program.,not
celery/examples/django/proj/celery.py,12,Using a string here means the worker doesn't have to serialize,not
celery/examples/django/proj/celery.py,13,the configuration object to child processes.,not
celery/examples/django/proj/celery.py,14,- namespace='CELERY' means all celery-related configuration keys,not
celery/examples/django/proj/celery.py,15,should have a `CELERY_` prefix.,not
celery/examples/django/proj/celery.py,18,Load task modules from all registered Django app configs.,not
celery/examples/django/proj/wsgi.py,20,This application object is used by any WSGI server configured to use this,not
celery/examples/django/proj/wsgi.py,21,"file. This includes Django's development server, if the WSGI_APPLICATION",not
celery/examples/django/proj/wsgi.py,22,setting points here.,not
celery/examples/django/proj/wsgi.py,23,noqa,not
celery/examples/django/proj/wsgi.py,29,Apply WSGI middleware here.,not
celery/examples/django/proj/wsgi.py,30,from helloworld.wsgi import HelloWorldApplication,not
celery/examples/django/proj/wsgi.py,31,application = HelloWorldApplication(application),not
celery/examples/django/demoapp/tasks.py,1,Create your tasks here,not
celery/examples/django/demoapp/views.py,3,Create your views here.,not
celery/examples/django/demoapp/models.py,3,noqa,not
celery/examples/django/demoapp/migrations/0001_initial.py,1,Generated by Django 2.2.1 on 2019-05-24 21:37,not
celery/examples/resultgraph/tasks.py,1,Example::,not
celery/examples/resultgraph/tasks.py,2,>>> R = A.apply_async(),not
celery/examples/resultgraph/tasks.py,3,>>> list(joinall(R)),not
celery/examples/resultgraph/tasks.py,4,"[['A 0', 'A 1', 'A 2', 'A 3', 'A 4', 'A 5', 'A 6', 'A 7', 'A 8', 'A 9'],",not
celery/examples/resultgraph/tasks.py,5,"['B 0', 'B 1', 'B 2', 'B 3', 'B 4', 'B 5', 'B 6', 'B 7', 'B 8', 'B 9'],",not
celery/examples/resultgraph/tasks.py,6,"['C 0', 'C 1', 'C 2', 'C 3', 'C 4', 'C 5', 'C 6', 'C 7', 'C 8', 'C 9'],",not
celery/examples/resultgraph/tasks.py,7,"['D 0', 'D 1', 'D 2', 'D 3', 'D 4', 'D 5', 'D 6', 'D 7', 'D 8', 'D 9'],",not
celery/examples/resultgraph/tasks.py,8,"['E 0', 'E 1', 'E 2', 'E 3', 'E 4', 'E 5', 'E 6', 'E 7', 'E 8', 'E 9'],",not
celery/examples/resultgraph/tasks.py,9,"['F 0', 'F 1', 'F 2', 'F 3', 'F 4', 'F 5', 'F 6', 'F 7', 'F 8', 'F 9'],",not
celery/examples/resultgraph/tasks.py,10,"['G 0', 'G 1', 'G 2', 'G 3', 'G 4', 'G 5', 'G 6', 'G 7', 'G 8', 'G 9'],",not
celery/examples/resultgraph/tasks.py,11,"['H 0', 'H 1', 'H 2', 'H 3', 'H 4', 'H 5', 'H 6', 'H 7', 'H 8', 'H 9']]",not
celery/examples/resultgraph/tasks.py,12,,not
celery/examples/resultgraph/tasks.py,13,,not
celery/examples/resultgraph/tasks.py,14,Joining the graph asynchronously with a callback,not
celery/examples/resultgraph/tasks.py,15,"(Note: only two levels, the deps are considered final",not
celery/examples/resultgraph/tasks.py,16,when the second task is ready).,not
celery/examples/resultgraph/tasks.py,17,,not
celery/examples/resultgraph/tasks.py,18,">>> unlock_graph.apply_async((A.apply_async(),",not
celery/examples/resultgraph/tasks.py,19,"...                           A_callback.s()), countdown=1)",not
celery/examples/gevent/celeryconfig.py,8,"## Note: Start worker with -P gevent,",not
celery/examples/gevent/celeryconfig.py,9,do not use the worker_pool option.,not
celery/examples/eventlet/webcrawler.py,35,noqa,not
celery/examples/eventlet/webcrawler.py,37,http://daringfireball.net/2009/11/liberal_regex_for_matching_urls,not
celery/examples/eventlet/webcrawler.py,63,"To not destroy the internet, we only fetch URLs on the same domain.",not
celery/examples/eventlet/celeryconfig.py,8,## Start worker with -P eventlet,not
celery/examples/eventlet/celeryconfig.py,9,Never use the worker_pool setting as that'll patch,not
celery/examples/eventlet/celeryconfig.py,10,the worker too late.,not
celery/docs/conf.py,1,-*- coding: utf-8 -*-,not
celery/docs/conf.py,58,Deprecated broker settings (replaced by broker_url),not
celery/docs/conf.py,66,deprecated task settings.,not
celery/docs/conf.py,69,"MongoDB settings replaced by URL config.,",not
celery/docs/conf.py,72,Database URL replaced by URL config (result_backend = db+...).,not
celery/docs/conf.py,75,Redis settings replaced by URL config.,not
celery/docs/conf.py,81,Old deprecated AMQP result backend.,not
celery/docs/conf.py,85,Experimental,not
celery/docs/conf.py,88,Deprecated worker settings.,not
celery/docs/_ext/celerydocs.py,11,TODO: Remove this once we drop Sphinx 2 support,SATD
celery/docs/_ext/celerydocs.py,68,noqa,not
celery/docs/_ext/celerydocs.py,152,shorten text if '~' is not enabled.,not
celery/t/integration/tasks.py,1,-*- coding: utf-8 -*-,not
celery/t/integration/tasks.py,54,Allow the task to be in STARTED state for,not
celery/t/integration/tasks.py,55,a limited period of time.,not
celery/t/integration/conftest.py,7,"we have to import the pytest plugin fixtures here,",not
celery/t/integration/conftest.py,8,"in case user did not do the `python setup.py develop` yet,",not
celery/t/integration/conftest.py,9,that installs the pytest plugin into the setuptools registry.,not
celery/t/integration/conftest.py,16,Tricks flake8 into silencing redefining fixtures warnings.,not
celery/t/integration/test_tasks.py,23,retried once,not
celery/t/integration/test_tasks.py,28,retried once with priority 7,not
celery/t/integration/test_canvas.py,114,This adds in an explicit test for the special case added in commit,not
celery/t/integration/test_canvas.py,115,1e3fcaa969de6ad32b52a3ed8e74281e5e5360e6,not
celery/t/integration/test_canvas.py,136,Run the chord and wait for the error callback to finish.,not
celery/t/integration/test_canvas.py,264,return 3,not
celery/t/integration/test_canvas.py,266,return 0 after managing soft timeout,not
celery/t/integration/test_canvas.py,574,The total number of active Redis channels at this point,not
celery/t/integration/test_canvas.py,575,is the number of chord header tasks multiplied by the,not
celery/t/integration/test_canvas.py,576,"total chord tasks, plus the initial channels",not
celery/t/integration/test_canvas.py,577,(existing from previous tests).,not
celery/t/integration/test_canvas.py,783,first we check the last task,not
celery/t/integration/test_canvas.py,786,then the chord callback,not
celery/t/integration/test_canvas.py,790,started by one of the chord header tasks.,not
celery/t/integration/test_canvas.py,793,check what the chord callback recorded,not
celery/t/integration/test_canvas.py,799,ids(i=2),not
celery/t/integration/test_canvas.py,805,ids(i=1),not
celery/t/integration/test_canvas.py,820,Run the chord and wait for the error callback to finish.,not
celery/t/integration/test_canvas.py,830,Got to wait for children to populate.,not
celery/t/integration/test_canvas.py,834,Extract the results of the successful tasks from the chord.,not
celery/t/integration/test_canvas.py,835,,not
celery/t/integration/test_canvas.py,836,"We could do this inside the error handler, and probably would in a",not
celery/t/integration/test_canvas.py,837,"real system, but for the purposes of the test it's obnoxious to get",not
celery/t/integration/test_canvas.py,838,data out of the error handler.,not
celery/t/integration/test_canvas.py,839,,not
celery/t/integration/test_canvas.py,840,"So for clarity of our test, we instead do it here.",not
celery/t/integration/test_canvas.py,842,Use the error callback's result to find the failed task.,not
celery/t/integration/test_canvas.py,847,Use new group_id result metadata to get group ID.,not
celery/t/integration/test_canvas.py,851,Use group ID to get preserved group result.,not
celery/t/integration/test_canvas.py,858,Validate group result,not
celery/t/integration/test_canvas.py,912,test for #2573,not
celery/t/benchmarks/bench_worker.py,6,noqa,not
celery/t/benchmarks/bench_worker.py,8,noqa,not
celery/t/benchmarks/bench_worker.py,9,noqa,not
celery/t/benchmarks/bench_worker.py,52,"use internal counter, as ordering can be skewed",not
celery/t/benchmarks/bench_worker.py,53,"by previous runs, or the broker.",not
celery/t/unit/conftest.py,16,"we have to import the pytest plugin fixtures here,",not
celery/t/unit/conftest.py,17,"in case user did not do the `python setup.py develop` yet,",not
celery/t/unit/conftest.py,18,that installs the pytest plugin into the setuptools registry.,not
celery/t/unit/conftest.py,25,Tricks flake8 into silencing redefining fixtures warnings.,not
celery/t/unit/conftest.py,32,noqa,not
celery/t/unit/conftest.py,61,Mongo results tests (only executed if installed and running),not
celery/t/unit/conftest.py,116,"pytest-cov breaks if a multiprocessing.Process is started,",not
celery/t/unit/conftest.py,117,so disable them completely to make sure it doesn't happen.,not
celery/t/unit/conftest.py,184,IMPORTANT: We set an .app attribute for every test case class.,not
celery/t/unit/conftest.py,203,Make sure no test left the shutdown flags enabled.,not
celery/t/unit/conftest.py,205,check for EX_OK,not
celery/t/unit/conftest.py,208,check for other true values,not
celery/t/unit/conftest.py,256,warn if config module not found,not
celery/t/unit/conftest.py,271,Don't want SUBDEBUG log messages at finalization.,not
celery/t/unit/conftest.py,279,Make sure test database is removed.,not
celery/t/unit/conftest.py,287,Make sure there are no remaining threads at shutdown.,not
celery/t/unit/bin/test_worker.py,173,test when there are too few output lines,not
celery/t/unit/bin/test_worker.py,174,to draft the ascii art onto,not
celery/t/unit/bin/test_celeryd_detach.py,104,no args,not
celery/t/unit/bin/test_events.py,39,noqa: E305,not
celery/t/unit/bin/test_base.py,16,<-- Used by test_with_custom_app,not
celery/t/unit/bin/test_base.py,127,sys.argv,not
celery/t/unit/bin/test_base.py,131,pass list,not
celery/t/unit/bin/test_base.py,327,noqa,not
celery/t/unit/bin/test_beat.py,88,py3k,not
celery/t/unit/bin/test_report.py,1,-*- coding: utf-8 -*-,not
celery/t/unit/bin/test_report.py,22,Method call order mock obj,not
celery/t/unit/bin/test_upgrade.py,1,-*- coding: utf-8 -*-,not
celery/t/unit/bin/celery.py,3,here for a test,not
celery/t/unit/bin/proj/app2.py,3,noqa: F401,not
celery/t/unit/app/test_registry.py,32,name is overridden with path,not
celery/t/unit/app/test_routes.py,121,"apply_async forwards all arguments, even exchange=None etc,",not
celery/t/unit/app/test_routes.py,122,so need to make sure it's merged correctly.,not
celery/t/unit/app/test_schedules.py,104,This is needed for test_crontab_parser because datetime.utcnow doesn't pickle,not
celery/t/unit/app/test_schedules.py,105,in python 2,not
celery/t/unit/app/test_schedules.py,429,*** WARNING ***,not
celery/t/unit/app/test_schedules.py,430,This test triggers an infinite loop in case of a regression,not
celery/t/unit/app/test_schedules.py,445,Test for #1604 issue with region configuration using DST,not
celery/t/unit/app/test_schedules.py,451,Set last_run_at Before DST end,not
celery/t/unit/app/test_schedules.py,453,Set now after DST end,not
celery/t/unit/app/test_schedules.py,462,Test for #1604 issue with region configuration using DST,not
celery/t/unit/app/test_schedules.py,468,Set last_run_at Before DST start,not
celery/t/unit/app/test_schedules.py,470,Set now after DST start,not
celery/t/unit/app/test_schedules.py,604,AssertionError != builtins.AssertionError in py.test,not
celery/t/unit/app/test_schedules.py,645,29th of May 2010 is a saturday,not
celery/t/unit/app/test_schedules.py,653,30th of May 2010 is a sunday,not
celery/t/unit/app/test_schedules.py,661,31st of May 2010 is a monday,not
celery/t/unit/app/test_utils.py,10,TODO: Remove this when we drop Python 2.7 support,SATD
celery/t/unit/app/test_app.py,65,"fixture 'app' sets this, so need to use orig_ function",not
celery/t/unit/app/test_app.py,66,set there by that fixture.,not
celery/t/unit/app/test_app.py,87,Check that timezone conversion is applied from configuration,not
celery/t/unit/app/test_app.py,90,timezone is a cached property,not
celery/t/unit/app/test_app.py,100,Verify that timezone setting overrides enable_utc=on setting,not
celery/t/unit/app/test_app.py,173,is proxy,not
celery/t/unit/app/test_app.py,199,defaults not pickled,not
celery/t/unit/app/test_app.py,204,add more defaults after configured,not
celery/t/unit/app/test_app.py,717,"not set as current, so ends up as default app after reduce",not
celery/t/unit/app/test_app.py,731,weakref removed from list when app goes out of scope.,not
celery/t/unit/app/test_app.py,783,Test passing in a string and make sure the string,not
celery/t/unit/app/test_app.py,784,gets there untouched,not
celery/t/unit/app/test_app.py,789,Try passing in None,not
celery/t/unit/app/test_app.py,794,Test passing in a method,not
celery/t/unit/app/test_app.py,871,on pypy3 if named on_configure the class function,not
celery/t/unit/app/test_app.py,872,"will be called, instead of the mock defined above,",not
celery/t/unit/app/test_app.py,873,so we add the underscore.,not
celery/t/unit/app/test_log.py,216,setup_logger logs to stderr without logfile argument.,not
celery/t/unit/app/test_beat.py,104,"order doesn't matter, see comment in __lt__",not
celery/t/unit/app/test_beat.py,105,noqa,not
celery/t/unit/app/test_beat.py,107,noqa,not
celery/t/unit/app/test_beat.py,351,ensure those 0.2 seconds on now_ts don't get dropped,not
celery/t/unit/app/test_beat.py,356,initialise schedule and check heap is not initialized,not
celery/t/unit/app/test_beat.py,360,set initial schedule and check heap is updated,not
celery/t/unit/app/test_beat.py,366,update schedule and check heap is updated,not
celery/t/unit/app/test_beat.py,686,ensure next call on the beginning of next min,not
celery/t/unit/backends/test_rpc.py,20,drain_events shouldn't crash when called before start,not
celery/t/unit/backends/test_asynchronous.py,17,By default eventlet will patch the DNS resolver when imported.,not
celery/t/unit/backends/test_asynchronous.py,26,Check every tenth of a second,not
celery/t/unit/backends/test_asynchronous.py,27,Specify a max timeout so it doesn't run forever,not
celery/t/unit/backends/test_arangodb.py,15,noqa,not
celery/t/unit/backends/test_riak.py,1,-*- coding: utf-8 -*-,not
celery/t/unit/backends/test_riak.py,69,should return None,not
celery/t/unit/backends/test_riak.py,78,should return None,not
celery/t/unit/backends/test_riak.py,88,should return None,not
celery/t/unit/backends/test_dynamodb.py,1,-*- coding: utf-8 -*-,not
celery/t/unit/backends/test_dynamodb.py,18,noqa,not
celery/t/unit/backends/test_dynamodb.py,474,should return None,not
celery/t/unit/backends/test_dynamodb.py,497,should return None,not
celery/t/unit/backends/test_dynamodb.py,519,should return None,not
celery/t/unit/backends/test_s3.py,174,Create AWS s3 Bucket for moto.,not
celery/t/unit/backends/test_mongodb.py,63,empty settings,not
celery/t/unit/backends/test_mongodb.py,66,uri,not
celery/t/unit/backends/test_mongodb.py,73,uri with database name,not
celery/t/unit/backends/test_mongodb.py,78,"uri with user, password, database name, replica set",not
celery/t/unit/backends/test_mongodb.py,99,"same uri, change some parameters in backend settings",not
celery/t/unit/backends/test_mongodb.py,149,"uri with user, password, database name, replica set,",not
celery/t/unit/backends/test_mongodb.py,150,DNS seedlist format,not
celery/t/unit/backends/test_mongodb.py,262,"Should really check for combinations of these two, to be complete.",not
celery/t/unit/backends/test_mongodb.py,280,"Should really check for combinations of these two, to be complete.",not
celery/t/unit/backends/test_mongodb.py,449,"note: here tested _forget method, not forget method",not
celery/t/unit/backends/test_cosmosdbsql.py,81,ensure database and collection get created on client access...,not
celery/t/unit/backends/test_cosmosdbsql.py,88,...but only once per backend instance,not
celery/t/unit/backends/test_amqp.py,74,is serialized properly.,not
celery/t/unit/backends/test_amqp.py,206,FFWD's to the latest state.,not
celery/t/unit/backends/test_amqp.py,215,FFWDs to the last state.,not
celery/t/unit/backends/test_amqp.py,219,Caches last known state.,not
celery/t/unit/backends/test_amqp.py,227,Returns cache if no new states.,not
celery/t/unit/backends/test_amqp.py,231,returns cache if no new states.,not
celery/t/unit/backends/test_base.py,83,default is app.conf.accept_content,not
celery/t/unit/backends/test_base.py,88,accept parameter,not
celery/t/unit/backends/test_base.py,94,accept parameter over result_accept_content,not
celery/t/unit/backends/test_base.py,101,conf.result_accept_content if specified,not
celery/t/unit/backends/test_filesystem.py,1,-*- coding: utf-8 -*-,not
celery/t/unit/backends/test_azureblockblob.py,49,ensure container gets created on client access...,not
celery/t/unit/backends/test_azureblockblob.py,54,...but only once per backend instance,not
celery/t/unit/backends/test_redis.py,185,PubSub instance not initialized - exception would be raised,not
celery/t/unit/backends/test_redis.py,186,when calling .close(),not
celery/t/unit/backends/test_redis.py,194,Continues on KeyError,not
celery/t/unit/backends/test_redis.py,212,Does not call cancel_for for other states,not
celery/t/unit/backends/test_redis.py,222,drain_events shouldn't crash when called before start,not
celery/t/unit/backends/test_couchbase.py,17,noqa,not
celery/t/unit/backends/test_couchbase.py,60,should return None,not
celery/t/unit/backends/test_couchbase.py,70,should return None,not
celery/t/unit/backends/test_couchbase.py,79,should return None,not
celery/t/unit/backends/test_couchbase.py,88,should return None,not
celery/t/unit/backends/test_cassandra.py,27,should raise ImproperlyConfigured when no python-driver,not
celery/t/unit/backends/test_cassandra.py,28,installed.,not
celery/t/unit/backends/test_cassandra.py,52,no servers raises ImproperlyConfigured,not
celery/t/unit/backends/test_cassandra.py,105,Tests behavior when Cluster.connect raises,not
celery/t/unit/backends/test_cassandra.py,106,cassandra.OperationTimedOut.,not
celery/t/unit/backends/test_cassandra.py,134,shouldn't raise,not
celery/t/unit/backends/test_cassandra.py,137,Ensure that Cluster object IS shut down.,not
celery/t/unit/backends/test_cassandra.py,167,"Ensure valid auth_provider works properly, and invalid one raises",not
celery/t/unit/backends/test_cassandra.py,168,ImproperlyConfigured exception.,not
celery/t/unit/backends/test_cassandra.py,177,Valid auth_provider,not
celery/t/unit/backends/test_cassandra.py,184,Invalid auth_provider,not
celery/t/unit/backends/test_cassandra.py,193,Ensure valid options works properly,not
celery/t/unit/backends/test_cassandra.py,197,Valid options,not
celery/t/unit/backends/test_cache.py,51,is serialized properly.,not
celery/t/unit/backends/test_elasticsearch.py,30,expected result,not
celery/t/unit/backends/test_couchdb.py,14,noqa,not
celery/t/unit/backends/test_couchdb.py,98,should return None,not
celery/t/unit/backends/test_database.py,14,noqa,not
celery/t/unit/backends/test_database.py,16,noqa,not
celery/t/unit/backends/test_database.py,17,noqa,not
celery/t/unit/backends/test_database.py,132,is serialized properly.,not
celery/t/unit/utils/test_collections.py,177,make sure heap is not leaking:,not
celery/t/unit/utils/test_collections.py,182,purge now enforces rules,not
celery/t/unit/utils/test_collections.py,183,cant purge(1) now. but .purge(now=...) still works,not
celery/t/unit/utils/test_collections.py,190,expired,not
celery/t/unit/utils/test_collections.py,197,not expired,not
celery/t/unit/utils/test_collections.py,204,expired -> minsize,not
celery/t/unit/utils/test_collections.py,279,revoke is using this,not
celery/t/unit/utils/test_collections.py,294,each item is smaller and smaller,not
celery/t/unit/utils/test_collections.py,296,last item is zero,not
celery/t/unit/utils/test_collections.py,328,heap is refreshed when 15% larger than _data,not
celery/t/unit/utils/test_saferepr.py,1,-*- coding: utf-8 -*-,not
celery/t/unit/utils/test_saferepr.py,179,"Simple objects, small containers, and classes that overwrite __repr__",not
celery/t/unit/utils/test_saferepr.py,180,For those the result should be the same as repr().,not
celery/t/unit/utils/test_saferepr.py,181,Ahem.  The docs don't say anything about that -- this appears to,not
celery/t/unit/utils/test_saferepr.py,182,"be testing an implementation quirk.  Starting in Python 2.5, it's",not
celery/t/unit/utils/test_saferepr.py,183,"not true for dicts:  pprint always sorts dicts by key now; before,",not
celery/t/unit/utils/test_saferepr.py,184,it sorted a dict display if and only if the display required,not
celery/t/unit/utils/test_saferepr.py,185,"multiple lines.  For that reason, dicts with more than one element",not
celery/t/unit/utils/test_saferepr.py,186,aren't tested here.,not
celery/t/unit/utils/test_saferepr.py,219,Python 3.5+,not
celery/t/unit/utils/test_saferepr.py,221,Python 3.4,not
celery/t/unit/utils/test_saferepr.py,228,Python 3.5+,not
celery/t/unit/utils/test_saferepr.py,231,Python 3.4,not
celery/t/unit/utils/test_dispatcher.py,12,"Some JVM GCs will execute finalizers in a different thread, meaning",not
celery/t/unit/utils/test_dispatcher.py,13,we need to wait for that to complete before we go on looking for the,not
celery/t/unit/utils/test_dispatcher.py,14,effects of that.,not
celery/t/unit/utils/test_dispatcher.py,20,noqa,not
celery/t/unit/utils/test_dispatcher.py,21,Collecting weakreferences can take two collections on PyPy.,not
celery/t/unit/utils/test_dispatcher.py,26,noqa,not
celery/t/unit/utils/test_time.py,52,2013-06-07T20:12:51.775877+00:00,not
celery/t/unit/utils/test_time.py,111,Relative,not
celery/t/unit/utils/test_time.py,120,Case 1: `start` in UTC and `now` in other timezone,not
celery/t/unit/utils/test_time.py,127,assert remaining time is approximately equal to delta,not
celery/t/unit/utils/test_time.py,130,Case 2: `start` and `now` in different timezones (other than UTC),not
celery/t/unit/utils/test_time.py,145,EST,not
celery/t/unit/utils/test_time.py,146,EDT,not
celery/t/unit/utils/test_time.py,148,`next_actual_time` is the next time to run (derived from delta),not
celery/t/unit/utils/test_time.py,149,EDT,not
celery/t/unit/utils/test_time.py,195,needed by min() in Python 3 (None not hashable),not
celery/t/unit/utils/test_time.py,227,Mock no utcoffset specified,not
celery/t/unit/utils/test_time.py,246,needed by min() in Python 3 (None not hashable),not
celery/t/unit/utils/test_serialization.py,111,todo replace below when dropping python 2.7,SATD
celery/t/unit/utils/test_serialization.py,112,"match=""Cannot coerce 'foo' to type bool""):",not
celery/t/unit/utils/test_platforms.py,26,pragma: no cover,not
celery/t/unit/utils/test_platforms.py,27,noqa,not
celery/t/unit/utils/test_term.py,1,-*- coding: utf-8 -*-,not
celery/t/unit/utils/test_graph.py,32,C must start before D,not
celery/t/unit/utils/test_graph.py,34,and B must start before D,not
celery/t/unit/utils/test_graph.py,36,and A must start before C,not
celery/t/unit/utils/test_functional.py,95,again,not
celery/t/unit/utils/test_functional.py,140,noqa,not
celery/t/unit/utils/test_functional.py,248,noqa,not
celery/t/unit/utils/test_functional.py,258,noqa,not
celery/t/unit/events/test_events.py,125,clear in place,not
celery/t/unit/events/test_events.py,171,Disable with no active producer,not
celery/t/unit/events/test_events.py,175,does not close manually provided channel,not
celery/t/unit/events/test_events.py,182,XXX test compat attribute,SATD
celery/t/unit/events/test_events.py,325,skip consumer (see itercapture),not
celery/t/unit/events/test_state.py,424,RECEIVED,not
celery/t/unit/events/test_state.py,433,STARTED,not
celery/t/unit/events/test_state.py,441,REVOKED,not
celery/t/unit/events/test_state.py,448,RETRY,not
celery/t/unit/events/test_state.py,457,FAILURE,not
celery/t/unit/events/test_state.py,466,SUCCESS,not
celery/t/unit/events/test_state.py,475,"children, parent, root",not
celery/t/unit/concurrency/test_prefork.py,40,noqa,not
celery/t/unit/concurrency/test_prefork.py,41,noqa,not
celery/t/unit/concurrency/test_prefork.py,285,Given: a list of integers that could be file descriptors,not
celery/t/unit/concurrency/test_prefork.py,288,Given: a mock hub method that does nothing to call,not
celery/t/unit/concurrency/test_prefork.py,292,When Calling the helper to iterate_file_descriptors_safely,not
celery/t/unit/concurrency/test_prefork.py,298,Then: all items were removed from the managed data source,not
celery/t/unit/concurrency/test_prefork.py,302,Given: a list of integers that could be file descriptors,not
celery/t/unit/concurrency/test_prefork.py,305,Given: a mock hub method that does nothing to call,not
celery/t/unit/concurrency/test_prefork.py,309,When Calling the helper to iterate_file_descriptors_safely,not
celery/t/unit/concurrency/test_prefork.py,315,Then: all items were removed from the managed data source,not
celery/t/unit/concurrency/test_prefork.py,319,Given: a list of integers that could be file descriptors,not
celery/t/unit/concurrency/test_prefork.py,322,Given: a mock hub method that does nothing to call,not
celery/t/unit/concurrency/test_prefork.py,326,When Calling the helper to iterate_file_descriptors_safely,not
celery/t/unit/concurrency/test_prefork.py,332,Then: all items were removed from the managed data source,not
celery/t/unit/concurrency/test_prefork.py,357,KeyError,not
celery/t/unit/concurrency/test_concurrency.py,40,No accept callback,not
celery/t/unit/contrib/test_pytest.py,4,noqa: F401,not
celery/t/unit/contrib/test_sphinx.py,10,noqa: F401,not
celery/t/unit/contrib/test_rdb.py,43,set_quit,not
celery/t/unit/contrib/test_rdb.py,48,set_trace,not
celery/t/unit/contrib/test_rdb.py,58,_close_session,not
celery/t/unit/contrib/test_rdb.py,66,do_continue,not
celery/t/unit/contrib/test_rdb.py,71,do_quit,not
celery/t/unit/contrib/test_migrate.py,19,hack to ignore error at shutdown,SATD
celery/t/unit/contrib/test_migrate.py,265,use separate state,not
celery/t/unit/contrib/proj/foo.py,4,noqa,not
celery/t/unit/compat_modules/test_compat.py,15,@depends_on_current_app,not
celery/t/unit/compat_modules/test_compat.py,41,This assertion may fail if executed in the,not
celery/t/unit/compat_modules/test_compat.py,42,"first minute of an hour, thus 59 instead of 60",not
celery/t/unit/apps/test_multi.py,396,"without callback, should work",not
celery/t/unit/tasks/test_result.py,345,Does not block,not
celery/t/unit/tasks/test_result.py,364,has RETRY state,not
celery/t/unit/tasks/test_result.py,375,has RETRY state,not
celery/t/unit/tasks/test_result.py,709,GroupResult instances with different .parent are not equal,not
celery/t/unit/tasks/test_context.py,1,-*- coding: utf-8 -*-',not
celery/t/unit/tasks/test_context.py,7,Retrieve the values of all context attributes as a,not
celery/t/unit/tasks/test_context.py,8,dictionary in an implementation-agnostic manner.,not
celery/t/unit/tasks/test_context.py,13,Ignore pseudo-private attributes,not
celery/t/unit/tasks/test_context.py,16,Ignore methods and other non-trivial types,not
celery/t/unit/tasks/test_context.py,27,"A bit of a tautological test, since it uses the same",not
celery/t/unit/tasks/test_context.py,28,initializer as the default_context constructor.,not
celery/t/unit/tasks/test_tasks.py,22,pragma: no cover,not
celery/t/unit/tasks/test_tasks.py,27,"Task run functions can't be closures/lambdas, as they're pickled.",not
celery/t/unit/tasks/test_tasks.py,256,Couldn't find a better way to mimic an apply_async(),SATD
celery/t/unit/tasks/test_tasks.py,257,request with set priority,not
celery/t/unit/tasks/test_tasks.py,281,Remove all messages from memory-transport,not
celery/t/unit/tasks/test_tasks.py,306,"Technically, task.priority doesn't need to be set here",not
celery/t/unit/tasks/test_tasks.py,307,since push_request() doesn't populate the delivery_info,not
celery/t/unit/tasks/test_tasks.py,308,"with it. However, setting task.priority here also doesn't",not
celery/t/unit/tasks/test_tasks.py,309,cause any problems.,not
celery/t/unit/tasks/test_tasks.py,799,Without arguments.,not
celery/t/unit/tasks/test_tasks.py,804,With arguments.,not
celery/t/unit/tasks/test_tasks.py,812,send_task,not
celery/t/unit/tasks/test_tasks.py,819,With ETA.,not
celery/t/unit/tasks/test_tasks.py,830,With countdown.,not
celery/t/unit/tasks/test_tasks.py,839,Default argsrepr/kwargsrepr behavior,not
celery/t/unit/tasks/test_tasks.py,849,With argsrepr/kwargsrepr,not
celery/t/unit/tasks/test_tasks.py,860,Discarding all tasks.,not
celery/t/unit/tasks/test_tasks.py,1000,"update_state should accept arbitrary kwargs, which are passed to",not
celery/t/unit/tasks/test_tasks.py,1001,the backend store_result method,not
celery/t/unit/tasks/test_chord.py,79,didn't retry,not
celery/t/unit/tasks/test_chord.py,113,didn't retry,not
celery/t/unit/tasks/test_chord.py,174,did retry,not
celery/t/unit/tasks/test_chord.py,235,does not modify original signature,not
celery/t/unit/tasks/test_chord.py,266,task not part of chord,not
celery/t/unit/worker/test_components.py,9,"some of these are tested in test_worker, so I've only written tests",not
celery/t/unit/worker/test_components.py,10,here to complete coverage.  Should move everything to this module at some,SATD
celery/t/unit/worker/test_components.py,11,point [-ask],not
celery/t/unit/worker/test_heartbeat.py,88,Invoke a heartbeat,not
celery/t/unit/worker/test_autoscale.py,238,the body func scales up or down,not
celery/t/unit/worker/test_request.py,1,-*- coding: utf-8 -*-,not
celery/t/unit/worker/test_request.py,99,rebuild,not
celery/t/unit/worker/test_request.py,944,traverses coverage for decorator without parens,not
celery/t/unit/worker/test_bootsteps.py,173,include creates the underlying object and sets,not
celery/t/unit/worker/test_bootsteps.py,174,"its x.obj attribute to it, as well as appending",not
celery/t/unit/worker/test_bootsteps.py,175,it to the parent.steps list.,not
celery/t/unit/worker/test_worker.py,798,Given: a test celery worker instance with auto scaling,not
celery/t/unit/worker/test_worker.py,804,Given: This test requires a QoS defined on the worker consumer,not
celery/t/unit/worker/test_worker.py,808,Given: We have started the worker pool,not
celery/t/unit/worker/test_worker.py,811,Then: the worker pool is the same as the autoscaler pool,not
celery/t/unit/worker/test_worker.py,815,Given: Utilize kombu to get the global hub state,not
celery/t/unit/worker/test_worker.py,817,Given: Initial call the Async Pool to register events works fine,not
celery/t/unit/worker/test_worker.py,820,Create some mock queue message and read from them,not
celery/t/unit/worker/test_worker.py,825,Simulate a file descriptor from the list is closed by the OS,not
celery/t/unit/worker/test_worker.py,826,auto_scaler.force_scale_down(5),not
celery/t/unit/worker/test_worker.py,827,This actually works -- it releases the semaphore properly,not
celery/t/unit/worker/test_worker.py,828,Same with calling .terminate() on the process directly,not
celery/t/unit/worker/test_worker.py,830,however opening this fd as a file and closing it will do it,not
celery/t/unit/worker/test_worker.py,833,Only need to do this once,not
celery/t/unit/worker/test_worker.py,835,When: Calling again to register with event loop ...,not
celery/t/unit/worker/test_worker.py,838,"Then: test did not raise ""OSError: [Errno 9] Bad file descriptor!""",not
celery/t/unit/worker/test_worker.py,840,Finally:  Clean up so the threads before/after fixture passes,not
celery/t/unit/worker/test_worker.py,847,Given: a test celery worker instance,not
celery/t/unit/worker/test_worker.py,854,Given: This test requires a QoS defined on the worker consumer,not
celery/t/unit/worker/test_worker.py,858,Given: We have started the worker pool,not
celery/t/unit/worker/test_worker.py,861,Given: Utilize kombu to get the global hub state,not
celery/t/unit/worker/test_worker.py,863,Given: Initial call the Async Pool to register events works fine,not
celery/t/unit/worker/test_worker.py,866,Given: Mock the Hub to return errors for add and remove,not
celery/t/unit/worker/test_worker.py,874,When: Calling again to register with event loop ...,not
celery/t/unit/worker/test_worker.py,877,Then: test did not raise OSError,not
celery/t/unit/worker/test_worker.py,878,Note: worker.pool is prefork.TaskPool whereas,not
celery/t/unit/worker/test_worker.py,879,worker.pool._pool is the asynpool.AsynPool class.,not
celery/t/unit/worker/test_worker.py,881,When: Calling the tic method on_poll_start,not
celery/t/unit/worker/test_worker.py,883,Then: test did not raise OSError,not
celery/t/unit/worker/test_worker.py,885,Given: a mock object that fakes whats required to do whats next,not
celery/t/unit/worker/test_worker.py,888,When: Calling again to register with event loop ...,not
celery/t/unit/worker/test_worker.py,890,Then: test did not raise OSError,not
celery/t/unit/worker/test_worker.py,892,Given:,not
celery/t/unit/worker/test_worker.py,895,Finally:  Clean up so the threads before/after fixture passes,not
celery/t/unit/worker/test_worker.py,1077,Doesn't close pool if no pool.,not
celery/t/unit/worker/test_worker.py,1082,test that stop of None is not attempted,not
celery/t/unit/worker/test_consumer.py,52,noqa: F821,not
celery/t/unit/worker/test_consumer.py,529,I will win,not
celery/t/unit/worker/test_consumer.py,537,I will lose,not
celery/t/unit/worker/test_consumer.py,545,I will win,not
celery/t/unit/worker/test_loops.py,75,asynloop calls hub.close,not
celery/t/unit/worker/test_loops.py,78,need this for create_task_handler,not
celery/t/unit/worker/test_loops.py,234,XXX why aren't the errors propagated?!?,SATD
celery/t/unit/worker/test_control.py,16,noqa,not
celery/t/unit/worker/test_control.py,184,incremented,not
celery/t/unit/worker/test_control.py,193,incremented,not
celery/t/unit/worker/test_control.py,404,^ need to keep reference for reserved_tasks WeakSet.,not
celery/t/unit/worker/test_control.py,513,unknown task id only revokes,not
celery/t/unit/security/test_certificate.py,96,they both end up with the same id,not
celery/t/unit/fixups/test_django.py,178,"when a task is eager, don't close connections",not
celery/t/unit/fixups/test_django.py,213,ConnectionHandler,not
celery/extra/release/attribution.py,1,!/usr/bin/env python,not
celery/extra/release/attribution.py,27,maybe later?:,not
celery/extra/release/attribution.py,28,seen_emails = {t[1] for t in seen},not
celery/extra/release/attribution.py,29,known_emails = {t[1] for t in known},not
celery/celery/signals.py,1,-*- coding: utf-8 -*-,not
celery/celery/signals.py,30,- Task,not
celery/celery/signals.py,82,": Deprecated, use after_task_publish instead.",not
celery/celery/signals.py,90,- Program: `celery worker`,not
celery/celery/signals.py,100,- Worker,not
celery/celery/signals.py,110,- Logging,not
celery/celery/signals.py,130,- Beat,not
celery/celery/signals.py,134,- Eventlet,not
celery/celery/signals.py,143,- Programs,not
celery/celery/__main__.py,19,pragma: no cover,not
celery/celery/states.py,1,-*- coding: utf-8 -*-,not
celery/celery/states.py,63,: State precedence.,not
celery/celery/states.py,64,: None represents the precedence of an unknown state.,not
celery/celery/states.py,65,: Lower index means higher precedence.,not
celery/celery/states.py,78,: Hash lookup of PRECEDENCE to index,not
celery/celery/states.py,128,: Task state is unknown (assumed pending since you know the id).,not
celery/celery/states.py,130,: Task was received by a worker (only used in events).,not
celery/celery/states.py,132,: Task was started by a worker (:setting:`task_track_started`).,not
celery/celery/states.py,134,: Task succeeded,not
celery/celery/states.py,136,: Task failed,not
celery/celery/states.py,138,: Task was revoked.,not
celery/celery/states.py,140,: Task was rejected (only used in events).,not
celery/celery/states.py,142,: Task is waiting for retry.,not
celery/celery/local.py,1,-*- coding: utf-8 -*-,not
celery/celery/local.py,21,used by Proxy class body,not
celery/celery/local.py,25,Proxy uses properties to forward the standard,not
celery/celery/local.py,26,"class attributes __module__, __name__ and __doc__ to the real",not
celery/celery/local.py,27,"object, but these needs to be a string when accessed from",not
celery/celery/local.py,28,the Proxy class directly.  This is a hack to make that work.,SATD
celery/celery/local.py,29,-- See Issue #1087.,not
celery/celery/local.py,58,Code stolen from werkzeug.local.Proxy.,not
celery/celery/local.py,110,pragma: no cover,not
celery/celery/local.py,111,not sure what this is about,not
celery/celery/local.py,113,pragma: no cover,not
celery/celery/local.py,120,pragma: no cover,not
celery/celery/local.py,126,pragma: no cover,not
celery/celery/local.py,133,pragma: no cover,not
celery/celery/local.py,135,Py2,not
celery/celery/local.py,140,pragma: no cover,not
celery/celery/local.py,292,pragma: no cover,not
celery/celery/local.py,294,noqa,not
celery/celery/local.py,297,noqa,not
celery/celery/local.py,302,pragma: no cover,not
celery/celery/local.py,357,pragma: no cover,not
celery/celery/local.py,358,May mask errors so ignore,not
celery/celery/local.py,372,pragma: no cover,not
celery/celery/local.py,384,############# Module Generation,not
celery/celery/local.py,386,Utilities to dynamically,not
celery/celery/local.py,387,"recreate modules, either for lazy loading or",not
celery/celery/local.py,388,to create old modules at runtime instead of,not
celery/celery/local.py,389,having them litter the source tree.,not
celery/celery/local.py,391,import fails in python 2.5. fallback to reduce in stdlib,not
celery/celery/local.py,400,im_func is no longer available in Py3.,not
celery/celery/local.py,401,instead the unbound method itself can be used.,not
celery/celery/local.py,402,pragma: no cover,not
celery/celery/local.py,406,noqa,not
celery/celery/local.py,464,: We exclude these from dir(celery),not
celery/celery/local.py,478,just need the info attrs.,not
celery/celery/local.py,513,pragma: no cover,not
celery/celery/beat.py,1,-*- coding: utf-8 -*-,not
celery/celery/beat.py,43,5 minutes,not
celery/celery/beat.py,97,: The task name,not
celery/celery/beat.py,100,: The schedule (:class:`~celery.schedules.schedule`),not
celery/celery/beat.py,103,: Positional arguments to apply.,not
celery/celery/beat.py,106,: Keyword arguments to apply.,not
celery/celery/beat.py,109,: Task execution options.,not
celery/celery/beat.py,112,: The time and date of when this task was last scheduled.,not
celery/celery/beat.py,115,: Total number of times this task has been scheduled.,not
celery/celery/beat.py,133,compat,not
celery/celery/beat.py,142,for 2to3,not
celery/celery/beat.py,178,"How the object is ordered doesn't really matter, as",not
celery/celery/beat.py,179,"in the scheduler heap, the order is decided by the",not
celery/celery/beat.py,180,"preceding members of the tuple ``(time, priority, entry)``.",not
celery/celery/beat.py,181,,not
celery/celery/beat.py,182,If all that's left to order on is the entry then it can,not
celery/celery/beat.py,183,just as well be random.,not
celery/celery/beat.py,226,: The schedule dict/shelve.,not
celery/celery/beat.py,229,: Maximum time to sleep between re-checking the schedule.,not
celery/celery/beat.py,232,: How often to sync the schedule (3 minutes by default),not
celery/celery/beat.py,235,: How many tasks can be called before a sync is forced.,not
celery/celery/beat.py,241,compat,not
celery/celery/beat.py,274,pylint: disable=broad-except,not
celery/celery/beat.py,313,pylint disable=redefined-outer-name,not
celery/celery/beat.py,380,"Update time-stamps and run counts before we actually execute,",not
celery/celery/beat.py,381,so we have that done if an exception is raised (doesn't schedule,not
celery/celery/beat.py,382,forever.),not
celery/celery/beat.py,397,pylint: disable=broad-except,not
celery/celery/beat.py,448,Remove items from disk not in the schedule anymore.,not
celery/celery/beat.py,452,Update and add new items in the schedule,not
celery/celery/beat.py,461,callback called for each retry while the connection,not
celery/celery/beat.py,462,can't be established.,not
celery/celery/beat.py,520,In some cases there may be different errors from a storage,not
celery/celery/beat.py,521,backend for corrupted files.  Example - DBPageNotFoundError,not
celery/celery/beat.py,522,exception from bsddb.  In such case the file will be,not
celery/celery/beat.py,523,successfully opened but the error will be raised on first key,not
celery/celery/beat.py,524,retrieving.,not
celery/celery/beat.py,526,pylint: disable=broad-except,not
celery/celery/beat.py,535,"Timezone changed, reset db!",not
celery/celery/beat.py,542,"UTC setting changed, reset db!",not
celery/celery/beat.py,560,new schedule db,not
celery/celery/beat.py,569,remove schedule at 2.2.2 upgrade.,not
celery/celery/beat.py,572,remove schedule at 3.0.8 upgrade,not
celery/celery/beat.py,575,remove schedule at 3.0.9 upgrade,not
celery/celery/beat.py,650,block until shutdown done.,not
celery/celery/beat.py,689,pragma: no cover,not
celery/celery/beat.py,692,noqa,not
celery/celery/beat.py,722,Need short max interval to be able to stop thread,not
celery/celery/beat.py,723,in reasonable time.,not
celery/celery/bootsteps.py,1,-*- coding: utf-8 -*-,not
celery/celery/bootsteps.py,19,pragma: no cover,not
celery/celery/bootsteps.py,26,: States,not
celery/celery/bootsteps.py,152,pylint: disable=broad-except,not
celery/celery/bootsteps.py,164,"Not fully started, can safely exit.",not
celery/celery/bootsteps.py,183,"Will only get here if running green,",not
celery/celery/bootsteps.py,184,makes sure all greenthreads have exited.,not
celery/celery/bootsteps.py,301,": Optional step name, will use ``qualname`` if not specified.",not
celery/celery/bootsteps.py,304,: Optional short name used for graph outputs and in logs.,not
celery/celery/bootsteps.py,307,: Set this to true if the step is enabled based on some condition.,not
celery/celery/bootsteps.py,310,: List of other steps that that must be started before this step.,not
celery/celery/bootsteps.py,311,: Note that all dependencies must be in the same blueprint.,not
celery/celery/bootsteps.py,314,": This flag is reserved for the workers Consumer,",not
celery/celery/bootsteps.py,315,: since it is required to always be started last.,not
celery/celery/bootsteps.py,316,: There can only be one object marked last,not
celery/celery/bootsteps.py,317,: in every blueprint.,not
celery/celery/bootsteps.py,320,: This provides the default for :meth:`include_if`.,not
celery/celery/bootsteps.py,362,: Optional obj created by the :meth:`create` method.,not
celery/celery/bootsteps.py,363,: This is used by :class:`StartStopStep` to keep the,not
celery/celery/bootsteps.py,364,: original service object.,not
celery/celery/result.py,1,-*- coding: utf-8 -*-,not
celery/celery/result.py,69,: Parent result (if part of a chain),not
celery/celery/result.py,85,: Error raised for timeouts.,not
celery/celery/result.py,88,: The task's UUID.,not
celery/celery/result.py,91,: The task result backend to use.,not
celery/celery/result.py,95,deprecated,not
celery/celery/result.py,230,deprecated alias to :meth:`get`.,not
celery/celery/result.py,337,XXX compat alias,SATD
celery/celery/result.py,476,XXX compat,SATD
celery/celery/result.py,483,noqa,not
celery/celery/result.py,531,: List of results in in the set.,not
celery/celery/result.py,585,don't create new list.,not
celery/celery/result.py,608,XXX compat alias.,SATD
celery/celery/result.py,878,noqa,not
celery/celery/result.py,902,: The UUID of the group.,not
celery/celery/result.py,905,: List/iterator of results in the group,not
celery/celery/result.py,939,Included for Py2 backwards compatibility,not
celery/celery/result.py,996,pylint: disable=super-init-not-called,not
celery/celery/result.py,997,XXX should really not be inheriting from AsyncResult,SATD
celery/celery/result.py,1035,XXX Compat (remove 5.0),SATD
celery/celery/result.py,1078,"earlier backends may just pickle, so check if",not
celery/celery/result.py,1079,result is already prepared.,not
celery/celery/exceptions.py,1,-*- coding: utf-8 -*-,not
celery/celery/exceptions.py,61,Warnings,not
celery/celery/exceptions.py,66,Core errors,not
celery/celery/exceptions.py,70,Kombu (messaging) errors.,not
celery/celery/exceptions.py,73,Task semi-predicates,not
celery/celery/exceptions.py,76,Task related errors.,not
celery/celery/exceptions.py,82,Billiard task errors.,not
celery/celery/exceptions.py,86,Deprecation warnings (forcing Python to emit them).,not
celery/celery/exceptions.py,89,Worker shutdown semi-predicates (inherits from SystemExit).,not
celery/celery/exceptions.py,130,: Optional message describing context of retry.,not
celery/celery/exceptions.py,133,: Exception (if any) that caused the retry to happen.,not
celery/celery/exceptions.py,136,": Time of retry (ETA), either :class:`numbers.Real` or",not
celery/celery/exceptions.py,137,: :class:`~datetime.datetime`.,not
celery/celery/exceptions.py,166,noqa: E305 XXX compat,SATD
celery/celery/exceptions.py,216,XXX Unused,SATD
celery/celery/exceptions.py,256,noqa: E305 XXX compat,SATD
celery/celery/five.py,1,-*- coding: utf-8 -*-,not
celery/celery/_state.py,1,-*- coding: utf-8 -*-,not
celery/celery/_state.py,25,: Global default app used when no current app.,not
celery/celery/_state.py,28,: Function returning the app provided or the default app if none.,not
celery/celery/_state.py,29,:,not
celery/celery/_state.py,30,: The environment variable :envvar:`CELERY_TRACE_APP` is used to,not
celery/celery/_state.py,31,: trace app leaks.  When enabled an exception is raised if there,not
celery/celery/_state.py,32,: is no active app.,not
celery/celery/_state.py,35,": List of all app instances (weakrefs), mustn't be used directly.",not
celery/celery/_state.py,38,: Global set of functions to call whenever a new app is finalized.,not
celery/celery/_state.py,39,": Shared tasks, and built-in tasks are created by adding callbacks here.",not
celery/celery/_state.py,67,: Apps with the :attr:`~celery.app.base.BaseApp.set_as_current` attribute,not
celery/celery/_state.py,68,": sets this, so it will always contain the last instantiated app,",not
celery/celery/_state.py,69,: and is the default app returned by :func:`app_or_default`.,not
celery/celery/_state.py,78,: Function used to push a task to the thread local stack,not
celery/celery/_state.py,79,: keeping track of the currently executing task.,not
celery/celery/_state.py,80,: You must remember to pop the task after.,not
celery/celery/_state.py,83,: Function used to pop a task from the thread local stack,not
celery/celery/_state.py,84,: keeping track of the currently executing task.,not
celery/celery/_state.py,96,: creates the global fallback app instance.,not
celery/celery/_state.py,109,pragma: no cover,not
celery/celery/_state.py,113,pragma: no cover,not
celery/celery/_state.py,114,noqa,not
celery/celery/_state.py,116,noqa+,not
celery/celery/_state.py,140,: Proxy to current app.,not
celery/celery/_state.py,143,: Proxy to current task.,not
celery/celery/_state.py,165,pragma: no cover,not
celery/celery/_state.py,173,noqa+,not
celery/celery/_state.py,178,noqa+,not
celery/celery/_state.py,196,pragma: no cover,not
celery/celery/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/__init__.py,3,:copyright: (c) 2015-2016 Ask Solem.  All rights reserved.,not
celery/celery/__init__.py,4,":copyright: (c) 2012-2014 GoPivotal, Inc., All rights reserved.",not
celery/celery/__init__.py,5,":copyright: (c) 2009 - 2012 Ask Solem and individual contributors,",not
celery/celery/__init__.py,6,All rights reserved.,not
celery/celery/__init__.py,7,":license:   BSD (3 Clause), see LICENSE for more details.",not
celery/celery/__init__.py,16,Lazy loading,not
celery/celery/__init__.py,17,noqa,not
celery/celery/__init__.py,28,-eof meta-,not
celery/celery/__init__.py,43,bumpversion can only search for {current_version},not
celery/celery/__init__.py,44,so we have to parse the version here.,not
celery/celery/__init__.py,52,pragma: no cover,not
celery/celery/__init__.py,63,"This is never executed, but tricks static analyzers (PyDev, PyCharm,",not
celery/celery/__init__.py,64,"pylint, etc.) into knowing the types of these symbols, and what",not
celery/celery/__init__.py,65,they contain.,not
celery/celery/__init__.py,68,pragma: no cover,not
celery/celery/__init__.py,69,noqa,not
celery/celery/__init__.py,70,noqa,not
celery/celery/__init__.py,71,noqa,not
celery/celery/__init__.py,72,noqa,not
celery/celery/__init__.py,73,noqa,not
celery/celery/__init__.py,74,noqa,not
celery/celery/__init__.py,78,noqa,not
celery/celery/__init__.py,80,Eventlet/gevent patching must happen before importing,not
celery/celery/__init__.py,81,"anything else, so these tools must be at top-level.",not
celery/celery/__init__.py,118,pragma: no cover,not
celery/celery/__init__.py,119,"Signals aren't working in gevent versions <1.0,",not
celery/celery/__init__.py,120,and aren't monkey patched by patch_all(),not
celery/celery/__init__.py,151,set up eventlet/gevent environments ASAP,not
celery/celery/__init__.py,156,"this just creates a new module, that imports stuff on first attribute",not
celery/celery/__init__.py,157,access.  This makes the library faster to use.,not
celery/celery/__init__.py,158,pragma: no cover,not
celery/celery/platforms.py,1,-*- coding: utf-8 -*-,not
celery/celery/platforms.py,23,fileno used to be in this module,not
celery/celery/platforms.py,33,pragma: no cover,not
celery/celery/platforms.py,52,exitcodes,not
celery/celery/platforms.py,140,: Path to the pid lock file.,not
celery/celery/platforms.py,169,must contain '\n',not
celery/celery/platforms.py,220,flush and sync so that the re-read below works.,not
celery/celery/platforms.py,224,pragma: no cover,not
celery/celery/platforms.py,238,noqa: E305 XXX compat alias,SATD
celery/celery/platforms.py,316,"octal or decimal, depending on initial zero.",not
celery/celery/platforms.py,343,We need to keep /dev/urandom from closing because,not
celery/celery/platforms.py,344,"shelve needs it, and Beat needs shelve to start.",not
celery/celery/platforms.py,361,first child,not
celery/celery/platforms.py,362,create new session,not
celery/celery/platforms.py,363,pragma: no cover,not
celery/celery/platforms.py,364,second child,not
celery/celery/platforms.py,411,Make sure SIGCLD is using the default handler.,not
celery/celery/platforms.py,415,"Since without stderr any errors will be silently suppressed,",not
celery/celery/platforms.py,416,we need to know that we have access to the logfile.,not
celery/celery/platforms.py,418,"Doesn't actually create the pidfile, but makes sure it's not stale.",not
celery/celery/platforms.py,462,":fun:`setgroups` may have a platform-dependent limit,",not
celery/celery/platforms.py,463,and it's not always possible to know in advance what this limit,not
celery/celery/platforms.py,464,"is, so we use this ugly hack stolen from glibc.",SATD
celery/celery/platforms.py,470,error from Python's check.,not
celery/celery/platforms.py,474,error from the OS.,not
celery/celery/platforms.py,485,pylint: disable=broad-except,not
celery/celery/platforms.py,493,we shouldn't be allowed to change to this group.,not
celery/celery/platforms.py,503,pragma: no cover,not
celery/celery/platforms.py,506,Python 2.7+,not
celery/celery/platforms.py,536,no point trying to setuid unless we're root.,not
celery/celery/platforms.py,554,"If GID isn't defined, get the primary GID of the user.",not
celery/celery/platforms.py,557,"Must set the GID before initgroups(), as setgid()",not
celery/celery/platforms.py,558,is known to zap the group list on some platforms.,not
celery/celery/platforms.py,560,setgid must happen before setuid (otherwise the setgid operation,not
celery/celery/platforms.py,561,may fail because of insufficient privileges and possibly stay,not
celery/celery/platforms.py,562,in a privileged group).,not
celery/celery/platforms.py,566,at last:,not
celery/celery/platforms.py,568,... and make sure privileges cannot be restored:,not
celery/celery/platforms.py,574,"we should get here: cannot restore privileges,",not
celery/celery/platforms.py,575,everything was fine.,not
celery/celery/platforms.py,623,pragma: no cover,not
celery/celery/platforms.py,625,noqa,not
celery/celery/platforms.py,628,noqa,not
celery/celery/platforms.py,630,pragma: no cover,not
celery/celery/platforms.py,632,noqa,not
celery/celery/platforms.py,633,noqa,not
celery/celery/platforms.py,695,compat,not
celery/celery/platforms.py,696,compat,not
celery/celery/platforms.py,697,compat,not
celery/celery/platforms.py,698,compat,not
celery/celery/platforms.py,725,pragma: no cover,not
celery/celery/platforms.py,731,noqa,not
celery/celery/platforms.py,805,pragma: no cover,not
celery/celery/schedules.py,1,-*- coding: utf-8 -*-,not
celery/celery/schedules.py,22,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/schedules.py,91,noqa,not
celery/celery/schedules.py,283,Wrap around max_ if necessary,not
celery/celery/schedules.py,456,assure the result does not preceed the min or exceed the max,not
celery/celery/schedules.py,508,"Tried 2000 times, we're most likely in an infinite loop",not
celery/celery/schedules.py,550,Calling super's init because the kwargs aren't necessarily passed in,not
celery/celery/schedules.py,551,the same form as they are stored by the superclass,not
celery/celery/schedules.py,555,pylint: disable=redefined-outer-name,not
celery/celery/schedules.py,556,caching global ffwd,not
celery/celery/schedules.py,560,"Sunday is day 0, not day 7",not
celery/celery/schedules.py,619,pylint: disable=redefined-outer-name,not
celery/celery/schedules.py,620,caching global ffwd,not
celery/celery/schedules.py,805,pragma: no cover,not
celery/celery/schedules.py,806,Sun won't rise/set today.  Check again tomorrow,not
celery/celery/schedules.py,807,"(specifically, after the next anti-transit).",not
celery/celery/canvas.py,1,-*- coding: utf-8 -*-,not
celery/celery/canvas.py,39,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/canvas.py,47,json in Python 2.7 borks if dict contains byte keys.,not
celery/celery/canvas.py,53,Issue #1656,not
celery/celery/canvas.py,162,works like dict(d),not
celery/celery/canvas.py,164,Also supports using task class/instance instead of string name.,not
celery/celery/canvas.py,198,Extra options set to None are dismissed,not
celery/celery/canvas.py,200,For callbacks: extra args are prepended to the stored args.,not
celery/celery/canvas.py,221,Extra options set to None are dismissed,not
celery/celery/canvas.py,225,pragma: no cover,not
celery/celery/canvas.py,226,"no tasks for chain, etc to find type",not
celery/celery/canvas.py,228,For callbacks: extra args are prepended to the stored args.,not
celery/celery/canvas.py,233,pylint: disable=too-many-function-args,not
celery/celery/canvas.py,234,"Borks on this, as it's a property",not
celery/celery/canvas.py,260,need to deepcopy options so origins links etc. is not modified.,not
celery/celery/canvas.py,289,pylint: disable=redefined-outer-name,not
celery/celery/canvas.py,290,XXX chord is also a class in outer scope.,SATD
celery/celery/canvas.py,306,pylint: disable=too-many-function-args,not
celery/celery/canvas.py,307,"Borks on this, as it's a property.",not
celery/celery/canvas.py,401,"These could be implemented in each individual class,",not
celery/celery/canvas.py,402,"I'm sure, but for now we have this.",not
celery/celery/canvas.py,404,group() | task -> chord,not
celery/celery/canvas.py,407,unroll group with one member,not
celery/celery/canvas.py,410,chain | group() -> chain,not
celery/celery/canvas.py,413,"If the chain is empty, return the group",not
celery/celery/canvas.py,417,task | group() -> chain,not
celery/celery/canvas.py,421,task | chain -> chain,not
celery/celery/canvas.py,425,chain | chain -> chain,not
celery/celery/canvas.py,429,chord | task ->  attach to body,not
celery/celery/canvas.py,436,CHAIN [last item is group] | TASK -> chord,not
celery/celery/canvas.py,442,CHAIN [last item is chord] -> chain with chord body.,not
celery/celery/canvas.py,447,chain | task -> chain,not
celery/celery/canvas.py,450,task | task -> chain,not
celery/celery/canvas.py,478,"for serialization, the task type is lazily loaded,",not
celery/celery/canvas.py,479,and not stored in the dict itself.,not
celery/celery/canvas.py,488,pragma: no cover,not
celery/celery/canvas.py,495,for duck typing compatibility with Task.name,not
celery/celery/canvas.py,510,task not registered,not
celery/celery/canvas.py,535,When we publish groups we reuse the same options dictionary for all of,not
celery/celery/canvas.py,536,the tasks in the group. See:,not
celery/celery/canvas.py,537,https://github.com/celery/celery/blob/fb37cb0b8/celery/canvas.py#L1022.,not
celery/celery/canvas.py,538,Issue #5354 reported that the following type of canvases,not
celery/celery/canvas.py,539,causes a Celery worker to hang:,not
celery/celery/canvas.py,540,group(,not
celery/celery/canvas.py,541,"add.s(1, 1),",not
celery/celery/canvas.py,542,"add.s(1, 1)",not
celery/celery/canvas.py,543,") | tsum.s() | add.s(1) | group(add.s(1), add.s(1))",not
celery/celery/canvas.py,544,The resolution of #5354 in PR #5681 was to only set the `chain` key,not
celery/celery/canvas.py,545,in the options dictionary if it is not present.,not
celery/celery/canvas.py,546,Otherwise we extend the existing list of tasks in the chain with the new,not
celery/celery/canvas.py,547,tasks: options['chain'].extend(chain_).,not
celery/celery/canvas.py,548,Before PR #5681 we overrode the `chain` key in each iteration,not
celery/celery/canvas.py,549,of the loop which applies all the tasks in the group:,not
celery/celery/canvas.py,550,options['chain'] = tasks if not use_link else None,not
celery/celery/canvas.py,551,This caused Celery to execute chains correctly in most cases since,not
celery/celery/canvas.py,552,in each iteration the `chain` key would reset itself to a new value,not
celery/celery/canvas.py,553,and the side effect of mutating the key did not propagate,not
celery/celery/canvas.py,554,to the next task in the group.,not
celery/celery/canvas.py,555,"Since we now mutated the `chain` key, a *list* which is passed",not
celery/celery/canvas.py,556,"by *reference*, the next task in the group will extend the list",not
celery/celery/canvas.py,557,of tasks in the chain instead of setting a new one from the chain_,not
celery/celery/canvas.py,558,variable above.,not
celery/celery/canvas.py,559,"This causes Celery to execute a chain, even though there might not be",not
celery/celery/canvas.py,560,"one to begin with. Alternatively, it causes Celery to execute more tasks",not
celery/celery/canvas.py,561,that were previously present in the previous task in the group.,not
celery/celery/canvas.py,562,The solution is to be careful and never mutate the options dictionary,not
celery/celery/canvas.py,563,to begin with.,not
celery/celery/canvas.py,564,Here is an example of a canvas which triggers this issue:,not
celery/celery/canvas.py,565,"add.s(5, 6) | group((add.s(1) | add.s(2), add.s(3))).",not
celery/celery/canvas.py,566,"The expected result is [14, 14]. However, when we extend the `chain`",not
celery/celery/canvas.py,567,key the `add.s(3)` task erroneously has `add.s(2)` in its chain since,not
celery/celery/canvas.py,568,it was previously applied to `add.s(1)`.,not
celery/celery/canvas.py,569,"Without being careful not to mutate the options dictionary, the result",not
celery/celery/canvas.py,570,"in this case is [16, 14].",not
celery/celery/canvas.py,571,To avoid deep-copying the entire options dictionary every single time we,not
celery/celery/canvas.py,572,run a chain we use a ChainMap and ensure that we never mutate,not
celery/celery/canvas.py,573,"the original `chain` key, hence we use list_a + list_b to create a new",not
celery/celery/canvas.py,574,list.,not
celery/celery/canvas.py,580,"chain option may already be set, resulting in",not
celery/celery/canvas.py,581,"""multiple values for keyword argument 'chain'"" error.",not
celery/celery/canvas.py,582,Issue #3379.,not
celery/celery/canvas.py,583,"If a chain already exists, we need to extend it with the next",not
celery/celery/canvas.py,584,tasks in the chain.,not
celery/celery/canvas.py,585,Issue #5354.,not
celery/celery/canvas.py,586,WARNING: Be careful not to mutate `options['chain']`.,not
celery/celery/canvas.py,600,aaaargh,not
celery/celery/canvas.py,629,Clone chain's tasks assigning signatures from link_error,not
celery/celery/canvas.py,630,to each task,not
celery/celery/canvas.py,638,"python is best at unpacking kwargs, so .run is here to do that.",not
celery/celery/canvas.py,651,pylint: disable=redefined-outer-name,not
celery/celery/canvas.py,652,XXX chord is also a class in outer scope.,SATD
celery/celery/canvas.py,678,pylint: disable=redefined-outer-name,not
celery/celery/canvas.py,679,XXX chord is also a class in outer scope.,SATD
celery/celery/canvas.py,691,use chain message field for protocol 2 and later.,not
celery/celery/canvas.py,692,this avoids pickle blowing the stack on the recursion,not
celery/celery/canvas.py,693,required by linking task together in a tree structure.,not
celery/celery/canvas.py,694,(why is pickle using recursion? or better yet why cannot python,SATD
celery/celery/canvas.py,695,do tail call optimization making recursion actually useful?),not
celery/celery/canvas.py,708,NOTE: We are doing this in reverse order.,not
celery/celery/canvas.py,709,"The result is a list of tasks in reverse order, that is",not
celery/celery/canvas.py,710,passed as the ``chain`` message field.,not
celery/celery/canvas.py,711,As it's reversed the worker can just do ``chain.pop()`` to,not
celery/celery/canvas.py,712,get the next task in the chain.,not
celery/celery/canvas.py,722,first task gets partial args from chain,not
celery/celery/canvas.py,732,splice the chain,not
celery/celery/canvas.py,737,"automatically upgrade group(...) | s to chord(group, s)",not
celery/celery/canvas.py,738,for chords we freeze by pretending it's a normal,not
celery/celery/canvas.py,739,signature instead of a group.,not
celery/celery/canvas.py,748,A GroupResult does not have a task_id since it consists,not
celery/celery/canvas.py,749,of multiple tasks.,not
celery/celery/canvas.py,750,"We therefore, have to construct the chord without it.",not
celery/celery/canvas.py,751,"Issues #5467, #3585.",not
celery/celery/canvas.py,758,chain(task_id=id) means task id is set for the last task,not
celery/celery/canvas.py,759,in the chain.  If the chord is part of a chord/group,not
celery/celery/canvas.py,760,then that chord/group must synchronize based on the,not
celery/celery/canvas.py,761,"last task in the chain, so we only set the group_id and",not
celery/celery/canvas.py,762,chord callback for the last task.,not
celery/celery/canvas.py,774,link previous task to this task.,not
celery/celery/canvas.py,790,"If the task is a chord, and the body is a chain",not
celery/celery/canvas.py,791,"the chain has already been prepared, and res is",not
celery/celery/canvas.py,792,set to the last task in the callback chain.,not
celery/celery/canvas.py,794,We need to change that so that it points to the,not
celery/celery/canvas.py,795,group result object.,not
celery/celery/canvas.py,879,"could be function, but must be able to reference as :class:`chain`.",not
celery/celery/canvas.py,881,"This forces `chain(X, Y, Z)` to work the same way as `X | Y | Z`",not
celery/celery/canvas.py,885,if is_list(tasks) and len(tasks) == 1:,not
celery/celery/canvas.py,886,"return super(chain, cls).__new__(cls, tasks, **kwargs)",not
celery/celery/canvas.py,908,need to evaluate generators,not
celery/celery/canvas.py,981,need to evaluate generators,not
celery/celery/canvas.py,1090,"- Special case of group(A.s() | group(B.s(), C.s()))",not
celery/celery/canvas.py,1091,"That is, group with single item that's a chain but the",not
celery/celery/canvas.py,1092,last task in that chain is a group.,not
celery/celery/canvas.py,1093,,not
celery/celery/canvas.py,1094,"We cannot actually support arbitrary GroupResults in chains,",not
celery/celery/canvas.py,1095,but this special case we can.,not
celery/celery/canvas.py,1109,empty group returns GroupResult,not
celery/celery/canvas.py,1121,Simply link to first task,not
celery/celery/canvas.py,1129,See issue #5265.  I don't use isinstance because current tests,not
celery/celery/canvas.py,1130,pass a Mock object as argument.,not
celery/celery/canvas.py,1141,"local sigs are always of type Signature, and we",not
celery/celery/canvas.py,1142,clone them to make sure we don't modify the originals.,not
celery/celery/canvas.py,1145,serialized sigs must be converted to Signature.,not
celery/celery/canvas.py,1148,needs yield_from :(,not
celery/celery/canvas.py,1162,pylint: disable=redefined-outer-name,not
celery/celery/canvas.py,1163,XXX chord is also a class in outer scope.,SATD
celery/celery/canvas.py,1172,"adding callback to result, such that it will gradually",not
celery/celery/canvas.py,1173,fulfill the barrier.,not
celery/celery/canvas.py,1174,,not
celery/celery/canvas.py,1175,"Using barrier.add would use result.then, but we need",not
celery/celery/canvas.py,1176,to add the weak argument here to only create a weak,not
celery/celery/canvas.py,1177,reference to the object.,not
celery/celery/canvas.py,1181,"<-- r.parent, etc set in the frozen result.",not
celery/celery/canvas.py,1184,"remove task_id and use that as the group_id,",not
celery/celery/canvas.py,1185,if we don't remove it then every task will have the same id...,not
celery/celery/canvas.py,1193,pylint: disable=redefined-outer-name,not
celery/celery/canvas.py,1194,XXX chord is also a class in outer scope.,SATD
celery/celery/canvas.py,1207,Need to unroll subgroups early so that chord gets the,not
celery/celery/canvas.py,1208,right result instance for chord_unlock etc.,not
celery/celery/canvas.py,1221,pylint: disable=redefined-outer-name,not
celery/celery/canvas.py,1222,XXX chord is also a class in outer scope.,SATD
celery/celery/canvas.py,1292,Python signatures are better at extracting keys from dicts,SATD
celery/celery/canvas.py,1293,than manually popping things off.,not
celery/celery/canvas.py,1312,pylint: disable=redefined-outer-name,not
celery/celery/canvas.py,1313,XXX chord is also a class in outer scope.,SATD
celery/celery/canvas.py,1322,"we need to link the body result back to the group result,",not
celery/celery/canvas.py,1323,"but the body may actually be a chain,",not
celery/celery/canvas.py,1324,so find the first result without a parent,not
celery/celery/canvas.py,1355,"chord([A, B, ...], C)",not
celery/celery/canvas.py,1399,Chains should not be passed to the header tasks. See #3771,not
celery/celery/canvas.py,1401,"Neither should chords, for deeply nested chords to work",not
celery/celery/canvas.py,1416,The execution of a chord body is normally triggered by its header's,not
celery/celery/canvas.py,1417,"tasks completing. If the header is empty this will never happen, so",not
celery/celery/canvas.py,1418,we execute the body manually here.,not
celery/celery/canvas.py,1427,need to make copy of body,not
celery/celery/canvas.py,1444,"changes mutability of header only, not callback.",not
celery/celery/canvas.py,1470,is a group,not
celery/celery/canvas.py,1500,noqa: E305 XXX compat,SATD
celery/celery/canvas.py,1530,noqa: E305 XXX compat,SATD
celery/celery/bin/call.py,23,"since we have an argument --args, we need to name this differently.",not
celery/celery/bin/call.py,58,arguments,not
celery/celery/bin/call.py,62,Expires can be int/float.,not
celery/celery/bin/call.py,66,or a string describing an ISO 8601 datetime.,not
celery/celery/bin/call.py,72,send the task and print the id.,not
celery/celery/bin/amqp.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/amqp.py,24,Map to coerce strings to other types.,not
celery/celery/bin/amqp.py,51,: List of arguments this command takes.,not
celery/celery/bin/amqp.py,52,": Should contain ``(argument_name, argument_type)`` tuples.",not
celery/celery/bin/amqp.py,55,: Helpful human string representation of what this command returns.,not
celery/celery/bin/amqp.py,56,": May be :const:`None`, to signify the return type is unknown.",not
celery/celery/bin/amqp.py,67,"Might be a custom way to coerce the string value,",not
celery/celery/bin/amqp.py,68,so look in the coercion map.,not
celery/celery/bin/amqp.py,130,: Map of built-in command names -> method names,not
celery/celery/bin/amqp.py,137,: Map of AMQP API commands and their :class:`Spec`.,not
celery/celery/bin/amqp.py,174,XXX Hack to fix Issue #2013,SATD
celery/celery/bin/amqp.py,285,pylint: disable=broad-except,not
celery/celery/bin/amqp.py,371,pragma: no cover,not
celery/celery/bin/upgrade.py,53,"gives list of tuples: ``(did_change, line_contents)``",not
celery/celery/bin/upgrade.py,57,did have changes,not
celery/celery/bin/upgrade.py,86,"sort by length to avoid, for example, broker_transport overriding",not
celery/celery/bin/upgrade.py,87,broker_transport_options.,not
celery/celery/bin/upgrade.py,91,only one match per line.,not
celery/celery/bin/base.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/base.py,27,"Option is here for backwards compatibility, as third-party commands",not
celery/celery/bin/base.py,28,may import it from here.,not
celery/celery/bin/base.py,30,pylint: disable=deprecated-module,not
celery/celery/bin/base.py,31,pragma: no cover,not
celery/celery/bin/base.py,32,noqa,not
celery/celery/bin/base.py,36,pragma: no cover,not
celery/celery/bin/base.py,43,"always enable DeprecationWarnings, so our users can see them.",not
celery/celery/bin/base.py,47,TODO: Remove this once we drop support for Python < 3.6,SATD
celery/celery/bin/base.py,91,argparse checks for existence of this kwarg,not
celery/celery/bin/base.py,94,"store_true sets value to ""('NO', 'DEFAULT')"" for some",not
celery/celery/bin/base.py,95,"crazy reason, so not to set a sane default here.",not
celery/celery/bin/base.py,171,: Arg list used in help.,not
celery/celery/bin/base.py,174,: Application version.,not
celery/celery/bin/base.py,177,: If false the parser will raise an exception if positional,not
celery/celery/bin/base.py,178,: args are provided.,not
celery/celery/bin/base.py,181,: List of options (without preload options).,not
celery/celery/bin/base.py,184,module Rst documentation to parse help from (if any),not
celery/celery/bin/base.py,187,Some programs (multi) does not want to load the app specified,not
celery/celery/bin/base.py,188,(Issue #1008).,not
celery/celery/bin/base.py,191,: Enable if the application should support config from the cmdline.,not
celery/celery/bin/base.py,194,: Default configuration name-space.,not
celery/celery/bin/base.py,197,: Text to print at end of --help,not
celery/celery/bin/base.py,200,: Text to print in --help before option list.,not
celery/celery/bin/base.py,203,: Set to true if this command doesn't have sub-commands,not
celery/celery/bin/base.py,206,used by :meth:`say_remote_command_reply`.,not
celery/celery/bin/base.py,208,used by :meth:`say_chat`.,not
celery/celery/bin/base.py,213,: Name of argparse option used for parsing positional args.,not
celery/celery/bin/base.py,237,pylint: disable=method-hidden,not
celery/celery/bin/base.py,238,on_error argument to __init__ may override this method.,not
celery/celery/bin/base.py,242,pylint: disable=method-hidden,not
celery/celery/bin/base.py,243,on_usage_error argument to __init__ may override this method.,not
celery/celery/bin/base.py,250,maybe we were forked.,not
celery/celery/bin/base.py,282,Should we load any special concurrency environment?,not
celery/celery/bin/base.py,286,Dump version and exit if '--version' arg set.,not
celery/celery/bin/base.py,291,"In Python 2.7 and below, there is no name instance for exceptions",not
celery/celery/bin/base.py,292,TODO: Remove this once we drop support for Python 2.7,SATD
celery/celery/bin/base.py,324,"This is for optparse options, please use add_arguments.",not
celery/celery/bin/base.py,426,"Don't want to load configuration to just print the version,",not
celery/celery/bin/base.py,427,so we handle --version manually here.,not
celery/celery/bin/base.py,433,for compatibility with optparse usage.,not
celery/celery/bin/base.py,449,"for backward compatibility with optparse, we automatically",not
celery/celery/bin/base.py,450,add arbitrary positional args.,not
celery/celery/bin/base.py,493,Default app takes loader from this env (Issue #1066).,not
celery/celery/bin/base.py,535,XXX compat,SATD
celery/celery/bin/base.py,605,omit proxy,not
celery/celery/bin/base.py,627,<-- take first.,not
celery/celery/bin/control.py,153,need to import task modules for custom user-remote control commands.,not
celery/celery/bin/graph.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/multi.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/multi.py,170,: Final exit code.,not
celery/celery/bin/multi.py,237,fh is an old alias to stdout.,not
celery/celery/bin/multi.py,248,compat alias,not
celery/celery/bin/multi.py,258,Reserve the --nosplash|--quiet|-q/--verbose options.,not
celery/celery/bin/multi.py,278,don't modify callers argv.,not
celery/celery/bin/multi.py,299,compat,not
celery/celery/bin/multi.py,458,pragma: no cover,not
celery/celery/bin/beat.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/beat.py,133,pragma: no cover,not
celery/celery/bin/shell.py,12,pragma: no cover,not
celery/celery/bin/shell.py,71,pylint: disable=attribute-defined-outside-init,not
celery/celery/bin/shell.py,102,noqa,not
celery/celery/bin/shell.py,105,noqa,not
celery/celery/bin/shell.py,139,pragma: no cover,not
celery/celery/bin/shell.py,146,pragma: no cover,not
celery/celery/bin/shell.py,150,pragma: no cover,not
celery/celery/bin/shell.py,154,pragma: no cover,not
celery/celery/bin/events.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/events.py,179,pragma: no cover,not
celery/celery/bin/logtool.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/celeryd_detach.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/celeryd_detach.py,40,pylint: disable=broad-except,not
celery/celery/bin/celeryd_detach.py,111,Extracts command-line config appearing after '--':,not
celery/celery/bin/celeryd_detach.py,112,celery worker -l info -- worker.prefetch_multiplier=10,not
celery/celery/bin/celeryd_detach.py,113,This to make sure argparse doesn't gobble it up.,not
celery/celery/bin/celeryd_detach.py,138,pragma: no cover,not
celery/celery/bin/worker.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/worker.py,209,parse help from this too,not
celery/celery/bin/worker.py,219,parse options before detaching so errors can be handled.,not
celery/celery/bin/worker.py,229,will never return,not
celery/celery/bin/worker.py,237,Pools like eventlet/gevent needs to patch libs as early,not
celery/celery/bin/worker.py,238,as possible.,not
celery/celery/bin/worker.py,248,pragma: no cover,not
celery/celery/bin/worker.py,255,node format handled by celery.app.log.setup,not
celery/celery/bin/worker.py,263,this command support custom pools,not
celery/celery/bin/worker.py,264,that may have to be loaded as early as possible.,not
celery/celery/bin/worker.py,357,"Fix for setuptools generated scripts, so that it will",not
celery/celery/bin/worker.py,358,work with multiprocessing fork emulation.,not
celery/celery/bin/worker.py,359,(see multiprocessing.forking.get_preparation_data()),not
celery/celery/bin/worker.py,360,pragma: no cover,not
celery/celery/bin/worker.py,367,pragma: no cover,not
celery/celery/bin/celery.py,1,-*- coding: utf-8 -*-,not
celery/celery/bin/celery.py,262,Import commands from other modules,not
celery/celery/bin/celery.py,264,Cannot use relative imports here due to a Windows issue (#1111).,not
celery/celery/bin/celery.py,268,noqa,not
celery/celery/bin/celery.py,312,"Fix for setuptools generated scripts, so that it will",not
celery/celery/bin/celery.py,313,work with multiprocessing fork emulation.,not
celery/celery/bin/celery.py,314,(see multiprocessing.forking.get_preparation_data()),not
celery/celery/bin/celery.py,316,pragma: no cover,not
celery/celery/bin/celery.py,445,we eat the next argument even though we don't know,not
celery/celery/bin/celery.py,446,if this option takes an argument or not.,not
celery/celery/bin/celery.py,447,instead we'll assume what's the command name in the,not
celery/celery/bin/celery.py,448,return statements below.,not
celery/celery/bin/celery.py,452,is another option,not
celery/celery/bin/celery.py,455,is (maybe) a value for this option,not
celery/celery/bin/celery.py,458,pragma: no cover,not
celery/celery/bin/celery.py,464,pragma: no cover,not
celery/celery/bin/celery.py,465,if there are more arguments left then divide and swap,not
celery/celery/bin/celery.py,466,we assume the first argument in argv[i:] is the command,not
celery/celery/bin/celery.py,467,name.,not
celery/celery/bin/celery.py,469,if there are no more arguments then the last arg in rest',not
celery/celery/bin/celery.py,470,must be the command.,not
celery/celery/bin/celery.py,491,Issue 1008,not
celery/celery/bin/celery.py,533,this command supports custom pools,not
celery/celery/bin/celery.py,534,that may have to be loaded as early as possible.,not
celery/celery/bin/celery.py,547,pragma: no cover,not
celery/celery/task/base.py,1,-*- coding: utf-8 -*-,not
celery/celery/task/base.py,24,: list of methods that must be classmethods in the old API.,not
celery/celery/task/base.py,59,used by old non-abstract task classes,not
celery/celery/task/base.py,65,- Abstract class: abstract attribute shouldn't be inherited.,not
celery/celery/task/base.py,70,"The 'app' attribute is now a property, with the real app located",not
celery/celery/task/base.py,71,"in the '_app' attribute.  Previously this was a regular attribute,",not
celery/celery/task/base.py,72,so we should support classes defining it.,not
celery/celery/task/base.py,75,Attempt to inherit app from one the bases,not
celery/celery/task/base.py,85,- Automatically generate missing/empty name.,not
celery/celery/task/base.py,91,non decorated tasks must also be shared in case,not
celery/celery/task/base.py,92,an app is created multiple times due to modules,not
celery/celery/task/base.py,93,imported under multiple names.,not
celery/celery/task/base.py,94,"Hairy stuff,  here to be compatible with 2.x.",not
celery/celery/task/base.py,95,"People shouldn't use non-abstract task classes anymore,",not
celery/celery/task/base.py,96,use the task decorator.,not
celery/celery/task/base.py,100,the creation count is used as a safety,not
celery/celery/task/base.py,101,so that the same task isn't added recursively,not
celery/celery/task/base.py,102,to the set of constructors.,not
celery/celery/task/base.py,110,- Create and register class.,not
celery/celery/task/base.py,111,Because of the way import happens (recursively),not
celery/celery/task/base.py,112,we may or may not be the first time the task tries to register,not
celery/celery/task/base.py,113,with the framework.  There should only be one class for each task,not
celery/celery/task/base.py,114,"name, so we always return the registered version.",not
celery/celery/task/base.py,138,- Deprecated compat. attributes -:,not
celery/celery/task/base.py,145,XXX deprecated,SATD
celery/celery/task/base.py,146,XXX deprecated,SATD
celery/celery/task/base.py,155,"In old Celery the @task decorator didn't exist, so one would create",not
celery/celery/task/base.py,156,"classes instead and use them directly (e.g., MyTask.apply_async()).",not
celery/celery/task/base.py,157,the use of classmethods was a hack so that it was not necessary,SATD
celery/celery/task/base.py,158,"to instantiate the class before using it, but it has only",not
celery/celery/task/base.py,159,given us pain (like all magic).,not
celery/celery/task/base.py,174,noqa,not
celery/celery/task/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/task/__init__.py,23,pragma: no cover,not
celery/celery/task/__init__.py,24,"This is never executed, but tricks static analyzers (PyDev, PyCharm,",not
celery/celery/task/__init__.py,25,"pylint, etc.) into knowing the types of these symbols, and what",not
celery/celery/task/__init__.py,26,they contain.,not
celery/celery/task/__init__.py,37,pragma: no cover,not
celery/celery/app/backends.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/annotations.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/defaults.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/defaults.py,261,taken from queue,not
celery/celery/app/defaults.py,263,taken from queue,not
celery/celery/app/defaults.py,380,pragma: no cover,not
celery/celery/app/defaults.py,394,- Try specified name-space first.,not
celery/celery/app/defaults.py,401,- Try all the other namespaces.,not
celery/celery/app/defaults.py,410,- See if name is a qualname last.,not
celery/celery/app/amqp.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/amqp.py,28,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/app/amqp.py,33,: earliest date supported by time.mktime.,not
celery/celery/app/amqp.py,36,json in Python 2.7 borks if dict contains byte keys.,not
celery/celery/app/amqp.py,39,: Human readable queue declaration.,not
celery/celery/app/amqp.py,66,": If set, this is a subset of queues to consume from.",not
celery/celery/app/amqp.py,67,: The rest of the queues are then used for routing only.,not
celery/celery/app/amqp.py,126,docs used to use binding_key as routing key,not
celery/celery/app/amqp.py,202,using all queues,not
celery/celery/app/amqp.py,204,using selection,not
celery/celery/app/amqp.py,225,: compat alias to Connection,not
celery/celery/app/amqp.py,230,: Cached and prepared routing table.,not
celery/celery/app/amqp.py,233,: Underlying producer pool instance automatically,not
celery/celery/app/amqp.py,234,: set by the :attr:`producer_pool`.,not
celery/celery/app/amqp.py,237,Exchange class/function used when defining automatic queues.,not
celery/celery/app/amqp.py,238,"For example, you can use ``autoexchange = lambda n: None`` to use the",not
celery/celery/app/amqp.py,239,AMQP default exchange: a shortcut to bypass routing,not
celery/celery/app/amqp.py,240,and instead send directly to the queue named in the routing key.,not
celery/celery/app/amqp.py,243,: Max size of positional argument representation used for,not
celery/celery/app/amqp.py,244,: logging purposes.,not
celery/celery/app/amqp.py,247,: Max size of keyword argument representation used for logging purposes.,not
celery/celery/app/amqp.py,268,"Create new :class:`Queues` instance, using queue defaults",not
celery/celery/app/amqp.py,269,from the current configuration.,not
celery/celery/app/amqp.py,321,convert countdown to ETA,not
celery/celery/app/amqp.py,337,If we retry a task `expires` will already be ISO8601-formatted.,not
celery/celery/app/amqp.py,346,pragma: no cover,not
celery/celery/app/amqp.py,354,empty root_id defaults to task_id,not
celery/celery/app/amqp.py,414,convert countdown to ETA,not
celery/celery/app/amqp.py,425,pragma: no cover,not
celery/celery/app/amqp.py,482,XXX compat,SATD
celery/celery/app/amqp.py,528,"convert to anon-exchange, when exchange not set and direct ex.",not
celery/celery/app/amqp.py,532,"not topic exchange, and exchange not undefined",not
celery/celery/app/amqp.py,538,merge default and custom policy,not
celery/celery/app/amqp.py,564,XXX deprecated,SATD
celery/celery/app/amqp.py,565,protocol version 2,not
celery/celery/app/amqp.py,571,protocol version 1,not
celery/celery/app/amqp.py,601,noqa,not
celery/celery/app/amqp.py,626,compat alias,not
celery/celery/app/amqp.py,639,We call Dispatcher.publish with a custom producer,not
celery/celery/app/amqp.py,640,so don't need the diuspatcher to be enabled.,not
celery/celery/app/task.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/task.py,32,: extracts attributes related to publishing a message from an object.,not
celery/celery/app/task.py,36,imm+man is deprecated,not
celery/celery/app/task.py,39,We take __repr__ very seriously around here ;),not
celery/celery/app/task.py,44,: Here for backwards compatibility as tasks no longer use a custom meta-class.,not
celery/celery/app/task.py,85,compat alias to group,not
celery/celery/app/task.py,95,see property,not
celery/celery/app/task.py,135,children must be an empty list for every thread,not
celery/celery/app/task.py,153,set by old base in celery.task.base,not
celery/celery/app/task.py,158,": Execution strategy used, or the qualified name of one.",not
celery/celery/app/task.py,161,": Request class used, or the qualified name of one.",not
celery/celery/app/task.py,164,: The application instance associated with this task class.,not
celery/celery/app/task.py,167,: Name of the task.,not
celery/celery/app/task.py,170,: Enable argument checking.,not
celery/celery/app/task.py,171,: You can set this to false if you don't want the signature to be,not
celery/celery/app/task.py,172,: checked when calling the task.,not
celery/celery/app/task.py,173,: Defaults to :attr:`app.strict_typing <@Celery.strict_typing>`.,not
celery/celery/app/task.py,176,": Maximum number of retries before giving up.  If set to :const:`None`,",not
celery/celery/app/task.py,177,: it will **never** stop retrying.,not
celery/celery/app/task.py,180,: Default time in seconds before a retry of the task should be,not
celery/celery/app/task.py,181,: executed.  3 minutes by default.,not
celery/celery/app/task.py,184,: Rate limit for this task type.  Examples: :const:`None` (no rate,not
celery/celery/app/task.py,185,": limit), `'100/s'` (hundred tasks a second), `'100/m'` (hundred tasks",not
celery/celery/app/task.py,186,": a minute),`'100/h'` (hundred tasks an hour)",not
celery/celery/app/task.py,189,: If enabled the worker won't store task state and return values,not
celery/celery/app/task.py,190,: for this task.  Defaults to the :setting:`task_ignore_result`,not
celery/celery/app/task.py,191,: setting.,not
celery/celery/app/task.py,194,: If enabled the request will keep track of subtasks started by,not
celery/celery/app/task.py,195,": this task, and this information will be sent with the result",not
celery/celery/app/task.py,196,: (``result.children``).,not
celery/celery/app/task.py,199,: If enabled the worker will send monitoring events related to,not
celery/celery/app/task.py,200,: this task (but only if the worker is configured to send,not
celery/celery/app/task.py,201,: task related events).,not
celery/celery/app/task.py,202,: Note that this has no effect on the task-failure event case,not
celery/celery/app/task.py,203,: where a task is not registered (as it will have no task class,not
celery/celery/app/task.py,204,: to check this flag).,not
celery/celery/app/task.py,207,: When enabled errors will be stored even if the task is otherwise,not
celery/celery/app/task.py,208,: configured to ignore results.,not
celery/celery/app/task.py,211,: The name of a serializer that are registered with,not
celery/celery/app/task.py,212,: :mod:`kombu.serialization.registry`.  Default is `'json'`.,not
celery/celery/app/task.py,215,: Hard time limit.,not
celery/celery/app/task.py,216,: Defaults to the :setting:`task_time_limit` setting.,not
celery/celery/app/task.py,219,: Soft time limit.,not
celery/celery/app/task.py,220,: Defaults to the :setting:`task_soft_time_limit` setting.,not
celery/celery/app/task.py,223,: The result store backend used for this task.,not
celery/celery/app/task.py,226,: If disabled this task won't be registered automatically.,not
celery/celery/app/task.py,229,: If enabled the task will report its status as 'started' when the task,not
celery/celery/app/task.py,230,: is executed by a worker.  Disabled by default as the normal behavior,not
celery/celery/app/task.py,231,": is to not report that level of granularity.  Tasks are either pending,",not
celery/celery/app/task.py,232,": finished, or waiting to be retried.",not
celery/celery/app/task.py,233,:,not
celery/celery/app/task.py,234,: Having a 'started' status can be useful for when there are long,not
celery/celery/app/task.py,235,: running tasks and there's a need to report what task is currently,not
celery/celery/app/task.py,236,: running.,not
celery/celery/app/task.py,237,:,not
celery/celery/app/task.py,238,: The application default can be overridden using the,not
celery/celery/app/task.py,239,: :setting:`task_track_started` setting.,not
celery/celery/app/task.py,242,: When enabled messages for this task will be acknowledged **after**,not
celery/celery/app/task.py,243,": the task has been executed, and not *just before* (the",not
celery/celery/app/task.py,244,: default behavior).,not
celery/celery/app/task.py,245,:,not
celery/celery/app/task.py,246,: Please note that this means the task may be executed twice if the,not
celery/celery/app/task.py,247,: worker crashes mid execution.,not
celery/celery/app/task.py,248,:,not
celery/celery/app/task.py,249,: The application default can be overridden with the,not
celery/celery/app/task.py,250,: :setting:`task_acks_late` setting.,not
celery/celery/app/task.py,253,: When enabled messages for this task will be acknowledged even if it,not
celery/celery/app/task.py,254,: fails or times out.,not
celery/celery/app/task.py,255,:,not
celery/celery/app/task.py,256,: Configuring this setting only applies to tasks that are,not
celery/celery/app/task.py,257,: acknowledged **after** they have been executed and only if,not
celery/celery/app/task.py,258,: :setting:`task_acks_late` is enabled.,not
celery/celery/app/task.py,259,:,not
celery/celery/app/task.py,260,: The application default can be overridden with the,not
celery/celery/app/task.py,261,: :setting:`task_acks_on_failure_or_timeout` setting.,not
celery/celery/app/task.py,264,": Even if :attr:`acks_late` is enabled, the worker will",not
celery/celery/app/task.py,265,: acknowledge tasks when the worker process executing them abruptly,not
celery/celery/app/task.py,266,": exits or is signaled (e.g., :sig:`KILL`/:sig:`INT`, etc).",not
celery/celery/app/task.py,267,:,not
celery/celery/app/task.py,268,": Setting this to true allows the message to be re-queued instead,",not
celery/celery/app/task.py,269,": so that the task will execute again by the same worker, or another",not
celery/celery/app/task.py,270,: worker.,not
celery/celery/app/task.py,271,:,not
celery/celery/app/task.py,272,: Warning: Enabling this can cause message loops; make sure you know,not
celery/celery/app/task.py,273,: what you're doing.,not
celery/celery/app/task.py,276,: Tuple of expected exceptions.,not
celery/celery/app/task.py,277,:,not
celery/celery/app/task.py,278,: These are errors that are expected in normal operation,not
celery/celery/app/task.py,279,: and that shouldn't be regarded as a real error by the worker.,not
celery/celery/app/task.py,280,: Currently this means that the state will be updated to an error,not
celery/celery/app/task.py,281,": state, but the worker won't log the event as an error.",not
celery/celery/app/task.py,284,: Default task expiry time.,not
celery/celery/app/task.py,287,: Default task priority.,not
celery/celery/app/task.py,290,: Max length of result representation used in logs and events.,not
celery/celery/app/task.py,293,": Task request stack, the current request will be the topmost.",not
celery/celery/app/task.py,296,: Some may expect a request to exist even if the task hasn't been,not
celery/celery/app/task.py,297,: called.  This should probably be deprecated.,not
celery/celery/app/task.py,300,: Deprecated attribute ``abstract`` here for compatibility.,not
celery/celery/app/task.py,319,set by backend property.,not
celery/celery/app/task.py,321,"- Tasks are lazily bound, so that configuration is not set",not
celery/celery/app/task.py,322,- until the task is actually used,not
celery/celery/app/task.py,329,clear option cache,not
celery/celery/app/task.py,338,decorate with annotations from config.,not
celery/celery/app/task.py,345,PeriodicTask uses this to add itself to the PeriodicTask schedule.,not
celery/celery/app/task.py,364,The app property's __set__  method is not called,not
celery/celery/app/task.py,365,"if Task.app is set (on the class), so must bind on use.",not
celery/celery/app/task.py,398,"- tasks are pickled into the name of the task only, and the receiver",not
celery/celery/app/task.py,399,- simply grabs it from the local registry.,not
celery/celery/app/task.py,400,"- in later versions the module of the task is also included,",not
celery/celery/app/task.py,401,- and the receiving side tries to import that module so that,not
celery/celery/app/task.py,402,- it will work even if the task hasn't been registered.,not
celery/celery/app/task.py,527,pragma: no cover,not
celery/celery/app/task.py,609,sent to anon-exchange,not
celery/celery/app/task.py,616,XXX compat,SATD
celery/celery/app/task.py,684,"Not in worker or emulated by (apply/always_eager),",not
celery/celery/app/task.py,685,so just raise the original exception.,not
celery/celery/app/task.py,687,"raises orig stack if PyErr_Occurred,",not
celery/celery/app/task.py,688,and augments with exc' if that argument is defined.,not
celery/celery/app/task.py,703,On Py3: will augment any current exception with,not
celery/celery/app/task.py,704,the exc' argument provided (raise exc from orig),not
celery/celery/app/task.py,715,"if task was executed eagerly using apply(),",not
celery/celery/app/task.py,716,then the retry must also be executed eagerly.,not
celery/celery/app/task.py,745,"trace imports Task, so need to import inline.",not
celery/celery/app/task.py,756,"Make sure we get the task instance, not class.",not
celery/celery/app/task.py,1021,"task was not called, but some may still expect a request",not
celery/celery/app/task.py,1022,"to be there, perhaps that should be deprecated.",not
celery/celery/app/task.py,1042,noqa,not
celery/celery/app/task.py,1050,noqa: E305 XXX compat alias,SATD
celery/celery/app/base.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/base.py,41,Load all builtin tasks,not
celery/celery/app/base.py,42,noqa,not
celery/celery/app/base.py,86,"Given an attribute name and a list of args, gets",not
celery/celery/app/base.py,87,the attribute from the current app and calls it.,not
celery/celery/app/base.py,92,"This is used with multiprocessing.register_after_fork,",not
celery/celery/app/base.py,93,so need to be at module level.,not
celery/celery/app/base.py,96,pylint: disable=broad-except,not
celery/celery/app/base.py,101,"`app.conf` will be of this type before being explicitly configured,",not
celery/celery/app/base.py,102,meaning the app can keep any configuration set directly,not
celery/celery/app/base.py,103,on `app.conf` before the `app.config_from_object` call.,not
celery/celery/app/base.py,104,,not
celery/celery/app/base.py,105,"accessing any key will finalize the configuration,",not
celery/celery/app/base.py,106,replacing `app.conf` with a concrete settings object.,not
celery/celery/app/base.py,128,XXX will not show finalized configuration,SATD
celery/celery/app/base.py,129,"setdefault will cause `key in d` to happen,",not
celery/celery/app/base.py,130,"so for setdefault to be lazy, so does contains.",not
celery/celery/app/base.py,182,": This is deprecated, use :meth:`reduce_keys` instead",not
celery/celery/app/base.py,188,: Name of the `__main__` module.  Required for standalone scripts.,not
celery/celery/app/base.py,189,:,not
celery/celery/app/base.py,190,: If set this will be used instead of `__main__` when automatically,not
celery/celery/app/base.py,191,: generating task names.,not
celery/celery/app/base.py,194,: Custom options for command-line programs.,not
celery/celery/app/base.py,195,: See :ref:`extending-commandoptions`,not
celery/celery/app/base.py,198,: Custom bootsteps to extend and modify the worker.,not
celery/celery/app/base.py,199,: See :ref:`extending-bootsteps`.,not
celery/celery/app/base.py,218,: Signal sent when app is loading configuration.,not
celery/celery/app/base.py,221,: Signal sent after app has prepared the configuration.,not
celery/celery/app/base.py,224,: Signal sent after app has been finalized.,not
celery/celery/app/base.py,227,: Signal sent by every new process after fork.,not
celery/celery/app/base.py,264,If the class defines a custom __reduce_args__ we need to use,not
celery/celery/app/base.py,265,the old way of pickling apps: pickling a list of,not
celery/celery/app/base.py,266,args instead of the new way that pickles a dict of keywords.,not
celery/celery/app/base.py,269,these options are moved to the config to,not
celery/celery/app/base.py,270,simplify pickling of the app object.,not
celery/celery/app/base.py,285,- Apply fix-ups.,not
celery/celery/app/base.py,287,...store fixup instances in _fixups to keep weakrefs alive.,not
celery/celery/app/base.py,293,Signals,not
celery/celery/app/base.py,295,used to be a method pre 4.0,not
celery/celery/app/base.py,308,the --loader command-line argument sets the environment variable.,not
celery/celery/app/base.py,400,When using execv the task in the original module will point to a,not
celery/celery/app/base.py,401,"different app, so doing things like 'add.request' will point to",not
celery/celery/app/base.py,402,a different task instance.  This makes sure it will always use,not
celery/celery/app/base.py,403,the task instance from the current app.,not
celery/celery/app/base.py,404,Really need a better solution for this :(,SATD
celery/celery/app/base.py,420,return a proxy object that evaluates on first use,not
celery/celery/app/base.py,457,for some reason __qualname__ cannot be set in type(),not
celery/celery/app/base.py,458,so we have to set it here.,not
celery/celery/app/base.py,464,connects task to this app,not
celery/celery/app/base.py,492,"If Ignore signal occures task shouldn't be retried,",not
celery/celery/app/base.py,493,even if it suits autoretry_for list,not
celery/celery/app/base.py,705,packages argument can be lazy,not
celery/celery/app/base.py,736,XXX compat,SATD
celery/celery/app/base.py,739,pragma: no cover,not
celery/celery/app/base.py,780,We avoid using the constructor since a custom result class,not
celery/celery/app/base.py,781,"can be used, in which case the constructor may still use",not
celery/celery/app/base.py,782,the old signature.,not
celery/celery/app/base.py,896,XXX compat,SATD
celery/celery/app/base.py,911,XXX compat,SATD
celery/celery/app/base.py,964,used to be a method pre 4.0,not
celery/celery/app/base.py,974,"replace in place, as someone may have referenced app.conf,",not
celery/celery/app/base.py,975,"done some changes, accessed a key, and then try to make more",not
celery/celery/app/base.py,976,changes to the reference and not the finalized value.,not
celery/celery/app/base.py,981,load lazy config dict initializers.,not
celery/celery/app/base.py,986,load lazy periodic tasks,not
celery/celery/app/base.py,1094,"Reduce only pickles the configuration changes,",not
celery/celery/app/base.py,1095,so the default configuration doesn't have to be passed,not
celery/celery/app/base.py,1096,between processes.,not
celery/celery/app/base.py,1216,since 4.0: thread.get_ident() is not included when,not
celery/celery/app/base.py,1217,generating the process id.  This is due to how the RPC,not
celery/celery/app/base.py,1218,"backend now dedicates a single thread to receive results,",not
celery/celery/app/base.py,1219,which would not work if each thread has a separate id.,not
celery/celery/app/base.py,1240,noqa,not
celery/celery/app/base.py,1302,noqa: E305 XXX compat,SATD
celery/celery/app/log.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/log.py,52,: The logging subsystem is only configured once per process.,not
celery/celery/app/log.py,53,": setup_logging_subsystem sets this flag, and subsequent calls",not
celery/celery/app/log.py,54,: will do nothing.,not
celery/celery/app/log.py,113,Configure root logger,not
celery/celery/app/log.py,118,Configure the multiprocessing logger,not
celery/celery/app/log.py,131,then setup the root task logger.,not
celery/celery/app/log.py,141,"This is a hack for multiprocessing's fork+exec, so that",SATD
celery/celery/app/log.py,142,logging before Process.run works.,not
celery/celery/app/log.py,175,"this is an int for some reason, better to not question why.",SATD
celery/celery/app/log.py,203,Windows does not support ANSI color codes.,not
celery/celery/app/log.py,206,Only use color if there's no active log file,not
celery/celery/app/log.py,207,and stderr is an actual terminal.,not
celery/celery/app/log.py,252,noqa,not
celery/celery/app/trace.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/trace.py,35,## ---,not
celery/celery/app/trace.py,36,"This is the heart of the worker, the inner loop so to speak.",not
celery/celery/app/trace.py,37,"It used to be split up into nice little classes and methods,",SATD
celery/celery/app/trace.py,38,"but in the end it only resulted in bad performance and horrible tracebacks,",not
celery/celery/app/trace.py,39,so instead we now use one closure per task class.,not
celery/celery/app/trace.py,41,pylint: disable=redefined-outer-name,not
celery/celery/app/trace.py,42,"We cache globals and attribute lookups, so disable this warning.",not
celery/celery/app/trace.py,43,pylint: disable=broad-except,not
celery/celery/app/trace.py,44,We know what we're doing...,not
celery/celery/app/trace.py,54,: Format string used to log task success.,not
celery/celery/app/trace.py,59,: Format string used to log task failure.,not
celery/celery/app/trace.py,64,: Format string used to log task internal error.,not
celery/celery/app/trace.py,69,: Format string used to log task ignored.,not
celery/celery/app/trace.py,74,: Format string used to log task rejected.,not
celery/celery/app/trace.py,79,: Format string used to log task retry.,not
celery/celery/app/trace.py,113,: set by :func:`setup_worker_optimizations`,not
celery/celery/app/trace.py,149,request.shadow could be None or an empty string.,not
celery/celery/app/trace.py,150,"If so, we should use default.",not
celery/celery/app/trace.py,183,"the exception raised is the Retry semi-predicate,",not
celery/celery/app/trace.py,184,and it's exc' attribute is the original exception raised (if any).,not
celery/celery/app/trace.py,210,make sure we only send pickleable exceptions back to parent.,not
celery/celery/app/trace.py,261,"Cleared Tb, but einfo still has a reference to Traceback.",not
celery/celery/app/trace.py,262,exc cleans up the Traceback at the last moment that can be revealed.,not
celery/celery/app/trace.py,278,Ignore the exception raised if the frame is still executing.,not
celery/celery/app/trace.py,312,noqa: C901,not
celery/celery/app/trace.py,313,pylint: disable=too-many-statements,not
celery/celery/app/trace.py,315,If the task doesn't define a custom __call__ method,not
celery/celery/app/trace.py,316,"we optimize it away by simply calling the run method directly,",not
celery/celery/app/trace.py,317,saving the extra method call and a line less in the stack trace.,not
celery/celery/app/trace.py,358,maybe_ does not clone if already,not
celery/celery/app/trace.py,370,R      - is the possibly prepared return value.,not
celery/celery/app/trace.py,371,I      - is the Info object.,not
celery/celery/app/trace.py,372,T      - runtime,not
celery/celery/app/trace.py,373,Rstr   - textual representation of return value,not
celery/celery/app/trace.py,374,retval - is the always unmodified return value.,not
celery/celery/app/trace.py,375,state  - is the resulting task state.,not
celery/celery/app/trace.py,377,This function is very long because we've unrolled all the calls,not
celery/celery/app/trace.py,378,"for performance reasons, and because the function is so long",not
celery/celery/app/trace.py,379,"we want the main variables (I, and R) to stand out visually from the",not
celery/celery/app/trace.py,380,"the rest of the variables, so breaking PEP8 is worth it ;)",not
celery/celery/app/trace.py,398,-*- PRE -*-,not
celery/celery/app/trace.py,409,-*- TRACE -*-,not
celery/celery/app/trace.py,434,callback tasks must be applied before the result is,not
celery/celery/app/trace.py,435,"stored, so that result.children is populated.",not
celery/celery/app/trace.py,437,groups are called inline and will store trail,not
celery/celery/app/trace.py,438,"separately, so need to call them separately",not
celery/celery/app/trace.py,439,so that the trail's not added multiple times :(,not
celery/celery/app/trace.py,440,(Issue #1936),not
celery/celery/app/trace.py,469,execute first task in chain,not
celery/celery/app/trace.py,498,-* POST *-,not
celery/celery/app/trace.py,568,noqa: E305,not
celery/celery/app/trace.py,612,make sure custom Task.__call__ methods that calls super,not
celery/celery/app/trace.py,613,won't mess up the request/task stack.,not
celery/celery/app/trace.py,616,"all new threads start without a current app, so if an app is not",not
celery/celery/app/trace.py,617,"passed on to the thread it will fall back to the ""default app"",",not
celery/celery/app/trace.py,618,which then could be the wrong app.  So for the worker,not
celery/celery/app/trace.py,619,"we set this to always return our app.  This is a hack,",not
celery/celery/app/trace.py,620,and means that only a single app can be used for workers,not
celery/celery/app/trace.py,621,running in the same process.,not
celery/celery/app/trace.py,625,evaluate all task classes by finalizing the app.,not
celery/celery/app/trace.py,628,set fast shortcut to task registry,not
celery/celery/app/trace.py,658,Patches BaseTask.__call__ in the worker to handle the edge case,not
celery/celery/app/trace.py,659,where people override it and also call super.,not
celery/celery/app/trace.py,660,,not
celery/celery/app/trace.py,661,- The worker optimizes away BaseTask.__call__ and instead,not
celery/celery/app/trace.py,662,calls task.run directly.,not
celery/celery/app/trace.py,663,- so with the addition of current_task and the request stack,not
celery/celery/app/trace.py,664,BaseTask.__call__ now pushes to those stacks so that,not
celery/celery/app/trace.py,665,they work when tasks are called directly.,not
celery/celery/app/trace.py,666,,not
celery/celery/app/trace.py,667,The worker only optimizes away __call__ in the case,not
celery/celery/app/trace.py,668,"where it hasn't been overridden, so the request/task stack",not
celery/celery/app/trace.py,669,will blow if a custom task class defines __call__ and also,not
celery/celery/app/trace.py,670,calls super().,not
celery/celery/app/control.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/control.py,63,pylint: disable=broad-except,not
celery/celery/app/control.py,116,safe is ignored since 4.0,not
celery/celery/app/control.py,117,as no objects will need serialization now that we,not
celery/celery/app/control.py,118,have argsrepr/kwargsrepr.,not
celery/celery/app/control.py,144,"signature used be unary: query_task(ids=[id1, id2])",not
celery/celery/app/control.py,145,we need this to preserve backward compatibility.,not
celery/celery/app/control.py,470,tests pass easier without requiring pattern/matcher to,not
celery/celery/app/control.py,471,always be sent in,not
celery/celery/app/utils.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/utils.py,27,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/app/utils.py,36,: Format used to generate bug-report information.,not
celery/celery/app/utils.py,136,this way we also support django's time zone.,not
celery/celery/app/utils.py,141,"the last stash is the default settings, so just skip that",not
celery/celery/app/utils.py,179,See PendingConfiguration in celery/app/base.py,not
celery/celery/app/utils.py,180,first access will read actual configuration.,not
celery/celery/app/utils.py,240,have new setting names,not
celery/celery/app/utils.py,243,Majority of the settings are old.,not
celery/celery/app/utils.py,246,"have old setting names, or a majority of the names are old.",not
celery/celery/app/utils.py,250,Majority of the settings are new,not
celery/celery/app/utils.py,253,"no settings, just use new format.",not
celery/celery/app/utils.py,257,always use new format if prefix is used.,not
celery/celery/app/utils.py,260,only raise error for keys that the user didn't provide two keys,not
celery/celery/app/utils.py,261,"for (e.g., both ``result_expires`` and ``CELERY_TASK_RESULT_EXPIRES``).",not
celery/celery/app/utils.py,264,"user is mixing old/new, or new/old settings, give renaming",not
celery/celery/app/utils.py,265,suggestions.,not
celery/celery/app/utils.py,348,pylint: disable=broad-except,not
celery/celery/app/utils.py,375,"last part was not an attribute, but a module",not
celery/celery/app/routes.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/routes.py,23,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/app/routes.py,29,pragma: no cover,not
celery/celery/app/routes.py,30,for support Python 3.7,not
celery/celery/app/routes.py,83,expands 'queue',not
celery/celery/app/routes.py,86,expands 'queue' in route.,not
celery/celery/app/routes.py,94,Route can be a queue name: convenient for direct exchanges.,not
celery/celery/app/routes.py,98,"can use defaults from configured queue, but override specific",not
celery/celery/app/routes.py,99,things (like the routing_key): great for topic exchanges.,not
celery/celery/app/routes.py,124,pre 4.0 router class,not
celery/celery/app/routes.py,132,need to instantiate pre 4.0 router classes,not
celery/celery/app/registry.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/registry.py,50,-- these methods are irrelevant now and will be removed in 4.0,not
celery/celery/app/builtins.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/builtins.py,59,"check if the task group is ready, and if so apply the callback.",not
celery/celery/app/builtins.py,85,pylint: disable=broad-except,not
celery/celery/app/builtins.py,96,pylint: disable=broad-except,not
celery/celery/app/builtins.py,147,any partial args are added to all tasks in the group,not
celery/celery/app/builtins.py,180,- convert back to group if serialized,not
celery/celery/app/events.py,38,pylint: disable=too-many-function-args,not
celery/celery/app/events.py,39,This is a property pylint...,not
celery/celery/app/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/app/__init__.py,19,: Proxy always returning the app set as default.,not
celery/celery/app/__init__.py,56,"Set as shared task so that unfinalized apps,",not
celery/celery/app/__init__.py,57,and future apps will register a copy of this task.,not
celery/celery/app/__init__.py,62,Force all finalized apps to take this task as well.,not
celery/celery/app/__init__.py,68,Return a proxy that always gets the task from the current,not
celery/celery/app/__init__.py,69,apps task registry.,not
celery/celery/backends/amqp.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/amqp.py,29,"Historically the dashes in UUIDS are removed from AMQ entity names,",not
celery/celery/backends/amqp.py,30,but there's no known reason to.  Hopefully we'll be able to fix,not
celery/celery/backends/amqp.py,31,this in v4.0.,not
celery/celery/backends/amqp.py,162,Polling and using basic_get,not
celery/celery/backends/amqp.py,168,spool ffwd,not
celery/celery/backends/amqp.py,172,no more messages,not
celery/celery/backends/amqp.py,177,"backends are not expected to keep history,",not
celery/celery/backends/amqp.py,178,so we delete everything except the most recent state.,not
celery/celery/backends/amqp.py,190,"no new state, use previous",not
celery/celery/backends/amqp.py,194,result probably pending.,not
celery/celery/backends/amqp.py,196,XXX compat,SATD
celery/celery/backends/amqp.py,211,Total time spent may exceed a single call to wait(),not
celery/celery/backends/amqp.py,220,got event on the wanted channel.,not
celery/celery/backends/rpc.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/rpc.py,99,: Exception raised when there are too many messages for a task id.,not
celery/celery/backends/rpc.py,146,clear state for child processes.,not
celery/celery/backends/rpc.py,151,uses direct to queue routing (anon exchange).,not
celery/celery/backends/rpc.py,156,"RPC backend caches the binding, as one queue is used for all tasks.",not
celery/celery/backends/rpc.py,163,Called every time a task is sent when using this backend.,not
celery/celery/backends/rpc.py,164,We declare the queue we receive replies on in advance of sending,not
celery/celery/backends/rpc.py,165,"the message, but we skip this if running in the prefork pool",not
celery/celery/backends/rpc.py,166,"(task_join_will_block), as we know the queue is already declared.",not
celery/celery/backends/rpc.py,176,"Backends didn't always receive the `request`, so we must still",not
celery/celery/backends/rpc.py,177,support old code that relies on current_task.,not
celery/celery/backends/rpc.py,186,Return value here is used as the `declare=` argument,not
celery/celery/backends/rpc.py,187,for Producer.publish.,not
celery/celery/backends/rpc.py,188,By default we don't have to declare anything when sending a result.,not
celery/celery/backends/rpc.py,192,"This usually cancels the queue after the result is received,",not
celery/celery/backends/rpc.py,193,but we don't have to cancel since we have one queue per process.,not
celery/celery/backends/rpc.py,228,"Callback called when a reply for a task is received,",not
celery/celery/backends/rpc.py,229,but we have no idea what do do with it.,not
celery/celery/backends/rpc.py,230,"Since the result is not pending, we put it in a separate",not
celery/celery/backends/rpc.py,231,buffer: probably it will become pending later.,not
celery/celery/backends/rpc.py,241,Polling and using basic_get,not
celery/celery/backends/rpc.py,248,"backends aren't expected to keep history,",not
celery/celery/backends/rpc.py,249,so we delete everything except the most recent state.,not
celery/celery/backends/rpc.py,261,"no new state, use previous",not
celery/celery/backends/rpc.py,265,result probably pending.,not
celery/celery/backends/rpc.py,267,XXX compat,SATD
celery/celery/backends/rpc.py,290,try property first so we don't have to deserialize,not
celery/celery/backends/rpc.py,291,the payload.,not
celery/celery/backends/rpc.py,294,"message sent by old Celery version, need to deserialize.",not
celery/celery/backends/rpc.py,345,cached here is the app OID: name of queue we receive results on.,not
celery/celery/backends/cosmosdbsql.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/cosmosdbsql.py,22,pragma: no cover,not
celery/celery/backends/cosmosdbsql.py,24,noqa,not
celery/celery/backends/asynchronous.py,51,Total time spent may exceed a single call to wait(),not
celery/celery/backends/asynchronous.py,60,got event on the wanted channel.,not
celery/celery/backends/asynchronous.py,140,we tell the result consumer to put consumed results,not
celery/celery/backends/asynchronous.py,141,into these buckets.,not
celery/celery/backends/asynchronous.py,298,send to buffer in case we received this result,not
celery/celery/backends/asynchronous.py,299,before it was added to _pending_results.,not
celery/celery/backends/asynchronous.py,305,"remove bucket for this result, since it's fulfilled",not
celery/celery/backends/asynchronous.py,310,send to waiter via bucket,not
celery/celery/backends/cache.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/cache.py,36,noqa,not
celery/celery/backends/cache.py,39,pragma: no cover,not
celery/celery/backends/cache.py,46,pylint: disable=unpacking-non-sequence,not
celery/celery/backends/cache.py,47,"This is most definitely a sequence, but pylint thinks it's not.",not
celery/celery/backends/cache.py,52,noqa,not
celery/celery/backends/cache.py,119,rencode the keyprefixes,not
celery/celery/backends/base.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/base.py,86,: Time to sleep between polling each individual item,not
celery/celery/backends/base.py,87,: in `ResultSet.iterate`. as opposed to the `interval`,not
celery/celery/backends/base.py,88,: argument which is for each pass.,not
celery/celery/backends/base.py,91,: If true the backend must implement :meth:`get_many`.,not
celery/celery/backends/base.py,94,: If true the backend must automatically expire results.,not
celery/celery/backends/base.py,95,: The daily backend_cleanup periodic task won't be triggered,not
celery/celery/backends/base.py,96,: in this case.,not
celery/celery/backends/base.py,99,: Set to true if the backend is persistent by default.,not
celery/celery/backends/base.py,123,"precedence: accept, conf.result_accept_content, conf.accept_content",not
celery/celery/backends/base.py,125,noqa: E501,not
celery/celery/backends/base.py,134,"when using maybe_sanitize_url(), ""/"" is added",not
celery/celery/backends/base.py,135,we're stripping it for consistency,not
celery/celery/backends/base.py,172,Ensure all signatures have an application,not
celery/celery/backends/base.py,176,Celery tasks type created with the @task decorator have,not
celery/celery/backends/base.py,177,"the __header__ property, but Celery task created from",not
celery/celery/backends/base.py,178,Task class do not have this property.,not
celery/celery/backends/base.py,179,That's why we have to check if this property exists,SATD
celery/celery/backends/base.py,180,before checking is it partial function.,not
celery/celery/backends/base.py,183,workaround to support tasks with bind=True executed as,SATD
celery/celery/backends/base.py,184,link errors. Otherwise retries can't be used,not
celery/celery/backends/base.py,192,Task may not be present in this worker.,not
celery/celery/backends/base.py,193,We simply send it forward for another worker to consume.,not
celery/celery/backends/base.py,194,"If the task is not registered there, the worker will raise",not
celery/celery/backends/base.py,195,NotRegistered.,not
celery/celery/backends/base.py,199,Previously errback was called as a task so we still,not
celery/celery/backends/base.py,200,need to do so if the errback only takes a single task_id arg.,not
celery/celery/backends/base.py,233,need below import for test for some crazy reason,not
celery/celery/backends/base.py,234,pylint: disable,not
celery/celery/backends/base.py,246,pylint: disable=broad-except,not
celery/celery/backends/base.py,265,Ignore the exception raised if the frame is still executing.,not
celery/celery/backends/base.py,296,Load module and find exception class in that,not
celery/celery/backends/base.py,298,The type can contain qualified name with parent classes,not
celery/celery/backends/base.py,310,noqa,not
celery/celery/backends/base.py,404,args and kwargs need to be encoded properly before saving,not
celery/celery/backends/base.py,434,XXX compat,SATD
celery/celery/backends/base.py,612,avoid hammering the CPU checking status.,not
celery/celery/backends/base.py,633,noqa: E305 XXX compat,SATD
celery/celery/backends/base.py,644,pragma: no cover,not
celery/celery/backends/base.py,645,remove binding,not
celery/celery/backends/base.py,712,client returns dict so mapping preserved.,not
celery/celery/backends/base.py,718,client returns list so need to recreate mapping.,not
celery/celery/backends/base.py,757,don't busy loop.,not
celery/celery/backends/base.py,792,"previously this was always pickled, but later this",not
celery/celery/backends/base.py,793,"was extended to support other serializers, so the",not
celery/celery/backends/base.py,794,structure is kind of weird.,SATD
celery/celery/backends/base.py,815,pylint: disable=broad-except,not
celery/celery/backends/base.py,834,pragma: no cover,not
celery/celery/backends/base.py,843,pylint: disable=broad-except,not
celery/celery/backends/base.py,857,pylint: disable=broad-except,not
celery/celery/backends/base.py,877,need this attribute to reset cache in tests.,not
celery/celery/backends/arangodb.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/arangodb.py,4,"pylint: disable=W1202,W0703",not
celery/celery/backends/arangodb.py,22,noqa,not
celery/celery/backends/arangodb.py,51,protocol is not supported in backend url (http is taken as default),not
celery/celery/backends/arangodb.py,54,Use str as arangodb key not bytes,not
celery/celery/backends/azureblockblob.py,17,pragma: no cover,not
celery/celery/backends/azureblockblob.py,19,noqa,not
celery/celery/backends/cassandra.py,1,-* coding: utf-8 -*-,not
celery/celery/backends/cassandra.py,13,pragma: no cover,not
celery/celery/backends/cassandra.py,17,pragma: no cover,not
celery/celery/backends/cassandra.py,18,noqa,not
celery/celery/backends/cassandra.py,68,noqa,not
celery/celery/backends/cassandra.py,80,: List of Cassandra servers with format: ``hostname``.,not
celery/celery/backends/cassandra.py,83,autoexpire supported via entry_ttl,not
celery/celery/backends/cassandra.py,134,also shuts down _session,not
celery/celery/backends/cassandra.py,153,"We're forced to do concatenation below, as formatting would",not
celery/celery/backends/cassandra.py,154,blow up on superficial %s that'll be processed by Cassandra,not
celery/celery/backends/cassandra.py,167,"Only possible writers ""workers"" are allowed to issue",not
celery/celery/backends/cassandra.py,168,CREATE TABLE.  This is to prevent conflicting situations,not
celery/celery/backends/cassandra.py,169,where both task-creator and task-executor would issue it,not
celery/celery/backends/cassandra.py,170,at the same time.,not
celery/celery/backends/cassandra.py,172,"Anyway; if you're doing anything critical, you should",not
celery/celery/backends/cassandra.py,173,"have created this table in advance, in which case",not
celery/celery/backends/cassandra.py,174,this query will be a no-op (AlreadyExists),not
celery/celery/backends/cassandra.py,186,a heavily loaded or gone Cassandra cluster failed to respond.,not
celery/celery/backends/cassandra.py,187,leave this class in a consistent state,not
celery/celery/backends/cassandra.py,189,also shuts down _session,not
celery/celery/backends/cassandra.py,193,we did fail after all - reraise,not
celery/celery/backends/consul.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/s3.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/filesystem.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/filesystem.py,14,Python 2 does not have FileNotFoundError and IsADirectoryError,not
celery/celery/backends/filesystem.py,51,We need the path and separator as bytes objects,not
celery/celery/backends/filesystem.py,58,Lets verify that we've everything setup right,not
celery/celery/backends/mongodb.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/mongodb.py,19,pragma: no cover,not
celery/celery/backends/mongodb.py,20,noqa,not
celery/celery/backends/mongodb.py,25,pragma: no cover,not
celery/celery/backends/mongodb.py,26,noqa,not
celery/celery/backends/mongodb.py,27,noqa,not
celery/celery/backends/mongodb.py,28,pragma: no cover,not
celery/celery/backends/mongodb.py,29,noqa,not
celery/celery/backends/mongodb.py,31,noqa,not
celery/celery/backends/mongodb.py,72,Set option defaults,not
celery/celery/backends/mongodb.py,76,"update conf with mongo uri data, only if uri was given",not
celery/celery/backends/mongodb.py,81,build the hosts list to create a mongo connection,not
celery/celery/backends/mongodb.py,89,"if no database is provided in the uri, use default",not
celery/celery/backends/mongodb.py,94,update conf with specific settings,not
celery/celery/backends/mongodb.py,100,don't modify original,not
celery/celery/backends/mongodb.py,103,these should take over uri conf,not
celery/celery/backends/mongodb.py,136,pragma: no cover,not
celery/celery/backends/mongodb.py,147,The first pymongo.Connection() argument (host) can be,not
celery/celery/backends/mongodb.py,148,a list of ['host:port'] elements or a mongodb connection,not
celery/celery/backends/mongodb.py,149,"URI.  If this is the case, don't use self.port",not
celery/celery/backends/mongodb.py,150,but let pymongo get the port(s) from the URI instead.,not
celery/celery/backends/mongodb.py,151,This enables the use of replica sets and sharding.,not
celery/celery/backends/mongodb.py,152,See pymongo.Connection() for more info.,not
celery/celery/backends/mongodb.py,157,don't change self.options,not
celery/celery/backends/mongodb.py,171,mongodb handles serialization,not
celery/celery/backends/mongodb.py,175,serializer which are in a unsupported format (pickle/binary),not
celery/celery/backends/mongodb.py,192,Add the _id for mongodb,not
celery/celery/backends/mongodb.py,250,"By using safe=True, this will wait until it receives a response from",not
celery/celery/backends/mongodb.py,251,"the server.  Likewise, it will raise an OperationsError if the",not
celery/celery/backends/mongodb.py,252,response was unable to be completed.,not
celery/celery/backends/mongodb.py,295,"Ensure an index on date_done is there, if not process the index",not
celery/celery/backends/mongodb.py,296,in the background.  Once completed cleanup will be much faster,not
celery/celery/backends/mongodb.py,305,"Ensure an index on date_done is there, if not process the index",not
celery/celery/backends/mongodb.py,306,in the background.  Once completed cleanup will be much faster,not
celery/celery/backends/couchdb.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/couchdb.py,15,noqa,not
celery/celery/backends/couchdb.py,48,noqa,not
celery/celery/backends/couchdb.py,95,"document already exists, update it",not
celery/celery/backends/riak.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/riak.py,18,pragma: no cover,not
celery/celery/backends/riak.py,19,noqa,not
celery/celery/backends/riak.py,65,TODO: allow using other protocols than protobuf ?,SATD
celery/celery/backends/riak.py,66,": default protocol used to connect to Riak, might be `http` or `pbc`",not
celery/celery/backends/riak.py,69,: default Riak bucket name (`default`),not
celery/celery/backends/riak.py,72,: default Riak server hostname (`localhost`),not
celery/celery/backends/riak.py,75,: default Riak server port (8087),not
celery/celery/backends/riak.py,109,riak bucket must be ascii letters or numbers only,not
celery/celery/backends/redis.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/redis.py,30,Python 2,not
celery/celery/backends/redis.py,37,pragma: no cover,not
celery/celery/backends/redis.py,38,noqa,not
celery/celery/backends/redis.py,39,noqa,not
celery/celery/backends/redis.py,113,task state might have changed when the connection was down so we,not
celery/celery/backends/redis.py,114,retrieve meta for all subscribed tasks before going into pubsub mode,not
celery/celery/backends/redis.py,196,: :pypi:`redis` client module.,not
celery/celery/backends/redis.py,199,: Maximum number of connections in the pool.,not
celery/celery/backends/redis.py,239,absent in redis.connection.UnixDomainSocketConnection,not
celery/celery/backends/redis.py,243,"""redis_backend_use_ssl"" must be a dict with the keys:",not
celery/celery/backends/redis.py,244,"'ssl_cert_reqs', 'ssl_ca_certs', 'ssl_certfile', 'ssl_keyfile'",not
celery/celery/backends/redis.py,245,"(the same as ""broker_use_ssl"")",not
celery/celery/backends/redis.py,254,If we've received SSL parameters via query string or the,not
celery/celery/backends/redis.py,255,"redis_backend_use_ssl dict, check ssl_cert_reqs is valid. If set",not
celery/celery/backends/redis.py,256,via query string ssl_cert_reqs will be a string so convert it here,not
celery/celery/backends/redis.py,296,use 'path' as path to the socket… in this case,not
celery/celery/backends/redis.py,297,the database number should be given in 'query',not
celery/celery/backends/redis.py,302,host+port are invalid options when using this connection type.,not
celery/celery/backends/redis.py,313,"If connparams or query string contain ssl params, raise error",not
celery/celery/backends/redis.py,320,"The following parameters, if present in the URL, are encoded. We",not
celery/celery/backends/redis.py,321,must add the decoded values to connparams.,not
celery/celery/backends/redis.py,327,db may be string and start with / like in kombu.,not
celery/celery/backends/redis.py,338,Query parameters override other parameters,not
celery/celery/backends/redis.py,406,Overrides this to avoid calling GroupResult.save,not
celery/celery/backends/redis.py,407,pylint: disable=method-hidden,not
celery/celery/backends/redis.py,408,Note that KeyValueStoreBackend.__init__ sets self.apply_chord,not
celery/celery/backends/redis.py,409,if the implements_incr attr is set.  Redis backend doesn't set,not
celery/celery/backends/redis.py,410,this flag.,not
celery/celery/backends/redis.py,455,pylint: disable=broad-except,not
celery/celery/backends/redis.py,465,pylint: disable=broad-except,not
celery/celery/backends/redis.py,528,URL looks like sentinel://0.0.0.0:26347/3;sentinel://0.0.0.0:26348/3.,not
celery/celery/backends/redis.py,538,Adding db/password in connparams to connect to the correct instance,not
celery/celery/backends/dynamodb.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/dynamodb.py,19,pragma: no cover,not
celery/celery/backends/dynamodb.py,20,noqa,not
celery/celery/backends/dynamodb.py,25,Helper class that describes a DynamoDB attribute,not
celery/celery/backends/dynamodb.py,39,: default DynamoDB table name (`default`),not
celery/celery/backends/dynamodb.py,42,: Read Provisioned Throughput (`default`),not
celery/celery/backends/dynamodb.py,45,: Write Provisioned Throughput (`default`),not
celery/celery/backends/dynamodb.py,48,: AWS region (`default`),not
celery/celery/backends/dynamodb.py,51,: The endpoint URL that is passed to boto3 (local DynamoDB) (`default`),not
celery/celery/backends/dynamodb.py,54,: Item time-to-live in seconds (`default`),not
celery/celery/backends/dynamodb.py,57,DynamoDB supports Time to Live as an auto-expiry mechanism.,not
celery/celery/backends/dynamodb.py,99,"We are using the downloadable, local version of DynamoDB",not
celery/celery/backends/dynamodb.py,110,If endpoint_url is explicitly set use it instead,not
celery/celery/backends/dynamodb.py,214,"In case we created the table, wait until it becomes available.",not
celery/celery/backends/dynamodb.py,225,"If table exists, do not fail, just return the description.",not
celery/celery/backends/dynamodb.py,245,Required TTL methods.,not
celery/celery/backends/dynamodb.py,251,Find missing methods.,not
celery/celery/backends/dynamodb.py,283,Get the current TTL description.,not
celery/celery/backends/dynamodb.py,305,"Get the table TTL description, and return early when possible.",not
celery/celery/backends/dynamodb.py,313,"We want TTL enabled, and it is currently enabled or being",not
celery/celery/backends/dynamodb.py,314,"enabled, and on the correct attribute.",not
celery/celery/backends/dynamodb.py,328,"We want TTL disabled, and it is currently disabled or being",not
celery/celery/backends/dynamodb.py,329,disabled.,not
celery/celery/backends/dynamodb.py,341,The state shouldn't ever have any value beyond the four handled,SATD
celery/celery/backends/dynamodb.py,342,"above, but to ease troubleshooting of potential future changes, emit",not
celery/celery/backends/dynamodb.py,343,a log showing the unknown state.,not
celery/celery/backends/dynamodb.py,344,pragma: no cover,not
celery/celery/backends/dynamodb.py,353,"At this point, we have one of the following situations:",not
celery/celery/backends/dynamodb.py,354,,not
celery/celery/backends/dynamodb.py,355,"We want TTL enabled,",not
celery/celery/backends/dynamodb.py,356,,not
celery/celery/backends/dynamodb.py,357,- and it's currently disabled: Try to enable.,not
celery/celery/backends/dynamodb.py,358,,not
celery/celery/backends/dynamodb.py,359,"- and it's being disabled: Try to enable, but this is almost sure to",not
celery/celery/backends/dynamodb.py,360,raise ValidationException with message:,not
celery/celery/backends/dynamodb.py,361,,not
celery/celery/backends/dynamodb.py,362,Time to live has been modified multiple times within a fixed,not
celery/celery/backends/dynamodb.py,363,interval,not
celery/celery/backends/dynamodb.py,364,,not
celery/celery/backends/dynamodb.py,365,"- and it's currently enabling or being enabled, but on the wrong",not
celery/celery/backends/dynamodb.py,366,"attribute: Try to enable, but this will raise ValidationException",not
celery/celery/backends/dynamodb.py,367,with message:,not
celery/celery/backends/dynamodb.py,368,,not
celery/celery/backends/dynamodb.py,369,TimeToLive is active on a different AttributeName: current,not
celery/celery/backends/dynamodb.py,370,AttributeName is ttlx,not
celery/celery/backends/dynamodb.py,371,,not
celery/celery/backends/dynamodb.py,372,"We want TTL disabled,",not
celery/celery/backends/dynamodb.py,373,,not
celery/celery/backends/dynamodb.py,374,- and it's currently enabled: Try to disable.,not
celery/celery/backends/dynamodb.py,375,,not
celery/celery/backends/dynamodb.py,376,"- and it's being enabled: Try to disable, but this is almost sure to",not
celery/celery/backends/dynamodb.py,377,raise ValidationException with message:,not
celery/celery/backends/dynamodb.py,378,,not
celery/celery/backends/dynamodb.py,379,Time to live has been modified multiple times within a fixed,not
celery/celery/backends/dynamodb.py,380,interval,not
celery/celery/backends/dynamodb.py,381,,not
celery/celery/backends/elasticsearch.py,1,-* coding: utf-8 -*-,not
celery/celery/backends/elasticsearch.py,18,noqa,not
celery/celery/backends/elasticsearch.py,58,noqa,not
celery/celery/backends/elasticsearch.py,114,"document already exists, update it",not
celery/celery/backends/couchbase.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/couchbase.py,15,noqa,not
celery/celery/backends/couchbase.py,17,noqa,not
celery/celery/backends/couchbase.py,24,noqa,not
celery/celery/backends/couchbase.py,47,Use str as couchbase key not bytes,not
celery/celery/backends/database/session.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/database/models.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/database/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/backends/database/__init__.py,22,pragma: no cover,not
celery/celery/backends/database/__init__.py,66,"ResultSet.iterate should sleep this much between each pool,",SATD
celery/celery/backends/database/__init__.py,67,to not bombard the database with queries.,not
celery/celery/backends/database/__init__.py,74,The `url` argument was added later and is used by,not
celery/celery/backends/database/__init__.py,75,the app to set backend by url (celery.app.backends.by_url),not
celery/celery/backends/database/__init__.py,139,Exclude the primary key id and task_id columns,not
celery/celery/backends/database/__init__.py,140,as we should not set it None,not
celery/celery/backends/database/__init__.py,144,Iterate through the columns name of the table,not
celery/celery/backends/database/__init__.py,145,to set the value from meta.,not
celery/celery/backends/database/__init__.py,146,"If the value is not present in meta, set None",not
celery/celery/utils/abstract.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/abstract.py,12,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/utils/abstract.py,36,we override `register` to return other for use as a decorator.,not
celery/celery/utils/abstract.py,41,pragma: no cover,not
celery/celery/utils/abstract.py,65,pragma: no cover,not
celery/celery/utils/imports.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/imports.py,15,: Billiard sets this when execv is enabled.,not
celery/celery/utils/imports.py,16,: We use it to find out the name of the original ``__main__``,not
celery/celery/utils/imports.py,17,": module, so that we can properly rewrite the name of the",not
celery/celery/utils/imports.py,18,: task to be that of ``App.main``.,not
celery/celery/utils/imports.py,32,pragma: no cover,not
celery/celery/utils/imports.py,42,noqa,not
celery/celery/utils/imports.py,71,pragma: no cover,not
celery/celery/utils/imports.py,83,Raise a more specific error if the problem is that one of the,not
celery/celery/utils/imports.py,84,dot-separated segments of the module name is not a package.,not
celery/celery/utils/imports.py,92,Break out and re-raise the original ImportError,not
celery/celery/utils/imports.py,93,instead.,not
celery/celery/utils/imports.py,134,Fix for manage.py shell_plus (Issue #366),not
celery/celery/utils/imports.py,139,- If the task module is used as the __main__ script,not
celery/celery/utils/imports.py,140,- we need to rewrite the module part of the task name,not
celery/celery/utils/imports.py,141,- to match App.main.,not
celery/celery/utils/imports.py,143,- see comment about :envvar:`MP_MAIN_FILE` above.,not
celery/celery/utils/imports.py,153,pragma: no cover,not
celery/celery/utils/term.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/term.py,28,tmux requires unrecognized OSC sequences to be wrapped with DCS tmux;,not
celery/celery/utils/term.py,29,"<sequence> ST, and for all ESCs in <sequence> to be replaced with ESC ESC.",not
celery/celery/utils/term.py,30,It only accepts ESC backslash for ST.,not
celery/celery/utils/iso8601.py,44,Adapted from http://delete.me.uk/2005/03/iso8601.html,not
celery/celery/utils/encoding.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/encoding.py,5,noqa,not
celery/celery/utils/saferepr.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/saferepr.py,28,: Node representing literal text.,not
celery/celery/utils/saferepr.py,29,:   - .value: is the literal text value,not
celery/celery/utils/saferepr.py,30,":   - .truncate: specifies if this text can be truncated, for things like",not
celery/celery/utils/saferepr.py,31,":                LIT_DICT_END this will be False, as we always display",not
celery/celery/utils/saferepr.py,32,":                the ending brackets, e.g:  [[[1, 2, 3, ...,], ..., ]]",not
celery/celery/utils/saferepr.py,33,":   - .direction: If +1 the current level is increment by one,",not
celery/celery/utils/saferepr.py,34,":                 if -1 the current level is decremented by one, and",not
celery/celery/utils/saferepr.py,35,:                 if 0 the current level is unchanged.,not
celery/celery/utils/saferepr.py,38,: Node representing a dictionary key.,not
celery/celery/utils/saferepr.py,41,": Node representing quoted text, e.g. a string value.",not
celery/celery/utils/saferepr.py,45,: Recursion protection.,not
celery/celery/utils/saferepr.py,48,: Types that are repsented as chars.,not
celery/celery/utils/saferepr.py,51,: Types that are regarded as safe to call repr on.,not
celery/celery/utils/saferepr.py,54,: Set types.,not
celery/celery/utils/saferepr.py,71,"type: (Any, int, int, Set) -> str",not
celery/celery/utils/saferepr.py,87,"type: (Dict, _literal, _literal) -> Iterator[Any]",not
celery/celery/utils/saferepr.py,98,type: (List) -> Iterator[Any],not
celery/celery/utils/saferepr.py,107,type: (Set) -> str,not
celery/celery/utils/saferepr.py,112,type: (AnyStr) -> str,not
celery/celery/utils/saferepr.py,117,"is bytes with unrepresentable characters, attempt",not
celery/celery/utils/saferepr.py,118,to convert back to unicode,not
celery/celery/utils/saferepr.py,124,"type: (bytes, int, str) -> str",not
celery/celery/utils/saferepr.py,126,"we don't want to copy all the data, just take what we need.",not
celery/celery/utils/saferepr.py,138,type: (bytes) -> str,not
celery/celery/utils/saferepr.py,142,"possibly not unicode, but binary data so format as hex.",not
celery/celery/utils/saferepr.py,145,pragma: no cover,not
celery/celery/utils/saferepr.py,146,Python 3.4,not
celery/celery/utils/saferepr.py,149,Python 3.5+,not
celery/celery/utils/saferepr.py,154,"type: (AnyStr, int) -> str",not
celery/celery/utils/saferepr.py,155,pragma: no cover,not
celery/celery/utils/saferepr.py,162,type: (Any) -> str,not
celery/celery/utils/saferepr.py,171,"type: (Any, int, int, Set) -> str",not
celery/celery/utils/saferepr.py,176,"move rest back to stack, so that we can include",SATD
celery/celery/utils/saferepr.py,177,dangling parens.,not
celery/celery/utils/saferepr.py,192,"maxlen exceeded, process any dangling parens.",not
celery/celery/utils/saferepr.py,199,"type: (Sequence, _literal, _literal, Any, Any) -> Tuple[Any, ...]",not
celery/celery/utils/saferepr.py,200,noqa,not
celery/celery/utils/saferepr.py,211,"type: (deque, Set, int, int, Callable) -> Iterator[Any]",not
celery/celery/utils/saferepr.py,238,pragma: no cover,not
celery/celery/utils/saferepr.py,260,other type of object,not
celery/celery/utils/saferepr.py,274,Recurse into the new list/tuple/dict/etc by tacking,not
celery/celery/utils/saferepr.py,275,the rest of our iterable onto the new it: this way,not
celery/celery/utils/saferepr.py,276,it works similar to a linked list.,not
celery/celery/utils/serialization.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/serialization.py,24,noqa,not
celery/celery/utils/serialization.py,36,: List of base classes we probably don't want to reduce to.,not
celery/celery/utils/serialization.py,39,pragma: no cover,not
celery/celery/utils/serialization.py,40,py3k,not
celery/celery/utils/serialization.py,48,noqa,not
celery/celery/utils/serialization.py,78,pylint: disable=broad-except,not
celery/celery/utils/serialization.py,110,pylint: disable=broad-except,not
celery/celery/utils/serialization.py,137,: The module of the original exception.,not
celery/celery/utils/serialization.py,140,: The name of the original exception class.,not
celery/celery/utils/serialization.py,143,: The arguments for the original exception.,not
celery/celery/utils/serialization.py,173,pylint: disable=broad-except,not
celery/celery/utils/serialization.py,187,pylint: disable=broad-except,not
celery/celery/utils/serialization.py,224,"See ""Date Time String Format"" in the ECMA-262 specification.",not
celery/celery/utils/serialization.py,275,"Since PyPy 3 targets Python 3.2, 'raise exc from None' will",not
celery/celery/utils/serialization.py,276,raise a TypeError so we need to look for Python 3.3 or newer,not
celery/celery/utils/serialization.py,277,pragma: no cover,not
celery/celery/utils/serialization.py,279,for flake8,not
celery/celery/utils/log.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/log.py,36,Sets up our logging hierarchy.,not
celery/celery/utils/log.py,37,,not
celery/celery/utils/log.py,38,"Every logger in the celery package inherits from the ""celery""",not
celery/celery/utils/log.py,39,"logger, and every task logger inherits from the ""celery.task""",not
celery/celery/utils/log.py,40,logger.,not
celery/celery/utils/log.py,58,pragma: no cover,not
celery/celery/utils/log.py,63,PlaceHolder does not have handlers,not
celery/celery/utils/log.py,91,pragma: no cover,not
celery/celery/utils/log.py,131,: Loglevel -> Color mapping.,not
celery/celery/utils/log.py,156,reset exception info later for other handlers...,not
celery/celery/utils/log.py,161,safe_str will repr the color object,not
celery/celery/utils/log.py,162,and color will break on non-string objects,not
celery/celery/utils/log.py,163,so need to reorder calls based on type.,not
celery/celery/utils/log.py,164,Issue #427,not
celery/celery/utils/log.py,169,pragma: no cover,not
celery/celery/utils/log.py,170,skip colors,not
celery/celery/utils/log.py,171,pylint: disable=broad-except,not
celery/celery/utils/log.py,200,pylint: disable=redefined-outer-name,not
celery/celery/utils/log.py,201,"Note that the logger global is redefined here, be careful changing.",not
celery/celery/utils/log.py,207,Make the logger handlers dump internal errors to,not
celery/celery/utils/log.py,208,:data:`sys.__stderr__` instead of :data:`sys.stderr` to circumvent,not
celery/celery/utils/log.py,209,infinite loops.,not
celery/celery/utils/log.py,211,pragma: no cover,not
celery/celery/utils/log.py,219,see python issue 5971,not
celery/celery/utils/log.py,229,"Logger is logging back to this file, so stop recursing.",not
celery/celery/utils/log.py,240,type: (Sequence[str]) -> None,not
celery/celery/utils/log.py,250,This object is not buffered so any :meth:`flush`,not
celery/celery/utils/log.py,251,requests are ignored.,not
celery/celery/utils/log.py,255,"when the object is closed, no write requests are",not
celery/celery/utils/log.py,256,forwarded to the logging object anymore.,not
celery/celery/utils/log.py,268,pragma: no cover,not
celery/celery/utils/log.py,278,pragma: no cover,not
celery/celery/utils/log.py,281,pragma: no cover,not
celery/celery/utils/log.py,288,pragma: no cover,not
celery/celery/utils/graph.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/time.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/time.py,67,This code is moved in __init__ to execute it as late as possible,not
celery/celery/utils/time.py,68,See get_default_timezone().,not
celery/celery/utils/time.py,91,pragma: no cover,not
celery/celery/utils/time.py,94,The base tzinfo class no longer implements a DST,not
celery/celery/utils/time.py,95,offset aware .fromutc() in Python 3 (Issue #2306).,not
celery/celery/utils/time.py,97,"I'd rather rely on pytz to do this, than port",not
celery/celery/utils/time.py,98,the C code from cpython's fromutc [asksol],not
celery/celery/utils/time.py,118,pylint: disable=redefined-outer-name,not
celery/celery/utils/time.py,128,pragma: no cover,not
celery/celery/utils/time.py,131,"tz=None is a special case since Python 3.3, and will",not
celery/celery/utils/time.py,132,convert to the current local timezone (Issue #2306).,not
celery/celery/utils/time.py,137,noqa,not
celery/celery/utils/time.py,211,DST started/ended,not
celery/celery/utils/time.py,217,pragma: no cover,not
celery/celery/utils/time.py,244,"Show original day name in exception, instead of abbr.",not
celery/celery/utils/time.py,292,works on pytz timezones,not
celery/celery/utils/time.py,302,Ensure timezone aware datetime,not
celery/celery/utils/time.py,305,Always safe to call astimezone on utc zones,not
celery/celery/utils/time.py,308,non-pytz tz,not
celery/celery/utils/time.py,342,pylint: disable=redefined-outer-name,not
celery/celery/utils/time.py,343,weekday is also a function in outer scope.,not
celery/celery/utils/time.py,399,Will be zero if factor equals 0,not
celery/celery/utils/time.py,401,Full jitter according to,not
celery/celery/utils/time.py,402,https://www.awsarchitectureblog.com/2015/03/backoff.html,not
celery/celery/utils/time.py,405,Adjust according to maximum wait time and account for negative values.,not
celery/celery/utils/sysinfo.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/sysinfo.py,18,pragma: no cover,not
celery/celery/utils/sysinfo.py,19,Windows doesn't have getloadavg,not
celery/celery/utils/sysinfo.py,20,noqa,not
celery/celery/utils/collections.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/collections.py,21,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/utils/collections.py,27,pypy: dicts are ordered in recent versions,not
celery/celery/utils/collections.py,35,noqa,not
celery/celery/utils/collections.py,37,noqa,not
celery/celery/utils/collections.py,52,type: (Any) -> Mapping,not
celery/celery/utils/collections.py,60,"type: (Mapping, Mapping) -> Mapping",not
celery/celery/utils/collections.py,73,pragma: no cover,not
celery/celery/utils/collections.py,75,type: () -> Any,not
celery/celery/utils/collections.py,76,"return value of od.keys does not support __next__,",not
celery/celery/utils/collections.py,77,but this version will also not create a copy of the list.,not
celery/celery/utils/collections.py,80,pragma: no cover,not
celery/celery/utils/collections.py,82,type: () -> Any,not
celery/celery/utils/collections.py,83,iterkeys is iterable.,not
celery/celery/utils/collections.py,87,type: () -> Any,not
celery/celery/utils/collections.py,91,pragma: no cover,not
celery/celery/utils/collections.py,94,"type: (Any, bool) -> None",not
celery/celery/utils/collections.py,96,"we don't use this argument, and the only way to",not
celery/celery/utils/collections.py,97,implement this on PyPy seems to be O(n): creating a,not
celery/celery/utils/collections.py,98,"copy with the order changed, so we just raise.",not
celery/celery/utils/collections.py,105,"type: (Any, bool) -> None",not
celery/celery/utils/collections.py,131,type: (str) -> Any,not
celery/celery/utils/collections.py,141,"type: (str, Any) -> None",not
celery/celery/utils/collections.py,160,type: (Any) -> None,not
celery/celery/utils/collections.py,164,type: (Any) -> Any,not
celery/celery/utils/collections.py,168,"type: (Any, Any) -> None",not
celery/celery/utils/collections.py,172,"type: (Any, Any) -> Any",not
celery/celery/utils/collections.py,179,"type: (Any, Any) -> None",not
celery/celery/utils/collections.py,184,type: (Any) -> Any,not
celery/celery/utils/collections.py,191,"type: (Any, Any) -> Any",not
celery/celery/utils/collections.py,195,type: (Any) -> bool,not
celery/celery/utils/collections.py,199,type: () -> Iterable,not
celery/celery/utils/collections.py,204,type: () -> Iterable,not
celery/celery/utils/collections.py,208,type: () -> Iterable,not
celery/celery/utils/collections.py,214,type: () -> Iterable,not
celery/celery/utils/collections.py,219,pragma: no cover,not
celery/celery/utils/collections.py,226,type: () -> List[Any],not
celery/celery/utils/collections.py,230,"type: () -> List[Tuple[Any, Any]]",not
celery/celery/utils/collections.py,234,type: () -> List[Any],not
celery/celery/utils/collections.py,238,noqa: E305,not
celery/celery/utils/collections.py,251,"type: (*Mapping, **Any) -> None",not
celery/celery/utils/collections.py,261,type: (Mapping) -> None,not
celery/celery/utils/collections.py,267,"type: (Any, *Any) -> Any",not
celery/celery/utils/collections.py,275,type: (Any) -> Any,not
celery/celery/utils/collections.py,279,type: (Any) -> Any,not
celery/celery/utils/collections.py,283,type: (Any) -> Any,not
celery/celery/utils/collections.py,293,"type: (Any, Any) -> None",not
celery/celery/utils/collections.py,297,type: (Any) -> None,not
celery/celery/utils/collections.py,304,type: () -> None,not
celery/celery/utils/collections.py,308,"type: (Any, Any) -> Any",not
celery/celery/utils/collections.py,315,type: () -> int,not
celery/celery/utils/collections.py,322,type: (Any) -> bool,not
celery/celery/utils/collections.py,327,type: () -> bool,not
celery/celery/utils/collections.py,329,Py2,not
celery/celery/utils/collections.py,332,"type: (Any, Any) -> None",not
celery/celery/utils/collections.py,338,"type: (*Any, **Any) -> Any",not
celery/celery/utils/collections.py,345,type: () -> str,not
celery/celery/utils/collections.py,351,"type: (type, Iterable, *Any) -> 'ChainMap'",not
celery/celery/utils/collections.py,356,type: () -> 'ChainMap',not
celery/celery/utils/collections.py,358,Py2,not
celery/celery/utils/collections.py,361,type: (Callable) -> Iterable,not
celery/celery/utils/collections.py,362,"defaults must be first in the stream, so values in",not
celery/celery/utils/collections.py,363,changes take precedence.,not
celery/celery/utils/collections.py,364,pylint: disable=bad-reversed-sequence,not
celery/celery/utils/collections.py,365,Someone should teach pylint about properties.,not
celery/celery/utils/collections.py,369,type: () -> Iterable,not
celery/celery/utils/collections.py,374,type: () -> Iterable,not
celery/celery/utils/collections.py,379,type: () -> Iterable,not
celery/celery/utils/collections.py,386,pragma: no cover,not
celery/celery/utils/collections.py,391,noqa,not
celery/celery/utils/collections.py,393,type: () -> List[Any],not
celery/celery/utils/collections.py,397,"type: () -> List[Tuple[Any, Any]]",not
celery/celery/utils/collections.py,401,type: () -> List[Any],not
celery/celery/utils/collections.py,421,"type: (Mapping, Mapping, List[str], str) -> None",not
celery/celery/utils/collections.py,430,type: (str) -> Sequence[str],not
celery/celery/utils/collections.py,438,type: (str) -> Any,not
celery/celery/utils/collections.py,448,support subclasses implementing __missing__,not
celery/celery/utils/collections.py,457,"type: (str, Any) -> Any",not
celery/celery/utils/collections.py,461,type: (*str) -> Any,not
celery/celery/utils/collections.py,465,"type: (str, Any) -> Any",not
celery/celery/utils/collections.py,472,type: () -> None,not
celery/celery/utils/collections.py,477,type: (str) -> bool,not
celery/celery/utils/collections.py,482,type: (ConfigurationView) -> None,not
celery/celery/utils/collections.py,552,"type: (int, float, Mapping, int) -> None",not
celery/celery/utils/collections.py,560,import items from data,not
celery/celery/utils/collections.py,570,type: () -> None,not
celery/celery/utils/collections.py,576,type: () -> None,not
celery/celery/utils/collections.py,581,type: () -> None,not
celery/celery/utils/collections.py,587,"type: (Any, float) -> None",not
celery/celery/utils/collections.py,599,type: (Iterable) -> None,not
celery/celery/utils/collections.py,608,revokes are sent as a dict,not
celery/celery/utils/collections.py,611,in case someone uses ._data directly for sending update,not
celery/celery/utils/collections.py,620,"XXX AVOID THIS, it could keep old data if more parties",SATD
celery/celery/utils/collections.py,621,exchange them all over and over again,not
celery/celery/utils/collections.py,626,type: (Any) -> None,not
celery/celery/utils/collections.py,627,"mark an existing item as removed.  If KeyError is not found, pass.",not
celery/celery/utils/collections.py,633,type: (float) -> None,not
celery/celery/utils/collections.py,645,time based expiring:,not
celery/celery/utils/collections.py,650,oldest item hasn't expired yet,not
celery/celery/utils/collections.py,654,type: (Any) -> Any,not
celery/celery/utils/collections.py,667,type: () -> Dict,not
celery/celery/utils/collections.py,683,type: (Any) -> bool,not
celery/celery/utils/collections.py,687,type: (Any) -> bool,not
celery/celery/utils/collections.py,691,type: () -> str,not
celery/celery/utils/collections.py,697,type: () -> Iterable,not
celery/celery/utils/collections.py,701,type: () -> int,not
celery/celery/utils/collections.py,705,type: (Any) -> bool,not
celery/celery/utils/collections.py,709,type: () -> Any,not
celery/celery/utils/collections.py,714,type: () -> bool,not
celery/celery/utils/collections.py,716,Py2,not
celery/celery/utils/collections.py,720,type: () -> float,not
celery/celery/utils/collections.py,725,noqa: E305,not
celery/celery/utils/collections.py,734,type: () -> None,not
celery/celery/utils/collections.py,739,type: (int) -> None,not
celery/celery/utils/collections.py,746,type: () -> None,not
celery/celery/utils/collections.py,762,"type: (int, Iterable, Any) -> None",not
celery/celery/utils/collections.py,771,type: (Any) -> None,not
celery/celery/utils/collections.py,776,type: (Iterable) -> None,not
celery/celery/utils/collections.py,781,type: (*Any) -> Any,not
celery/celery/utils/collections.py,790,type: () -> None,not
celery/celery/utils/collections.py,794,type: () -> str,not
celery/celery/utils/collections.py,800,type: () -> Iterable,not
celery/celery/utils/collections.py,808,type: () -> int,not
celery/celery/utils/collections.py,812,type: () -> bool,not
celery/celery/utils/collections.py,816,type: () -> Iterable,not
celery/celery/utils/collections.py,820,type: (Any) -> Any,not
celery/celery/utils/collections.py,825,type: () -> int,not
celery/celery/utils/collections.py,829,noqa: E305,not
celery/celery/utils/collections.py,844,"type: (int, Iterable, int) -> None",not
celery/celery/utils/collections.py,853,"type: (Any, Any) -> None",not
celery/celery/utils/collections.py,856,least recently used.,not
celery/celery/utils/collections.py,860,"type: (Any, Iterable) -> None",not
celery/celery/utils/collections.py,866,"type: (Any, *Any) -> Any",not
celery/celery/utils/collections.py,879,mark as LRU,not
celery/celery/utils/collections.py,888,type: (Any) -> Messagebuffer,not
celery/celery/utils/collections.py,896,type: () -> Messagebuffer,not
celery/celery/utils/collections.py,900,type: (*Any) -> Any,not
celery/celery/utils/collections.py,904,type: () -> None,not
celery/celery/utils/collections.py,911,"buffer empty, remove it from mapping.",not
celery/celery/utils/collections.py,914,we removed one item,not
celery/celery/utils/collections.py,916,"if buffer is empty now, remove it from mapping.",not
celery/celery/utils/collections.py,920,move to least recently used.,SATD
celery/celery/utils/collections.py,925,type: () -> str,not
celery/celery/utils/collections.py,932,type: () -> int,not
celery/celery/utils/deprecated.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/__init__.py,16,------------------------------------------------------------------------,not
celery/celery/utils/__init__.py,17,> XXX Compat,SATD
celery/celery/utils/objects.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/timer2.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/timer2.py,42,pragma: no cover,not
celery/celery/utils/timer2.py,71,for 2to3,not
celery/celery/utils/timer2.py,83,pragma: no cover,not
celery/celery/utils/timer2.py,88,pragma: no cover,not
celery/celery/utils/timer2.py,89,"we lost the race at interpreter shutdown,",not
celery/celery/utils/timer2.py,90,so gc collected built-in modules.,not
celery/celery/utils/debug.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/debug.py,18,noqa,not
celery/celery/utils/debug.py,78,pragma: no cover,not
celery/celery/utils/debug.py,88,pragma: no cover,not
celery/celery/utils/debug.py,150,pragma: no cover,not
celery/celery/utils/debug.py,169,pragma: no cover,not
celery/celery/utils/debug.py,180,get a map of threads by their ID so we can print their names,not
celery/celery/utils/debug.py,181,during the traceback dump,not
celery/celery/utils/debug.py,188,skip old junk (left-overs from a fork),not
celery/celery/utils/functional.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/functional.py,45,: Set to :const:`True` after the object has been evaluated.,not
celery/celery/utils/functional.py,180,must be subclass of list so that json can encode.,not
celery/celery/utils/functional.py,183,pylint: disable=super-init-not-called,not
celery/celery/utils/functional.py,184,"UserList creates a new list and sets .data, so we don't",not
celery/celery/utils/functional.py,185,want to call init here.,not
celery/celery/utils/functional.py,258,"we could use inspect.Signature here, but that implementation",not
celery/celery/utils/functional.py,259,is very slow since it implements the argument checking,not
celery/celery/utils/functional.py,260,in pure-Python.  Instead we use exec to create a new function,not
celery/celery/utils/functional.py,261,"with an empty body, meaning it has the same performance as",not
celery/celery/utils/functional.py,262,as just calling a function.,not
celery/celery/utils/functional.py,277,pragma: no cover,not
celery/celery/utils/functional.py,280,pylint: disable=exec-used,not
celery/celery/utils/functional.py,281,"Tasks are rarely, if ever, created at runtime - exec here is fine.",not
celery/celery/utils/functional.py,311,noqa,not
celery/celery/utils/functional.py,346,find the type of the largest sequence,not
celery/celery/utils/functional.py,348,convert the smallest list to the type of the largest sequence.,not
celery/celery/utils/text.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/text.py,15,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/utils/text.py,36,type: (str) -> List[str],not
celery/celery/utils/text.py,44,"type: (str, int) -> str",not
celery/celery/utils/text.py,50,"type: (str, int, str) -> str",not
celery/celery/utils/text.py,56,"type: (str, int, str) -> str",not
celery/celery/utils/text.py,62,"type: (str, str) -> str",not
celery/celery/utils/text.py,68,"type: (str, str, int) -> str",not
celery/celery/utils/text.py,77,"type: (str, int, str) -> str",not
celery/celery/utils/text.py,87,"type: (str, int) -> str",not
celery/celery/utils/text.py,99,"type: (str, int, str) -> str",not
celery/celery/utils/text.py,105,"type: (str, int, str) -> str",not
celery/celery/utils/text.py,113,"type: (int, str, str) -> str",not
celery/celery/utils/text.py,121,"type: (str, int, int, str, **Any) -> str",not
celery/celery/utils/text.py,134,"type: (str, str) -> str",not
celery/celery/utils/text.py,139,"type: (str, Mapping[str, str], Pattern, str) -> str",not
celery/celery/utils/text.py,159,"type: (str, str) -> str",not
celery/celery/utils/text.py,168,"This is used by e.g. repr(chain), to remove repeating module names.",not
celery/celery/utils/text.py,169,- extract the module part of the task name,not
celery/celery/utils/text.py,175,"type: (str, str) -> str",not
celery/celery/utils/text.py,191,find the first occurrence of substr in the string.,not
celery/celery/utils/text.py,195,leave the first occurrence of substr untouched.,not
celery/celery/utils/text.py,197,strip seen substr from the rest of the string.,not
celery/celery/utils/nodenames.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/nodenames.py,14,: Exchange for worker direct queues.,not
celery/celery/utils/nodenames.py,17,: Format for worker direct queue names.,not
celery/celery/utils/nodenames.py,20,: Separator for worker node name and hostname.,not
celery/celery/utils/threads.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/threads.py,17,pragma: no cover,not
celery/celery/utils/threads.py,19,noqa,not
celery/celery/utils/threads.py,22,noqa,not
celery/celery/utils/threads.py,23,pragma: no cover,not
celery/celery/utils/threads.py,25,noqa,not
celery/celery/utils/threads.py,27,noqa,not
celery/celery/utils/threads.py,71,pylint: disable=broad-except,not
celery/celery/utils/threads.py,77,exiting by normal means won't work,not
celery/celery/utils/threads.py,84,pragma: no cover,not
celery/celery/utils/threads.py,85,"we lost the race at interpreter shutdown,",not
celery/celery/utils/threads.py,86,so gc collected built-in modules.,not
celery/celery/utils/threads.py,211,pylint: disable=assigning-non-slot,not
celery/celery/utils/threads.py,212,This attribute is defined now.,not
celery/celery/utils/threads.py,238,get_current_worker_task uses this to find,not
celery/celery/utils/threads.py,239,the original task that was executed by the worker.,not
celery/celery/utils/threads.py,328,pragma: no cover,not
celery/celery/utils/threads.py,330,pragma: no cover,not
celery/celery/utils/threads.py,331,- See #706,not
celery/celery/utils/threads.py,332,since each thread has its own greenlet we can just use those as,not
celery/celery/utils/threads.py,333,identifiers for the context.  If greenlets aren't available we,not
celery/celery/utils/threads.py,334,fall back to the  current thread ident.,not
celery/celery/utils/threads.py,335,noqa,not
celery/celery/utils/dispatch/signal.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/dispatch/signal.py,22,noqa,not
celery/celery/utils/dispatch/signal.py,29,pragma: no cover,not
celery/celery/utils/dispatch/signal.py,33,see Issue #2475,not
celery/celery/utils/dispatch/signal.py,55,Bound method,not
celery/celery/utils/dispatch/signal.py,58,Not a bound method,not
celery/celery/utils/dispatch/signal.py,79,pragma: no cover,not
celery/celery/utils/dispatch/signal.py,89,: Holds a dictionary of,not
celery/celery/utils/dispatch/signal.py,90,: ``{receiverkey (id): weakref(receiver)}`` mappings.,not
celery/celery/utils/dispatch/signal.py,100,For convenience we create empty caches even if they are not used.,not
celery/celery/utils/dispatch/signal.py,101,"A note about caching: if use_caching is defined, then for each",not
celery/celery/utils/dispatch/signal.py,102,distinct sender we cache the receivers that sender has in,not
celery/celery/utils/dispatch/signal.py,103,'sender_receivers_cache'.  The cache is cleaned when .connect() or,not
celery/celery/utils/dispatch/signal.py,104,.disconnect() is called and populated on .send().,not
celery/celery/utils/dispatch/signal.py,177,if there's no dispatch_uid then we need to set the,not
celery/celery/utils/dispatch/signal.py,178,dispatch uid to the original func id so we can look,not
celery/celery/utils/dispatch/signal.py,179,it up later with the original func id,not
celery/celery/utils/dispatch/signal.py,289,pylint: disable=broad-except,not
celery/celery/utils/dispatch/signal.py,298,Compat with Django interface.,not
celery/celery/utils/dispatch/signal.py,301,Warning: caller is assumed to hold self.lock,not
celery/celery/utils/dispatch/signal.py,320,We could end up here with NO_RECEIVERS even if we do check this,not
celery/celery/utils/dispatch/signal.py,321,case in .send() prior to calling _Live_receivers()  due to,not
celery/celery/utils/dispatch/signal.py,322,concurrent .send() call.,not
celery/celery/utils/dispatch/signal.py,337,Note: we must cache the weakref versions.,not
celery/celery/utils/dispatch/signal.py,342,Dereference the weak reference.,not
celery/celery/utils/dispatch/signal.py,352,"Mark that the self..receivers first has dead weakrefs. If so,",not
celery/celery/utils/dispatch/signal.py,353,"we will clean those up in connect, disconnect and _live_receivers",not
celery/celery/utils/dispatch/signal.py,354,while holding self.lock.  Note that doing the cleanup here isn't a,not
celery/celery/utils/dispatch/signal.py,355,"good idea, _remove_receiver() will be called as a side effect of",not
celery/celery/utils/dispatch/signal.py,356,"garbage collection, and so the call can happen wh ile we are already",not
celery/celery/utils/dispatch/signal.py,357,holding self.lock.,not
celery/celery/utils/dispatch/weakref_backports.py,37,The self-weakref trick is needed to avoid creating a,not
celery/celery/utils/dispatch/weakref_backports.py,38,reference cycle.,not
celery/celery/utils/dispatch/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/utils/static/__init__.py,8,type: (*str) -> str,not
celery/celery/utils/static/__init__.py,14,type: () -> bytes,not
celery/celery/loaders/default.py,1,-*- coding: utf-8 -*-,not
celery/celery/loaders/default.py,18,: Warns if configuration file is missing if :envvar:`C_WNOCONF` is set.,not
celery/celery/loaders/default.py,37,billiard sets this if forked using execv,not
celery/celery/loaders/base.py,1,-*- coding: utf-8 -*-,not
celery/celery/loaders/base.py,103,"Prior to this point loggers are not yet set up properly, need to",not
celery/celery/loaders/base.py,104,"check responses manually and reraised exceptions if any, otherwise",not
celery/celery/loaders/base.py,105,"they'll be silenced, making it incredibly difficult to debug.",not
celery/celery/loaders/base.py,137,Path includes attribute so can just jump,not
celery/celery/loaders/base.py,138,"here (e.g., ``os.path:abspath``).",not
celery/celery/loaders/base.py,141,Not sure if path is just a module name or if it includes an,not
celery/celery/loaders/base.py,142,"attribute name (e.g., ``os.path``, vs, ``os.path.abspath``).",not
celery/celery/loaders/base.py,146,"Not a module name, so try module + attribute.",not
celery/celery/loaders/base.py,180,## find key/value,not
celery/celery/loaders/base.py,181,ns.key=value|ns_key=value (case insensitive),not
celery/celery/loaders/base.py,185,## find name-space.,not
celery/celery/loaders/base.py,186,.key=value|_key=value expands to default name-space.,not
celery/celery/loaders/base.py,190,find name-space part of key,not
celery/celery/loaders/base.py,195,(type)value makes cast to custom type.,not
celery/celery/loaders/base.py,206,display key name in error message.,not
celery/celery/loaders/base.py,256,Django 1.7 allows for speciying a class name in INSTALLED_APPS.,not
celery/celery/loaders/base.py,257,(Issue #2248).,not
celery/celery/loaders/app.py,1,-*- coding: utf-8 -*-,not
celery/celery/loaders/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/events/cursesmon.py,1,-*- coding: utf-8 -*-,not
celery/celery/events/cursesmon.py,29,this module is considered experimental,not
celery/celery/events/cursesmon.py,30,we don't care about coverage.,not
celery/celery/events/cursesmon.py,37,pragma: no cover,not
celery/celery/events/cursesmon.py,73,include spacing,not
celery/celery/events/cursesmon.py,152,pylint: disable=broad-except,not
celery/celery/events/cursesmon.py,174,pylint: disable=broad-except,not
celery/celery/events/cursesmon.py,232,enter,not
celery/celery/events/cursesmon.py,371,-- Footer,not
celery/celery/events/cursesmon.py,375,Selected Task Info,not
celery/celery/events/cursesmon.py,399,Make ellipsis bold,not
celery/celery/events/cursesmon.py,407,Workers,not
celery/celery/events/cursesmon.py,415,Info,not
celery/celery/events/cursesmon.py,428,Help,not
celery/celery/events/cursesmon.py,446,exception states,not
celery/celery/events/cursesmon.py,448,successful state,not
celery/celery/events/cursesmon.py,450,revoked state,not
celery/celery/events/cursesmon.py,452,greeting,not
celery/celery/events/cursesmon.py,454,started state,not
celery/celery/events/cursesmon.py,485,pragma: no cover,not
celery/celery/events/cursesmon.py,498,pragma: no cover,not
celery/celery/events/cursesmon.py,518,pragma: no cover,not
celery/celery/events/cursesmon.py,539,pragma: no cover,not
celery/celery/events/state.py,1,-*- coding: utf-8 -*-,not
celery/celery/events/state.py,40,TODO: Remove this when we drop Python 2.7 support,SATD
celery/celery/events/state.py,46,pylint: disable=redefined-outer-name,not
celery/celery/events/state.py,47,"We cache globals and attribute lookups, so disable this warning.",not
celery/celery/events/state.py,48,pylint: disable=too-many-function-args,not
celery/celery/events/state.py,49,"For some reason pylint thinks ._event is a method, when it's a property.",not
celery/celery/events/state.py,51,: Set if running PyPy,not
celery/celery/events/state.py,54,: The window (in percentage) is added to the workers heartbeat,not
celery/celery/events/state.py,55,": frequency.  If the time between updates exceeds this window,",not
celery/celery/events/state.py,56,: then the worker is considered to be offline.,not
celery/celery/events/state.py,59,: Max drift between event timestamp and time of event received,not
celery/celery/events/state.py,60,: before we alert that clocks may be unsynchronized.,not
celery/celery/events/state.py,75,: Mapping of task event names to task state.,not
celery/celery/events/state.py,112,noqa: E305,not
celery/celery/events/state.py,117,we use memoize here so the warning is only logged once per hostname,not
celery/celery/events/state.py,127,"some json implementations returns decimal.Decimal objects,",not
celery/celery/events/state.py,128,which aren't compatible with float.,not
celery/celery/events/state.py,173,pragma: no cover,not
celery/celery/events/state.py,221,pragma: no cover,not
celery/celery/events/state.py,276,pragma: no cover,not
celery/celery/events/state.py,279,: How to merge out of order events.,not
celery/celery/events/state.py,280,": Disorder is detected by logical ordering (e.g., :event:`task-received`",not
celery/celery/events/state.py,281,: must've happened before a :event:`task-failed` event).,not
celery/celery/events/state.py,282,:,not
celery/celery/events/state.py,283,: A merge rule consists of a state and a list of fields to keep from,not
celery/celery/events/state.py,284,": that state. ``(RECEIVED, ('name', 'args')``, means the name and args",not
celery/celery/events/state.py,285,": fields are always taken from the RECEIVED state, and any values for",not
celery/celery/events/state.py,286,: these fields received before or after is simply ignored.,not
celery/celery/events/state.py,294,: meth:`info` displays these fields by default.,not
celery/celery/events/state.py,326,using .get is faster than catching KeyError in this case.,not
celery/celery/events/state.py,329,"sets, for example, self.succeeded to the timestamp.",not
celery/celery/events/state.py,332,custom state,not
celery/celery/events/state.py,334,note that precedence here is reversed,not
celery/celery/events/state.py,335,see implementation in celery.states.state.__lt__,not
celery/celery/events/state.py,338,"this state logically happens-before the current state, so merge.",not
celery/celery/events/state.py,347,update current state with info from this event.,not
celery/celery/events/state.py,399,issue github.com/mher/flower/issues/648,not
celery/celery/events/state.py,407,issue github.com/mher/flower/issues/648,not
celery/celery/events/state.py,444,"type: Mapping[TaskName, WeakSet[Task]]",not
celery/celery/events/state.py,450,"type: Mapping[Hostname, WeakSet[Task]]",not
celery/celery/events/state.py,532,noqa: C901,not
celery/celery/events/state.py,533,pylint: disable=too-many-statements,not
celery/celery/events/state.py,534,"This code is highly optimized, but not for reusability.",not
celery/celery/events/state.py,543,"Removing events from task heap is an O(n) operation,",not
celery/celery/events/state.py,544,so easier to just account for the common number of events,not
celery/celery/events/state.py,545,for each task (PENDING->RECEIVED->STARTED->final),not
celery/celery/events/state.py,546,: an O(n) operation,not
celery/celery/events/state.py,552,avoid updating LRU entry at getitem,not
celery/celery/events/state.py,596,"task-sent event is sent by client, not worker",not
celery/celery/events/state.py,616,remove oldest event if exceeding the limit.,not
celery/celery/events/state.py,621,most events will be dated later than the previous.,not
celery/celery/events/state.py,634,add to tasks_by_type index,not
celery/celery/events/dumper.py,1,-*- coding: utf-8 -*-,not
celery/celery/events/dumper.py,47,need to flush so that output can be piped.,not
celery/celery/events/dumper.py,50,pragma: no cover,not
celery/celery/events/dumper.py,107,pragma: no cover,not
celery/celery/events/event.py,14,: Exchange used to send events on.,not
celery/celery/events/event.py,15,": Note: Use :func:`get_exchange` instead, as the type of",not
celery/celery/events/event.py,16,: exchange will vary depending on the broker connection.,not
celery/celery/events/event.py,61,quick hack for Issue #436,SATD
celery/celery/events/dispatcher.py,54,set of callbacks to be called when :meth:`enabled`.,not
celery/celery/events/dispatcher.py,57,set of callbacks to be called when :meth:`disabled`.,not
celery/celery/events/dispatcher.py,159,pylint: disable=broad-except,not
celery/celery/events/dispatcher.py,215,list.clear,not
celery/celery/events/dispatcher.py,231,XXX compat,SATD
celery/celery/events/snapshot.py,1,-*- coding: utf-8 -*-,not
celery/celery/events/snapshot.py,76,flush all received events.,not
celery/celery/events/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/events/receiver.py,107,clients never sync so cannot use their clock value,not
celery/celery/events/receiver.py,129,celery 4.0: List of events,not
celery/celery/concurrency/asynpool.py,1,-*- coding: utf-8 -*-,not
celery/celery/concurrency/asynpool.py,48,pylint: disable=redefined-outer-name,not
celery/celery/concurrency/asynpool.py,49,"We cache globals and attribute lookups, so disable this warning.",not
celery/celery/concurrency/asynpool.py,55,unpack_from supports memoryview in 2.7.6 and 3.3+,not
celery/celery/concurrency/asynpool.py,58,noqa,not
celery/celery/concurrency/asynpool.py,59,<- memoryview,not
celery/celery/concurrency/asynpool.py,61,pragma: no cover,not
celery/celery/concurrency/asynpool.py,63,noqa,not
celery/celery/concurrency/asynpool.py,69,noqa,not
celery/celery/concurrency/asynpool.py,71,noqa,not
celery/celery/concurrency/asynpool.py,72,<-- BytesIO,not
celery/celery/concurrency/asynpool.py,81,: Constant sent by child process when started (ready to accept work),not
celery/celery/concurrency/asynpool.py,84,: A process must've started before this timeout (in secs.) expires.,not
celery/celery/concurrency/asynpool.py,103,gi_frame is None when generator stopped.,not
celery/celery/concurrency/asynpool.py,113,is a weakref,not
celery/celery/concurrency/asynpool.py,178,Workaround for celery/celery#4513,SATD
celery/celery/concurrency/asynpool.py,179,TODO: Remove the fallback to the first arg of the exception,SATD
celery/celery/concurrency/asynpool.py,180,once we drop Python 2.7.,not
celery/celery/concurrency/asynpool.py,208,TODO Delete when drop py2 support as FileNotFoundError is py3,SATD
celery/celery/concurrency/asynpool.py,229,uses the current iterations value for fd,not
celery/celery/concurrency/asynpool.py,234,Track stale FDs for cleanup possibility,not
celery/celery/concurrency/asynpool.py,237,Handle using the correct arguments to the hub method,not
celery/celery/concurrency/asynpool.py,239,Call the hub method,not
celery/celery/concurrency/asynpool.py,245,take note of stale fd,not
celery/celery/concurrency/asynpool.py,246,Remove now defunct fds from the managed list,not
celery/celery/concurrency/asynpool.py,252,then not a list/set ... try dict,not
celery/celery/concurrency/asynpool.py,263,our version sends a WORKER_UP message when the process is ready,not
celery/celery/concurrency/asynpool.py,264,"to accept work, this will tell the parent that the inqueue fd",not
celery/celery/concurrency/asynpool.py,265,is writable.,not
celery/celery/concurrency/asynpool.py,276,add our custom message handler,not
celery/celery/concurrency/asynpool.py,289,header,not
celery/celery/concurrency/asynpool.py,347,process gone,not
celery/celery/concurrency/asynpool.py,364,pylint: disable=method-hidden,not
celery/celery/concurrency/asynpool.py,365,register_with_event_loop overrides this,not
celery/celery/concurrency/asynpool.py,369,"This is always used, since we do not start any threads.",not
celery/celery/concurrency/asynpool.py,376,flush the processes outqueues until they've all terminated.,not
celery/celery/concurrency/asynpool.py,380,make sure tasks with a time limit will time out.,not
celery/celery/concurrency/asynpool.py,382,cannot iterate and remove at the same time,not
celery/celery/concurrency/asynpool.py,400,process already found terminated,not
celery/celery/concurrency/asynpool.py,401,this means its outqueue has already been processed,not
celery/celery/concurrency/asynpool.py,402,by the worker lost handler.,not
celery/celery/concurrency/asynpool.py,446,create queue-pairs for all our processes in advance.,not
celery/celery/concurrency/asynpool.py,451,inqueue fileno -> process mapping,not
celery/celery/concurrency/asynpool.py,453,outqueue fileno -> process mapping,not
celery/celery/concurrency/asynpool.py,455,synqueue fileno -> process mapping,not
celery/celery/concurrency/asynpool.py,458,We keep track of processes that haven't yet,not
celery/celery/concurrency/asynpool.py,459,sent a WORKER_UP message.  If a process fails to send,not
celery/celery/concurrency/asynpool.py,460,this message within _proc_alive_timeout we terminate it,not
celery/celery/concurrency/asynpool.py,461,and hope the next process will recover.,not
celery/celery/concurrency/asynpool.py,468,denormalized set of all inqueues.,not
celery/celery/concurrency/asynpool.py,471,Set of fds being written to (busy),not
celery/celery/concurrency/asynpool.py,474,Set of active co-routines currently writing jobs.,not
celery/celery/concurrency/asynpool.py,477,Set of fds that are busy (executing task),not
celery/celery/concurrency/asynpool.py,481,Holds jobs waiting to be written to child processes.,not
celery/celery/concurrency/asynpool.py,489,"create initial mappings, these will be updated",not
celery/celery/concurrency/asynpool.py,490,"as processes are recycled, or found lost elsewhere.",not
celery/celery/concurrency/asynpool.py,502,Issue #2927,not
celery/celery/concurrency/asynpool.py,506,This method is called whenever the process sentinel is readable.,not
celery/celery/concurrency/asynpool.py,515,we need to duplicate the fd here to carefully,not
celery/celery/concurrency/asynpool.py,516,"control when the fd is removed from the process table,",not
celery/celery/concurrency/asynpool.py,517,as once the original fd is closed we cannot unregister,not
celery/celery/concurrency/asynpool.py,518,"the fd from epoll(7) anymore, causing a 100% CPU poll loop.",not
celery/celery/concurrency/asynpool.py,520,Safely call hub.add_reader for the determined fd,not
celery/celery/concurrency/asynpool.py,539,Add handler for when a process exits (calls maintain_pool),not
celery/celery/concurrency/asynpool.py,541,Handle_result_event is called whenever one of the,not
celery/celery/concurrency/asynpool.py,542,result queues are readable.,not
celery/celery/concurrency/asynpool.py,547,Timers include calling maintain_pool at a regular interval,not
celery/celery/concurrency/asynpool.py,548,to be certain processes are restarted.,not
celery/celery/concurrency/asynpool.py,576,out of scope,not
celery/celery/concurrency/asynpool.py,584,only used by async pool.,not
celery/celery/concurrency/asynpool.py,592,job ready,not
celery/celery/concurrency/asynpool.py,597,remove tref,not
celery/celery/concurrency/asynpool.py,601,only used by async pool.,not
celery/celery/concurrency/asynpool.py,605,job ready,not
celery/celery/concurrency/asynpool.py,609,remove tref,not
celery/celery/concurrency/asynpool.py,631,is a weakref,not
celery/celery/concurrency/asynpool.py,642,If we got the same fd as a previous process then we'll also,not
celery/celery/concurrency/asynpool.py,643,"receive jobs in the old buffer, so we need to reset the",not
celery/celery/concurrency/asynpool.py,644,job._write_to and job._scheduled_for attributes used to recover,not
celery/celery/concurrency/asynpool.py,645,message boundaries when processes exit.,not
celery/celery/concurrency/asynpool.py,654,maintain_pool is called whenever a process exits.,not
celery/celery/concurrency/asynpool.py,659,handle_result_event is called when the processes outqueue is,not
celery/celery/concurrency/asynpool.py,660,readable.,not
celery/celery/concurrency/asynpool.py,671,this remove the file descriptors for a process from,not
celery/celery/concurrency/asynpool.py,672,the indices.  we have to make sure we don't overwrite,not
celery/celery/concurrency/asynpool.py,673,"another processes fds, as the fds may be reused.",not
celery/celery/concurrency/asynpool.py,681,fd hasn't been reused so we can remove it from index.,not
celery/celery/concurrency/asynpool.py,751,puts back at the end of the queue,not
celery/celery/concurrency/asynpool.py,758,"XXX linear lookup, should find a better way,",SATD
celery/celery/concurrency/asynpool.py,759,but this happens rarely and is here to protect against races.,not
celery/celery/concurrency/asynpool.py,764,"called for every event loop iteration, and if there",not
celery/celery/concurrency/asynpool.py,765,are messages pending this will schedule writing one message,not
celery/celery/concurrency/asynpool.py,766,by registering the 'schedule_writes' function for all currently,not
celery/celery/concurrency/asynpool.py,767,inactive inqueues (not already being written to),not
celery/celery/concurrency/asynpool.py,769,consolidate means the event loop will merge them,not
celery/celery/concurrency/asynpool.py,770,and call the callback once with the list writable fds as,not
celery/celery/concurrency/asynpool.py,771,argument.  Using this means we minimize the risk of having,not
celery/celery/concurrency/asynpool.py,772,the same fd receive every task if the pipe read buffer is not,not
celery/celery/concurrency/asynpool.py,773,full.,not
celery/celery/concurrency/asynpool.py,776,Determine which io descriptors are not busy,not
celery/celery/concurrency/asynpool.py,779,Determine hub_add vs hub_remove strategy conditional,not
celery/celery/concurrency/asynpool.py,781,outbound buffer present and idle workers exist,not
celery/celery/concurrency/asynpool.py,783,default is add when data exists in outbound buffer,not
celery/celery/concurrency/asynpool.py,786,calling hub_add vs hub_remove,not
celery/celery/concurrency/asynpool.py,796,Makes sure the fd is removed from tracking when,not
celery/celery/concurrency/asynpool.py,797,"the connection is closed, this is essential as fds may be reused.",not
celery/celery/concurrency/asynpool.py,812,Schedule write operation to ready file descriptor.,not
celery/celery/concurrency/asynpool.py,813,"The file descriptor is writable, but that does not",not
celery/celery/concurrency/asynpool.py,814,mean the process is currently reading from the socket.,not
celery/celery/concurrency/asynpool.py,815,The socket is buffered so writable simply means that,not
celery/celery/concurrency/asynpool.py,816,the buffer can accept at least 1 byte of data.,not
celery/celery/concurrency/asynpool.py,818,This means we have to cycle between the ready fds.,not
celery/celery/concurrency/asynpool.py,819,"the first version used shuffle, but this version",not
celery/celery/concurrency/asynpool.py,820,using `total_writes % ready_fds` is about 30% faster,not
celery/celery/concurrency/asynpool.py,821,"with many processes, and also leans more towards fairness",not
celery/celery/concurrency/asynpool.py,822,in write stats when used with many processes,not
celery/celery/concurrency/asynpool.py,823,"[XXX On macOS, this may vary depending",SATD
celery/celery/concurrency/asynpool.py,824,"on event loop implementation (i.e, select/poll vs epoll), so",not
celery/celery/concurrency/asynpool.py,825,have to test further],not
celery/celery/concurrency/asynpool.py,832,already writing to this fd,not
celery/celery/concurrency/asynpool.py,835,worker is already busy with another task,not
celery/celery/concurrency/asynpool.py,843,"no more messages, remove all inactive fds from the hub.",not
celery/celery/concurrency/asynpool.py,844,this is important since the fds are always writable,not
celery/celery/concurrency/asynpool.py,845,"as long as there's 1 byte left in the buffer, and so",not
celery/celery/concurrency/asynpool.py,846,this may create a spinloop where the event loop,not
celery/celery/concurrency/asynpool.py,847,always wakes up.,not
celery/celery/concurrency/asynpool.py,853,job not accepted by another worker,not
celery/celery/concurrency/asynpool.py,855,keep track of what process the write operation,not
celery/celery/concurrency/asynpool.py,856,was scheduled for.,not
celery/celery/concurrency/asynpool.py,859,write was scheduled for this fd but the process,not
celery/celery/concurrency/asynpool.py,860,has since exited and the message must be sent to,not
celery/celery/concurrency/asynpool.py,861,another process.,not
celery/celery/concurrency/asynpool.py,870,"Try to write immediately, in case there's an error.",not
celery/celery/concurrency/asynpool.py,883,Schedule writing job request for when one of the process,not
celery/celery/concurrency/asynpool.py,884,inqueues are writable.,not
celery/celery/concurrency/asynpool.py,888,"index 1,0 is the job ID.",not
celery/celery/concurrency/asynpool.py,903,writes job to the worker process.,not
celery/celery/concurrency/asynpool.py,904,Operation must complete if more than one byte of data,not
celery/celery/concurrency/asynpool.py,905,was written.  If the broker connection is lost,not
celery/celery/concurrency/asynpool.py,906,and no data was written the operation shall be canceled.,not
celery/celery/concurrency/asynpool.py,910,job result keeps track of what process the job is sent to.,not
celery/celery/concurrency/asynpool.py,915,write header,not
celery/celery/concurrency/asynpool.py,919,pylint: disable=broad-except,not
celery/celery/concurrency/asynpool.py,922,suspend until more data,not
celery/celery/concurrency/asynpool.py,931,write body,not
celery/celery/concurrency/asynpool.py,935,pylint: disable=broad-except,not
celery/celery/concurrency/asynpool.py,938,suspend until more data,not
celery/celery/concurrency/asynpool.py,949,"message written, so this fd is now available",not
celery/celery/concurrency/asynpool.py,951,is a weakref,not
celery/celery/concurrency/asynpool.py,954,Only used when synack is enabled.,not
celery/celery/concurrency/asynpool.py,955,Schedule writing ack response for when the fd is writable.,not
celery/celery/concurrency/asynpool.py,966,writes ack back to the worker if synack enabled.,not
celery/celery/concurrency/asynpool.py,967,"this operation *MUST* complete, otherwise",not
celery/celery/concurrency/asynpool.py,968,the worker process will hang waiting for the ack.,not
celery/celery/concurrency/asynpool.py,974,"process died, we can safely discard the ack at this",not
celery/celery/concurrency/asynpool.py,975,point.,not
celery/celery/concurrency/asynpool.py,980,write header,not
celery/celery/concurrency/asynpool.py,984,pylint: disable=broad-except,not
celery/celery/concurrency/asynpool.py,989,write body,not
celery/celery/concurrency/asynpool.py,993,pylint: disable=broad-except,not
celery/celery/concurrency/asynpool.py,996,suspend until more data,not
celery/celery/concurrency/asynpool.py,1001,"message written, so this fd is now available",not
celery/celery/concurrency/asynpool.py,1007,cancel all tasks that haven't been accepted so that NACK is sent.,not
celery/celery/concurrency/asynpool.py,1012,clear the outgoing buffer as the tasks will be redelivered by,not
celery/celery/concurrency/asynpool.py,1013,the broker anyway.,not
celery/celery/concurrency/asynpool.py,1020,...but we must continue writing the payloads we already started,not
celery/celery/concurrency/asynpool.py,1021,to keep message boundaries.,not
celery/celery/concurrency/asynpool.py,1022,The messages may be NACK'ed later if synack is enabled.,not
celery/celery/concurrency/asynpool.py,1024,flush outgoing buffers,not
celery/celery/concurrency/asynpool.py,1037,hasn't started writing the job so can,not
celery/celery/concurrency/asynpool.py,1038,"discard the task, but we must also remove",not
celery/celery/concurrency/asynpool.py,1039,it from the Pool._cache.,not
celery/celery/concurrency/asynpool.py,1045,removes from Pool._cache,not
celery/celery/concurrency/asynpool.py,1057,workers may have exited in the meantime.,not
celery/celery/concurrency/asynpool.py,1059,don't busyloop,not
celery/celery/concurrency/asynpool.py,1071,process exited,not
celery/celery/concurrency/asynpool.py,1105,NOTE: Pipes must be set O_NONBLOCK at creation time (the original,not
celery/celery/concurrency/asynpool.py,1106,"fd), otherwise it won't be possible to change the flags until",not
celery/celery/concurrency/asynpool.py,1107,there's an actual reader/writer on the other side.,not
celery/celery/concurrency/asynpool.py,1140,job was partially written,not
celery/celery/concurrency/asynpool.py,1143,"job was only scheduled to be written to this process,",not
celery/celery/concurrency/asynpool.py,1144,but no data was sent so put it back on the outbound_buffer.,not
celery/celery/concurrency/asynpool.py,1224,this is only used by the original pool that used a shared,not
celery/celery/concurrency/asynpool.py,1225,queue for all processes.,not
celery/celery/concurrency/asynpool.py,1228,"these attributes are unused by this class, but we'll still",not
celery/celery/concurrency/asynpool.py,1229,have to initialize them for compatibility.,not
celery/celery/concurrency/asynpool.py,1271,worker terminated by signal:,not
celery/celery/concurrency/asynpool.py,1272,"we cannot reuse the sockets again, because we don't know if",not
celery/celery/concurrency/asynpool.py,1273,"the process wrote/read anything frmo them, and if so we cannot",not
celery/celery/concurrency/asynpool.py,1274,restore the message boundaries.,not
celery/celery/concurrency/asynpool.py,1276,"job was not acked, so find another worker to send it to.",not
celery/celery/concurrency/asynpool.py,1285,Replace queues to avoid reuse,not
celery/celery/concurrency/asynpool.py,1332,unused,not
celery/celery/concurrency/asynpool.py,1336,Pool._help_stuff_finished is a classmethod so we have to use this,not
celery/celery/concurrency/asynpool.py,1337,trick to modify the arguments passed to it.,not
celery/celery/concurrency/asynpool.py,1342,pylint: disable=arguments-differ,not
celery/celery/concurrency/base.py,1,-*- coding: utf-8 -*-,not
celery/celery/concurrency/base.py,58,: set to true if the pool can be shutdown from within,not
celery/celery/concurrency/base.py,59,: a signal handler.,not
celery/celery/concurrency/base.py,62,: set to true if pool uses greenlets.,not
celery/celery/concurrency/base.py,69,: only used by multiprocessing pool,not
celery/celery/concurrency/solo.py,1,-*- coding: utf-8 -*-,not
celery/celery/concurrency/thread.py,1,-*- coding: utf-8 -*-,not
celery/celery/concurrency/thread.py,31,"from 3.5, it is calculated from number of CPUs",not
celery/celery/concurrency/thread.py,51,TODO use a public api to retrieve the current number of threads,SATD
celery/celery/concurrency/thread.py,52,in the executor when available. (Currently not available).,not
celery/celery/concurrency/gevent.py,1,-*- coding: utf-8 -*-,not
celery/celery/concurrency/gevent.py,12,pragma: no cover,not
celery/celery/concurrency/gevent.py,13,noqa,not
celery/celery/concurrency/gevent.py,17,pylint: disable=redefined-outer-name,not
celery/celery/concurrency/gevent.py,18,"We cache globals and attribute lookups, so disable this warning.",not
celery/celery/concurrency/prefork.py,1,-*- coding: utf-8 -*-,not
celery/celery/concurrency/prefork.py,27,: List of signals to reset when a child process starts.,not
celery/celery/concurrency/prefork.py,32,: List of signals to ignore when a child process starts.,not
celery/celery/concurrency/prefork.py,52,This is for Windows and other platforms not supporting,not
celery/celery/concurrency/prefork.py,53,fork().  Note that init_worker makes sure it's only,not
celery/celery/concurrency/prefork.py,54,run once per process.,not
celery/celery/concurrency/prefork.py,59,logfile path will differ so need to set up logging again.,not
celery/celery/concurrency/prefork.py,67,pool did execv after fork,not
celery/celery/concurrency/prefork.py,73,enables fast_trace_task optimization.,not
celery/celery/concurrency/prefork.py,74,rebuild execution handler for all tasks.,not
celery/celery/concurrency/prefork.py,119,Create proxy methods,not
celery/celery/concurrency/prefork.py,125,FIXME add to billiard,SATD
celery/celery/concurrency/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/concurrency/__init__.py,5,Import from kombu directly as it's used,not
celery/celery/concurrency/__init__.py,6,"early in the import stage, where celery.utils loads",not
celery/celery/concurrency/__init__.py,7,"too much (e.g., for eventlet patching)",SATD
celery/celery/concurrency/__init__.py,17,XXX compat alias,SATD
celery/celery/concurrency/__init__.py,21,noqa: F401,not
celery/celery/concurrency/eventlet.py,1,-*- coding: utf-8 -*-,not
celery/celery/concurrency/eventlet.py,7,noqa,not
celery/celery/concurrency/eventlet.py,10,noqa,not
celery/celery/concurrency/eventlet.py,12,noqa,not
celery/celery/concurrency/eventlet.py,22,": Warn if we couldn't patch early enough,",not
celery/celery/concurrency/eventlet.py,23,: and thread/socket depending celery modules have already been loaded.,not
celery/celery/concurrency/eventlet.py,25,pragma: no cover,not
celery/celery/contrib/migrate.py,1,-*- coding: utf-8 -*-,not
celery/celery/contrib/migrate.py,61,use raw message body.,not
celery/celery/contrib/migrate.py,67,"remove compression header, as this will be inserted again",not
celery/celery/contrib/migrate.py,68,when the message is recompressed.,not
celery/celery/contrib/migrate.py,273,start migrating messages.,not
celery/celery/contrib/migrate.py,276,pragma: no cover,not
celery/celery/contrib/migrate.py,322,declare all queues on the new broker.,not
celery/celery/contrib/migrate.py,387,adding the limit means that we don't have to consume any more,not
celery/celery/contrib/migrate.py,388,when we've found everything.,not
celery/celery/contrib/migrate.py,404,<- name of task,not
celery/celery/contrib/pytest.py,14,pylint: disable=redefined-outer-name,not
celery/celery/contrib/pytest.py,15,"Well, they're called fixtures....",not
celery/celery/contrib/pytest.py,20,add the pytest.mark.celery() marker registration to the pytest.ini [markers] section,not
celery/celery/contrib/pytest.py,21,this prevents pytest 4.5 and newer from issueing a warning about an unknown marker,not
celery/celery/contrib/pytest.py,22,and shows helpful marker documentation when running pytest --markers.,not
celery/celery/contrib/pytest.py,33,"type: (Any, Any, Any, **Any) -> Celery",not
celery/celery/contrib/pytest.py,48,type: () -> bool,not
celery/celery/contrib/pytest.py,63,"type: (Any, Any, Any, Any, Any) -> Celery",not
celery/celery/contrib/pytest.py,83,"type: (Any, Celery, Sequence[str], str, Any) -> WorkController",not
celery/celery/contrib/pytest.py,96,type: () -> bool,not
celery/celery/contrib/pytest.py,103,type: () -> Sequence[str],not
celery/celery/contrib/pytest.py,114,"type: () -> Union[str, Any]",not
celery/celery/contrib/pytest.py,125,"type: () -> Mapping[str, Any]",not
celery/celery/contrib/pytest.py,136,"type: () -> Mapping[str, Any]",not
celery/celery/contrib/pytest.py,147,"type: () -> Mapping[str, Any]",not
celery/celery/contrib/pytest.py,180,"type: (Any, Celery, Sequence[str], str, Any) -> WorkController",not
celery/celery/contrib/rdb.py,1,-*- coding: utf-8 -*-,not
celery/celery/contrib/rdb.py,66,: Holds the currently active debugger.,not
celery/celery/contrib/rdb.py,177,this raises a BdbQuit exception that we're unable to catch.,not
celery/celery/contrib/sphinx.py,1,-*- coding: utf-8 -*-,not
celery/celery/contrib/sphinx.py,39,pragma: no cover,not
celery/celery/contrib/sphinx.py,41,Py2,not
celery/celery/contrib/sphinx.py,42,noqa,not
celery/celery/contrib/sphinx.py,70,Normally checks if *self.object* is really defined in the module,not
celery/celery/contrib/sphinx.py,71,given by *self.modname*. But since functions decorated with the @task,not
celery/celery/contrib/sphinx.py,72,"decorator are instances living in the celery.local, we have to check",not
celery/celery/contrib/sphinx.py,73,the wrapped function instead.,not
celery/celery/contrib/sphinx.py,89,Celery tasks created with the @task decorator have the property,not
celery/celery/contrib/sphinx.py,90,"that *obj.__doc__* and *obj.__class__.__doc__* are equal, which",not
celery/celery/contrib/sphinx.py,91,trips up the logic in sphinx.ext.autodoc that is supposed to,not
celery/celery/contrib/sphinx.py,92,suppress repetition of class documentation in an instance of the,not
celery/celery/contrib/sphinx.py,93,class. This overrides that behavior.,not
celery/celery/contrib/abortable.py,1,-*- coding: utf-8 -*-,not
celery/celery/contrib/abortable.py,131,"TODO: store_result requires all four arguments to be set,",SATD
celery/celery/contrib/abortable.py,132,but only state should be updated here,not
celery/celery/contrib/testing/mocks.py,18,"type: (str, str, Sequence, Mapping, Sequence[Signature],",not
celery/celery/contrib/testing/mocks.py,19,"Sequence[Signature], Sequence[Signature],",not
celery/celery/contrib/testing/mocks.py,20,"str, bool, **Any) -> Any",not
celery/celery/contrib/testing/mocks.py,43,"type: (str, str, Sequence, Mapping, Sequence[Signature],",not
celery/celery/contrib/testing/mocks.py,44,"Sequence[Signature], Sequence[Signature]) -> Any",not
celery/celery/contrib/testing/mocks.py,68,"type: (Celery, Signature, bool, Any) -> Any",not
celery/celery/contrib/testing/tasks.py,9,type: () -> str,not
celery/celery/contrib/testing/app.py,12,: Contains the default configuration values for the test app.,not
celery/celery/contrib/testing/app.py,33,Workaround to allow unittest.mock to patch this object,SATD
celery/celery/contrib/testing/app.py,34,in Python 3.8 and above.,not
celery/celery/contrib/testing/app.py,52,noqa,not
celery/celery/contrib/testing/worker.py,33,"type: (*Any, **Any) -> None",not
celery/celery/contrib/testing/worker.py,38,type: (celery.worker.consumer.Consumer) -> None,not
celery/celery/contrib/testing/worker.py,45,type: () -> None,not
celery/celery/contrib/testing/worker.py,64,"type: (Celery, int, str, Union[str, int],",not
celery/celery/contrib/testing/worker.py,65,"str, bool, float, **Any) -> # Iterable",not
celery/celery/contrib/testing/worker.py,98,"type: (Celery, int, str, Union[str, int], str, Any, **Any) -> Iterable",not
celery/celery/contrib/testing/worker.py,107,Make sure we can connect to the broker,not
celery/celery/contrib/testing/worker.py,118,not allowed to override TestWorkController.on_consumer_ready,not
celery/celery/contrib/testing/worker.py,145,"type (Celery, int, str, Union[int, str], str, **Any) -> Iterable",not
celery/celery/contrib/testing/worker.py,161,"type: (Celery, Union[str, int], str) -> None",not
celery/celery/contrib/testing/manager.py,34,"type: (float, bool, TextIO, TextIO) -> None",not
celery/celery/contrib/testing/manager.py,42,"type: (str, str) -> None",not
celery/celery/contrib/testing/manager.py,46,type: (Sequence[AsyncResult]) -> Sequence[str],not
celery/celery/contrib/testing/manager.py,53,"type: (Callable, Sequence[Any], str, Tuple, Dict, Callable,",not
celery/celery/contrib/testing/manager.py,54,"int, float, float, float, bool, **Any) -> Any",not
celery/celery/apps/multi.py,315,Numbers in args always refers to the index in the list of names.,not
celery/celery/apps/multi.py,316,"(e.g., `start foo bar baz -c:1` where 1 is foo, 2 is bar, and so on).",not
celery/celery/apps/beat.py,1,-*- coding: utf-8 -*-,not
celery/celery/apps/beat.py,49,XXX use scheduler,SATD
celery/celery/apps/beat.py,118,flake8: noqa,not
celery/celery/apps/beat.py,126,Run the worker init handler.,not
celery/celery/apps/beat.py,127,(Usually imports task modules and such.),not
celery/celery/apps/worker.py,1,-*- coding: utf-8 -*-,not
celery/celery/apps/worker.py,95,this signal can be used to set up configuration for,not
celery/celery/apps/worker.py,96,workers by name.,not
celery/celery/apps/worker.py,121,apply task execution optimizations,not
celery/celery/apps/worker.py,122,-- This will finalize the app!,not
celery/celery/apps/worker.py,129,"this signal can be used to, for example, change queues after",not
celery/celery/apps/worker.py,130,the -Q option has been applied.,not
celery/celery/apps/worker.py,147,Dump configuration to screen so we have some basic information,not
celery/celery/apps/worker.py,148,for when users sends bug reports.,SATD
celery/celery/apps/worker.py,173,pragma: no cover,not
celery/celery/apps/worker.py,197,pragma: no cover,not
celery/celery/apps/worker.py,224,integrate the ASCII art.,not
celery/celery/apps/worker.py,238,Install signal handler so SIGHUP restarts the worker.,not
celery/celery/apps/worker.py,240,"only install HUP handler if detached from terminal,",not
celery/celery/apps/worker.py,241,so closing the terminal window doesn't restart the worker,not
celery/celery/apps/worker.py,242,into the background.,not
celery/celery/apps/worker.py,244,macOS can't exec from a process using threads.,not
celery/celery/apps/worker.py,245,See https://github.com/celery/celery/issues#issue/152,not
celery/celery/apps/worker.py,292,pragma: no cover,not
celery/celery/apps/worker.py,297,pragma: no cover,not
celery/celery/apps/worker.py,307,pragma: no cover,not
celery/celery/apps/worker.py,312,pragma: no cover,not
celery/celery/apps/worker.py,338,Jython/PyPy does not have sys._current_frames,not
celery/celery/apps/worker.py,339,pragma: no cover,not
celery/celery/apps/worker.py,350,pragma: no cover,not
celery/celery/apps/worker.py,356,gevent does not pass standard signal handler args,not
celery/celery/worker/request.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/request.py,37,pylint: disable=redefined-outer-name,not
celery/celery/worker/request.py,38,"We cache globals and attribute lookups, so disable this warning.",not
celery/celery/worker/request.py,50,this is also called by celery.app.trace.setup_worker_optimizations,not
celery/celery/worker/request.py,57,noqa: E305,not
celery/celery/worker/request.py,59,Localize,not
celery/celery/worker/request.py,81,pragma: no cover,not
celery/celery/worker/request.py,129,"timezone means the message is timezone-aware, and the only timezone",not
celery/celery/worker/request.py,130,supported at this point is UTC.,not
celery/celery/worker/request.py,167,this is a reference pass to avoid memory usage burst,not
celery/celery/worker/request.py,289,XXX compat,SATD
celery/celery/worker/request.py,292,noqa,not
celery/celery/worker/request.py,298,XXX compat,SATD
celery/celery/worker/request.py,301,noqa,not
celery/celery/worker/request.py,307,used by rpc backend when failures reported by parent process,not
celery/celery/worker/request.py,312,used similarly to reply_to,not
celery/celery/worker/request.py,343,cannot create weakref to None,not
celery/celery/worker/request.py,357,acknowledge task as being processed.,not
celery/celery/worker/request.py,363,pylint: disable=unpacking-non-sequence,not
celery/celery/worker/request.py,364,"payload is a property, so pylint doesn't think it's a tuple.",not
celery/celery/worker/request.py,392,is a weakref,not
celery/celery/worker/request.py,431,Convert monotonic time_accepted to absolute time,not
celery/celery/worker/request.py,499,(acks_late) acknowledge after result stored.,not
celery/celery/worker/request.py,514,supporting the behaviour where a task failed and,not
celery/celery/worker/request.py,515,need to be removed from prefetched local queue,not
celery/celery/worker/request.py,518,These are special cases where the process would not have had time,not
celery/celery/worker/request.py,519,to write the result.,not
celery/celery/worker/request.py,523,already sent revoked event,not
celery/celery/worker/request.py,525,only mark as failure if task has not been requeued,not
celery/celery/worker/request.py,592,used by backend.mark_as_failure when failure is reported,not
celery/celery/worker/request.py,593,by parent process,not
celery/celery/worker/request.py,594,pylint: disable=unpacking-non-sequence,not
celery/celery/worker/request.py,595,"payload is a property, so pylint doesn't think it's a tuple.",not
celery/celery/worker/request.py,601,used by backend.mark_as_failure when failure is reported,not
celery/celery/worker/request.py,602,by parent process,not
celery/celery/worker/request.py,603,pylint: disable=unpacking-non-sequence,not
celery/celery/worker/request.py,604,"payload is a property, so pylint doesn't think it's a tuple.",not
celery/celery/worker/request.py,610,used by backend.on_chord_part_return when failures reported,not
celery/celery/worker/request.py,611,by parent process,not
celery/celery/worker/request.py,618,pylint: disable=unpacking-non-sequence,not
celery/celery/worker/request.py,619,"payload is a property, so pylint doesn't think it's a tuple.",not
celery/celery/worker/request.py,654,cannot create weakref to None,not
celery/celery/worker/request.py,655,pylint: disable=attribute-defined-outside-init,not
celery/celery/worker/loops.py,15,pylint: disable=redefined-outer-name,not
celery/celery/worker/loops.py,16,"We cache globals and attribute lookups, so disable this warning.",not
celery/celery/worker/loops.py,24,pylint: disable=broad-except,not
celery/celery/worker/loops.py,33,negotiated,not
celery/celery/worker/loops.py,55,"did_start_ok will verify that pool processes were able to start,",not
celery/celery/worker/loops.py,56,"but this will only work the first time we start, as",not
celery/celery/worker/loops.py,57,maxtasksperchild will mess up metrics.,not
celery/celery/worker/loops.py,61,consumer.consume() may have prefetched up to our,not
celery/celery/worker/loops.py,62,limit - drain an event so we're in a clean state,not
celery/celery/worker/loops.py,63,prior to starting our event loop.,not
celery/celery/worker/loops.py,67,FIXME: Use loop.run_forever,SATD
celery/celery/worker/loops.py,68,"Tried and works, but no time to test properly before release.",not
celery/celery/worker/loops.py,76,We only update QoS when there's no more messages to read.,not
celery/celery/worker/loops.py,77,"This groups together qos calls, and makes sure that remote",not
celery/celery/worker/loops.py,78,control commands will be prioritized over task messages.,not
celery/celery/worker/loops.py,89,pylint: disable=broad-except,not
celery/celery/worker/state.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/state.py,30,: Worker software/platform information.,not
celery/celery/worker/state.py,37,: maximum number of revokes to keep in memory.,not
celery/celery/worker/state.py,40,: how many seconds a revoke will be active before,not
celery/celery/worker/state.py,41,: being expired when the max limit has been exceeded.,not
celery/celery/worker/state.py,44,: Mapping of reserved task_id->Request.,not
celery/celery/worker/state.py,47,: set of all reserved :class:`~celery.worker.request.Request`'s.,not
celery/celery/worker/state.py,50,: set of currently active :class:`~celery.worker.request.Request`'s.,not
celery/celery/worker/state.py,53,": count of tasks accepted by the worker, sorted by type.",not
celery/celery/worker/state.py,56,: count of all tasks accepted by the worker,not
celery/celery/worker/state.py,59,: the list of currently revoked tasks.  Persistent if ``statedb`` set.,not
celery/celery/worker/state.py,116,pragma: no cover,not
celery/celery/worker/state.py,142,noqa,not
celery/celery/worker/state.py,154,noqa,not
celery/celery/worker/state.py,240,purge expired items at boot,not
celery/celery/worker/state.py,249,(pre 3.0.18) used to be stored as a dict,not
celery/celery/worker/control.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/control.py,45,global dict.,not
celery/celery/worker/control.py,46,"-""-",not
celery/celery/worker/control.py,79,-- App,not
celery/celery/worker/control.py,89,XXX < backwards compatible,SATD
celery/celery/worker/control.py,104,-- Task,not
celery/celery/worker/control.py,148,pylint: disable=redefined-outer-name,not
celery/celery/worker/control.py,149,XXX Note that this redefines `terminate`:,SATD
celery/celery/worker/control.py,150,Outside of this scope that is a function.,not
celery/celery/worker/control.py,151,supports list argument since 3.1,not
celery/celery/worker/control.py,200,pylint: disable=redefined-outer-name,not
celery/celery/worker/control.py,201,XXX Note that this redefines `terminate`:,SATD
celery/celery/worker/control.py,202,Outside of this scope that is a function.,not
celery/celery/worker/control.py,253,-- Events,not
celery/celery/worker/control.py,305,-- Worker,not
celery/celery/worker/control.py,310,pylint: disable=redefined-outer-name,not
celery/celery/worker/control.py,311,XXX Note that this redefines `revoked`:,SATD
celery/celery/worker/control.py,312,Outside of this scope that is a function.,not
celery/celery/worker/control.py,413,-- Debugging,not
celery/celery/worker/control.py,420,pragma: no cover,not
celery/celery/worker/control.py,455,pragma: no cover,not
celery/celery/worker/control.py,462,-- Pool,not
celery/celery/worker/control.py,523,-- Queues,not
celery/celery/worker/autoscale.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/strategy.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/strategy.py,24,pylint: disable=redefined-outer-name,not
celery/celery/worker/strategy.py,25,"We cache globals and attribute lookups, so disable this warning.",not
celery/celery/worker/strategy.py,32,pylint: disable=pointless-statement,not
celery/celery/worker/strategy.py,76,pylint: disable=pointless-statement,not
celery/celery/worker/strategy.py,115,task event related,not
celery/celery/worker/strategy.py,116,(optimized to avoid calling request.send_event),not
celery/celery/worker/components.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/components.py,41,does not use dedicated timer thread.,not
celery/celery/worker/components.py,45,"Default Timer is set by the pool, as for example, the",not
celery/celery/worker/components.py,46,eventlet pool needs a custom timer implementation.,not
celery/celery/worker/components.py,91,make clock use dummy lock,not
celery/celery/worker/components.py,93,multiprocessing's ApplyResult uses this lock.,not
celery/celery/worker/components.py,96,pragma: no cover,not
celery/celery/worker/components.py,142,pragma: no cover,not
celery/celery/worker/worker.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/worker.py,44,pragma: no cover,not
celery/celery/worker/worker.py,45,noqa,not
celery/celery/worker/worker.py,50,: Default socket timeout at shutdown.,not
celery/celery/worker/worker.py,78,: contains the exit code if a :exc:`SystemExit` event is handled.,not
celery/celery/worker/worker.py,113,Set default concurrency,not
celery/celery/worker/worker.py,120,Options,not
celery/celery/worker/worker.py,124,"this connection won't establish, only used for params",not
celery/celery/worker/worker.py,134,Initialize bootsteps,not
celery/celery/worker/worker.py,189,"Update celery_include to have all known task modules, so that we",not
celery/celery/worker/worker.py,190,ensure all task modules are imported in case an execv happens.,not
celery/celery/worker/worker.py,234,Issue 877,not
celery/celery/worker/worker.py,267,if blueprint does not exist it means that we had an,not
celery/celery/worker/worker.py,268,error before the bootsteps could be initialized.,not
celery/celery/worker/worker.py,270,Issue 975,not
celery/celery/worker/worker.py,362,O maps to -O=fair,not
celery/celery/worker/worker.py,367,XXX use pool,SATD
celery/celery/worker/worker.py,368,XXX use statedb,SATD
celery/celery/worker/worker.py,369,XXX use time_limit,SATD
celery/celery/worker/worker.py,370,XXX use soft_time_limit,SATD
celery/celery/worker/worker.py,371,XXX use scheduler,SATD
celery/celery/worker/heartbeat.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/heartbeat.py,34,Make event dispatcher start/stop us when enabled/disabled.,not
celery/celery/worker/heartbeat.py,38,Only send heartbeat_sent signal if it has receivers.,not
celery/celery/worker/pidbox.py,42,just increase clock as clients usually don't,not
celery/celery/worker/pidbox.py,43,have a valid clock to adjust with.,not
celery/celery/worker/consumer/mingle.py,58,delete my own response,not
celery/celery/worker/consumer/mingle.py,67,pylint: disable=broad-except,not
celery/celery/worker/consumer/tasks.py,30,- RabbitMQ 3.3 completely redefines how basic_qos works..,not
celery/celery/worker/consumer/tasks.py,31,"This will detect if the new qos smenatics is in effect,",not
celery/celery/worker/consumer/tasks.py,32,and if so make sure the 'apply_global' flag is set on qos updates.,not
celery/celery/worker/consumer/tasks.py,35,set initial prefetch count,not
celery/celery/worker/consumer/gossip.py,94,pylint: disable=broad-except,not
celery/celery/worker/consumer/gossip.py,118,not for us,not
celery/celery/worker/consumer/gossip.py,155,pylint: disable=broad-except,not
celery/celery/worker/consumer/gossip.py,188,For redis when `fanout_patterns=False` (See Issue #1882),not
celery/celery/worker/consumer/gossip.py,198,proto2: hostname in header; proto1: in body,not
celery/celery/worker/consumer/connection.py,27,"We must set self.connection to None here, so",not
celery/celery/worker/consumer/connection.py,28,that the green pidbox thread exits.,not
celery/celery/worker/consumer/connection.py,37,don't send password.,not
celery/celery/worker/consumer/consumer.py,1,-*- coding: utf-8 -*-,not
celery/celery/worker/consumer/consumer.py,72,: Error message for when an unregistered task is received.,not
celery/celery/worker/consumer/consumer.py,88,: Error message for when an invalid task message is received.,not
celery/celery/worker/consumer/consumer.py,116,v2 protocol does not deserialize body,not
celery/celery/worker/consumer/consumer.py,130,: Optional callback called the first time the worker,not
celery/celery/worker/consumer/consumer.py,131,: is ready to receive tasks.,not
celery/celery/worker/consumer/consumer.py,134,: The current worker pool instance.,not
celery/celery/worker/consumer/consumer.py,137,": A timer used for high-priority internal tasks, such",not
celery/celery/worker/consumer/consumer.py,138,: as sending heartbeats.,not
celery/celery/worker/consumer/consumer.py,141,first start is the same as a restart,not
celery/celery/worker/consumer/consumer.py,190,"this contains a tokenbucket for each task type by name, used for",not
celery/celery/worker/consumer/consumer.py,191,"rate limits, or None if rate limits are disabled for that task.",not
celery/celery/worker/consumer/consumer.py,207,"there's a gevent bug that causes timeouts to not be reset,",not
celery/celery/worker/consumer/consumer.py,208,"so if the connection timeout is exceeded once, it can NEVER",not
celery/celery/worker/consumer/consumer.py,209,connect again.,not
celery/celery/worker/consumer/consumer.py,233,pylint: disable=broad-except,not
celery/celery/worker/consumer/consumer.py,258,prefetch disabled,not
celery/celery/worker/consumer/consumer.py,278,"no request, break",not
celery/celery/worker/consumer/consumer.py,285,"requeue to head, keep the order.",not
celery/celery/worker/consumer/consumer.py,294,"no tokens, break",not
celery/celery/worker/consumer/consumer.py,320,"If we're not retrying connections, no need to catch",not
celery/celery/worker/consumer/consumer.py,321,connection errors,not
celery/celery/worker/consumer/consumer.py,325,Too many open files,not
celery/celery/worker/consumer/consumer.py,343,pylint: disable=broad-except,not
celery/celery/worker/consumer/consumer.py,385,Clear internal queues to get rid of old messages.,not
celery/celery/worker/consumer/consumer.py,386,"They can't be acked anyway, as a delivery tag is specific",not
celery/celery/worker/consumer/consumer.py,387,to the current channel.,not
celery/celery/worker/consumer/consumer.py,419,Callback called for each retry while the connection,not
celery/celery/worker/consumer/consumer.py,420,can't be established.,not
celery/celery/worker/consumer/consumer.py,430,"remember that the connection is lazy, it won't establish",not
celery/celery/worker/consumer/consumer.py,431,until needed.,not
celery/celery/worker/consumer/consumer.py,433,"retry disabled, just call connect directly.",not
celery/celery/worker/consumer/consumer.py,455,"Must use in' here, as __missing__ will automatically",not
celery/celery/worker/consumer/consumer.py,456,create queues when :setting:`task_create_missing_queues` is enabled.,not
celery/celery/worker/consumer/consumer.py,457,(Issue #1079),not
celery/celery/worker/consumer/consumer.py,501,proto1,not
celery/celery/worker/consumer/consumer.py,545,"payload will only be set for v1 protocol, since v2",not
celery/celery/worker/consumer/consumer.py,546,will defer deserializing the message body to the pool.,not
celery/celery/worker/consumer/consumer.py,549,protocol v2,not
celery/celery/worker/consumer/consumer.py,555,pylint: disable=broad-except,not
celery/celery/worker/consumer/consumer.py,558,protocol v1,not
celery/celery/worker/consumer/events.py,37,flush events sent while connection was down.,not
celery/celery/worker/consumer/events.py,44,we currently only buffer events when the event loop is enabled,not
celery/celery/worker/consumer/events.py,45,"XXX This excludes eventlet/gevent, which should actually buffer.",SATD
celery/celery/worker/consumer/events.py,59,remember changes from remote control commands:,not
celery/celery/worker/consumer/events.py,62,close custom connection,not
celery/celery/security/certificate.py,1,-*- coding: utf-8 -*-,not
celery/celery/security/serialization.py,1,-*- coding: utf-8 -*-,not
celery/celery/security/serialization.py,36,"What we sign is the serialized body, not the body itself.",not
celery/celery/security/serialization.py,37,this way the receiver doesn't have to decode the contents,not
celery/celery/security/serialization.py,38,to verify the signature (and thus avoiding potential flaws,not
celery/celery/security/serialization.py,39,in the decoding step).,not
celery/celery/security/serialization.py,72,shift 3 bits right to get signature length,not
celery/celery/security/serialization.py,73,2048bit rsa key has a signature length of 256,not
celery/celery/security/serialization.py,74,4096bit rsa key has a signature length of 512,not
celery/celery/security/utils.py,1,-*- coding: utf-8 -*-,not
celery/celery/security/key.py,1,-*- coding: utf-8 -*-,not
celery/celery/security/__init__.py,1,-*- coding: utf-8 -*-,not
celery/celery/security/__init__.py,11,noqa: need cryptography first,not
celery/celery/security/__init__.py,43,noqa,not
celery/celery/security/__init__.py,57,check conf for sane security settings,not
celery/celery/fixups/django.py,28,TypeError added for celery#962,not
celery/celery/fixups/django.py,42,noqa,not
celery/celery/fixups/django.py,60,Need to add project directory to path.,not
celery/celery/fixups/django.py,61,"The project directory has precedence over system modules,",not
celery/celery/fixups/django.py,62,so we prepend it to the path.,not
celery/celery/fixups/django.py,83,call django.setup() before task modules are imported,not
celery/celery/fixups/django.py,136,"Child process must validate models again if on Windows,",not
celery/celery/fixups/django.py,137,or if they were started using execv.,not
celery/celery/fixups/django.py,141,close connections:,not
celery/celery/fixups/django.py,142,"the parent process may have established these,",not
celery/celery/fixups/django.py,143,so need to close them.,not
celery/celery/fixups/django.py,145,calling db.close() on some DB connections will cause,not
celery/celery/fixups/django.py,146,the inherited DB conn to also get broken in the parent,not
celery/celery/fixups/django.py,147,process so we need to remove it without triggering any,not
celery/celery/fixups/django.py,148,network IO that close() might cause.,not
celery/celery/fixups/django.py,153,use the _ version to avoid DB_REUSE preventing the conn.close() call,not
celery/celery/fixups/django.py,169,See https://groups.google.com/group/django-users/,not
celery/celery/fixups/django.py,170,browse_thread/thread/78200863d0c07c6d/,not
